
sw/inc/fmtcol.hxx:88: To get UL- / LR- / FontHeight-changes
sw/inc/ndtxt.hxx:665: END OF BULLET/NUMBERING/OUTLINE STUFF
sw/inc/swmodule.hxx:210: Return defined DocStat - WordDelimiter
sw/inc/viewsh.hxx:388: DOCUMENT COMPATIBILITY FLAGS START
sw/inc/viewsh.hxx:422: DOCUMENT COMPATIBILITY FLAGS END
sw/qa/extras/ooxmlexport/ooxmlexport2.cxx:361: Order was: insideH, end, insideV
sw/qa/extras/ooxmlexport/ooxmlexport5.cxx:329: Check w:cols comes under Default sectPr
sw/source/core/doc/DocumentContentOperationsManager.cxx:3511: JP 06.01.98: MUSS noch optimiert werden
sw/source/core/doc/DocumentContentOperationsManager.cxx:3547: JP 06.01.98: MUSS noch optimiert werden
sw/source/core/doc/DocumentContentOperationsManager.cxx:3820: JP 06.01.98: MUSS noch optimiert werden
sw/source/core/doc/DocumentContentOperationsManager.cxx:3918: JP 06.01.98: MUSS noch optimiert werden
sw/source/core/doc/DocumentStylePoolManager.cxx:2194: if( !bFnd || !pNewPgDsc->HasWriterListeners
sw/source/core/doc/docredln.cxx:1670: SwDoc* pDoc = 0
    if( !nP && nL && nL == size
    pDoc = front()->GetDoc
sw/source/core/layout/atrfrm.cxx:3460: FALLBACKBREAKHERE assert wrong usage
sw/source/core/layout/paintfrm.cxx:4069: OD 02.07.2003 #108784# - debug assert
sw/source/core/text/itrform2.cxx:210: Flies + Initialen werden nicht beim Underflow mitgenommen
sw/source/core/text/itrform2.cxx:1185: Wenn der Text an den Fly gestossen ist, oder wenn
    der Fly als erstes drankommt, weil er ueber dem linken
    Rand haengt, wird GetFly() returnt
    Wenn IsFull() und kein GetFly() vorhanden ist, gibt's
    naturgemaesz eine 0
sw/source/core/text/itrform2.cxx:1199: Ein fieser Sonderfall: ein Rahmen ohne Umlauf kreuzt den
    Footnote-Bereich. Wir muessen die Footnote-Portion als Zeilenrest
    bekanntgeben, damit SwTextFrm::Format nicht abbricht
    die Textmasse wurde ja durchformatiert
sw/source/core/text/itrform2.cxx:1206: Wenn die naechste Zeile mit einem Rest eines Feldes beginnt
    jetzt aber kein Rest mehr anliegt
    muss sie auf jeden Fall neu formatiert werden
sw/source/core/text/itrform2.cxx:1295: Wir holen uns nocheinmal cChar, um sicherzustellen, dass das
    Tab jetzt wirklich ansteht und nicht auf die naechste Zeile
    gewandert ist ( so geschehen hinter Rahmen
    Wenn allerdings eine FieldPortion im Rest wartet, muessen wir
    das cChar natuerlich aus dem Feldinhalt holen, z.B. bei
    DezimalTabs und Feldern (22615
sw/source/core/text/itrform2.cxx:1452: Der Font wird im Outputdevice eingestellt
    der Ascent und die Hoehe werden berechnet
sw/source/core/text/itrform2.cxx:1461: Man darf nicht vergessen, dass pCurr als GetLast() vernuenftige
    Werte bereithalten muss
sw/source/core/text/itrform2.cxx:1495: Recycling muss bei geaenderter Zeilenhoehe unterdrueckt werden
    und auch bei geaendertem Ascent (Absenken der Grundlinie
sw/source/core/text/itrform2.cxx:1532: Hier folgt bald die Unterlaufpruefung
sw/source/core/text/itrform2.cxx:1584: bBuild entscheidet, ob noch eine Ehrenrunde gedreht wird
sw/source/core/text/itrform2.cxx:1738: Das Dummyflag besitzen Zeilen, die nur Flyportions enthalten, diese
    sollten kein Register etc. beachten. Dummerweise hat kann es eine leere
    Zeile am Absatzende geben (bei leeren Abs?tzen oder nach einem
    Shift-Return), die das Register durchaus beachten soll
sw/source/core/text/itrform2.cxx:1809: 50% ist das Minimum, bei 0% schalten wir auf
    den Defaultwert 100% um
sw/source/core/text/itrform2.cxx:1850: 3260, 3860: Fly auf jeden Fall loeschen
sw/source/core/text/itrform2.cxx:1969: Blank in der letzten Masterzeile (blocksat.sdw
sw/source/core/text/itrform2.cxx:1989: Schon wieder ein Sonderfall: unsichtbare SoftHyphs
sw/source/core/text/itrpaint.cxx:99: nPaintOfst wurde exakt auf das Ende eingestellt, deswegen
    nPaintOfst ist dokumentglobal, deswegen nLeftMar aufaddieren
    const sal_uInt16 nLeftMar = sal_uInt16(GetLeftMargin
    8310: painten von LineBreaks in leeren Zeilen
sw/source/core/text/itrpaint.cxx:103: 7529 und 4757: nicht <= nPaintOfst
sw/source/core/text/itrpaint.cxx:138: Es gibt zwei Moeglichkeiten bei transparenten Font auszugeben
    1) DrawRect auf die ganze Zeile und die DrawText hinterher
    objektiv schnell, subjektiv langsam
    2) Fuer jede Portion ein DrawRect mit anschliessendem DrawText
    ausgefuehrt (objektiv langsam, subjektiv schnell
    Da der User in der Regel subjektiv urteilt, wird die 2. Methode
    als Default eingestellt
sw/source/core/text/itrpaint.cxx:159: 6882: Leerzeilen duerfen nicht wegoptimiert werden bei Paragraphzeichen
sw/source/core/text/itrpaint.cxx:192: Wenn TopLeft oder BottomLeft der Line ausserhalb liegen
    muss geclippt werden. Die Ueberpruefung auf Right() erfolgt
    in der folgenden Ausgabeschleife
sw/source/core/text/itrpaint.cxx:297: Ein Sonderfall sind GluePortions, die Blanks ausgeben
sw/source/core/text/itrpaint.cxx:300: 6168: Der Rest einer FieldPortion zog sich die Attribute der naechsten
    Portion an, dies wird durch SeekAndChgBefore vermieden
sw/source/core/text/itrpaint.cxx:328: Wenn das Ende der Portion hinausragt, wird geclippt
    Es wird ein Sicherheitsabstand von Height-Halbe aufaddiert
    damit die TTF-"f" nicht im Seitenrand haengen
sw/source/core/text/itrtxt.cxx:167: Wenn sich nichts getan hat, dann gibt es nur noch Dummys
sw/source/core/text/porlay.cxx:650: SCRIPT AND SCRIPT RELATED INFORMATION
sw/source/core/text/porlay.cxx:676: FIND INVALID RANGES IN SCRIPT INFO ARRAYS
sw/source/core/text/porlay.cxx:734: INVALID DATA FROM THE SCRIPT INFO ARRAYS HAS TO BE DELETED
sw/source/core/text/porlin.cxx:155: Es werden alle nachfolgenden Portions geloescht
sw/source/core/text/porlin.cxx:171: Es wird immer hinter uns eingefuegt
sw/source/core/text/porlin.cxx:185: An das Ende wandern und pLinPortion an den letzten haengen
sw/source/core/text/porlin.cxx:255: Nur Portions mit echter Breite koennen ein true zurueckliefern
    Notizen beispielsweise setzen niemals bFull==true
sw/source/core/text/txtfrm.cxx:2381: OD 2004-03-17 #i11860# - use method GetHeightOfLastLine
sw/source/core/text/txthyph.cxx:164: Man muss immer im Hinterkopf behalten, dass es z.B
    Felder gibt, die aufgetrennt werden koennen
sw/source/core/text/txthyph.cxx:170: Wir muessen uns darauf einstellen, dass in der Zeile
    FlyFrms haengen, an denen auch umgebrochen werden darf
    Wir suchen also die erste HyphPortion in dem angegebenen
    Bereich
sw/source/core/text/txthyph.cxx:179: Entweder wir liegen drueber oder wir laufen gerade auf eine
    Hyphportion die am Ende der Zeile oder vor einem Flys steht
sw/source/core/text/txthyph.cxx:197: Wenn pPos 0 ist, wurde keine Trennstelle ermittelt
sw/source/core/text/txthyph.cxx:202: Das alte LineLayout wird wieder eingestellt
sw/source/core/text/txthyph.cxx:217: nWrdStart bezeichnet nun die Position im String, der
    fuer eine Trennung zur Debatte steht
    Start() hangelt sich zum End
sw/source/core/text/txthyph.cxx:237: rHyphInf.SetHyphWord( ... ) mu??? hier geschehen
sw/source/core/text/txthyph.cxx:265: more robust
    Mehrzeilige Felder duerfen nicht interaktiv getrennt werden
sw/source/core/txtnode/atrfld.cxx:121: DB-Feldtypen zerstoeren sich selbst
sw/source/core/txtnode/atrfld.cxx:126: bei einige FeldTypen muessen wir den FeldTypen noch loeschen
sw/source/core/txtnode/atrfld.cxx:416: Die Hints stehen in unterschiedlichen Dokumenten
    der Feldtyp muss im neuen Dokument angemeldet werden
    Z.B: Kopieren ins ClipBoard
sw/source/core/txtnode/atrfld.cxx:454: Tabellenfelder auf externe Darstellung
sw/source/core/txtnode/atrfld.cxx:458: erzeuge aus der internen (fuer CORE) die externe (fuer UI) Formel
sw/source/core/txtnode/atrflyin.cxx:94: An dieser Stelle soll einmal der Gesamtzusammenhang bei der Erzeugung
    eines neuen SwTextFlyCnt erlaeutert werden
    Das MakeTextHint() wird z.B. im SwTextNode::Copy() gerufen
    Fuer die komplette Verdopplung sind folgende Schritte notwendig
    1) Duplizieren des pFormat incl. Inhalt, Attributen etc
    2) Setzen des Ankers
    3) Benachrichtigung
    Da fuer die Bewaeltigung der Aufgaben nicht immer alle Informationen
    bereitstehen und darueber hinaus bestimmte Methoden erst zu einem
    spaeteren Zeitpunkt gerufen werden duerfen (weil nocht nicht alle
    Nodeinformationen vorliegen), verteilt sich der Ablauf
    ad 1) MakeTextHint() wird durch den Aufruf von SwDoc::CopyLayout
    der das neue FlyFrameFormat erzeugt und mit dem duplizierten Inhalt des
    FlyFrm verbunden
    ad 2) SetAnchor() wird von SwTextNode::Insert() gerufen und sorgt fuer das
    setzen des Ankers (die SwPosition des Dummy-Zeichens wird dem FlyFrameFormat
    per SetAttr bekannt gegeben). Dies kann nicht im MakeTextHint erledigt
    werden, da der Zielnode unbestimmt ist
    ad 3) _GetFlyFrm() wird im Formatierungsprozess vom LineIter gerufen
    und sucht den FlyFrm zum Dummyzeichen des aktuellen ContentFrm. Wird keiner
    gefunden, so wird ein neuer FlyFrm angelegt
    Kritisch an diesem Vorgehen ist, dass das pContent->AppendFly() eine
    sofortige Neuformatierung von pContent anstoesst. Die Rekursion kommt
    allerdings durch den Lockmechanismus in SwTextFrm::Format() nicht
    zu stande
    Attraktiv ist der Umstand, dass niemand ueber die vom Node abhaengigen
    ContentFrms iterieren braucht, um die FlyInCntFrm anzulegen. Dies geschieht
    bei der Arbeit
sw/source/core/txtnode/atrflyin.cxx:103: Das FlyFrameFormat muss dupliziert werden
    In CopyLayoutFormat (siehe doclay.cxx) wird das FlyFrameFormat erzeugt
    und der Inhalt dupliziert
sw/source/core/txtnode/atrflyin.cxx:113: JP 03.06.96: dann sorge dafuer, das der koperierte Anker auf
    gueltigen Content zeigt! Die Umsetzung auf die
    richtige Position erfolgt spaeter
sw/source/core/txtnode/atrflyin.cxx:141: SetAnchor() wird von SwTextNode::Insert() gerufen und sorgt fuer das
    setzen des Ankers (die SwPosition des Dummy-Zeichens wird dem FlyFrameFormat
    per SetAttr bekannt gegeben). Dies kann nicht im MakeTextHint erledigt
    werden, da der Zielnode unbestimmt ist
    siehe Kommentar in SwTextFlyCnt::MakeTextHint
sw/source/core/txtnode/atrflyin.cxx:144: fuers Undo muss der neue Anker schon bekannt sein
sw/source/core/txtnode/atrflyin.cxx:146: Wir ermitteln den Index im Nodesarray zum Node
sw/source/core/txtnode/atrflyin.cxx:173: beim Ankerwechsel werden immer alle FlyFrms vom Attribut geloescht
    JP 25.04.95: wird innerhalb des SplitNodes die Frames verschoben
    koennen die Frames erhalten bleiben
sw/source/core/txtnode/atrflyin.cxx:178: stehen wir noch im falschen Dokument
sw/source/core/txtnode/atrflyin.cxx:215: GetFlyFrm() wird im Formatierungsprozess vom LineIter gerufen
    und sucht den FlyFrm zum Dummyzeichen des aktuellen ContentFrm. Wird keiner
    gefunden, so wird ein neuer FlyFrm angelegt
    siehe Kommentar ind SwTextFlyCnt::MakeTextHint
sw/source/core/txtnode/atrflyin.cxx:258: Wir haben keinen passenden FlyFrm gefunden, deswegen wird ein
    neuer angelegt
    Dabei wird eine sofortige Neuformatierung von pCurrFrm angestossen
    Die Rekursion wird durch den Lockmechanismus in SwTextFrm::Format
    abgewuergt
sw/source/core/txtnode/atrftn.cxx:201: returnt den anzuzeigenden String der Fuss-/Endnote
sw/source/core/txtnode/atrftn.cxx:208: dann ist die Nummer von Interesse, also ueber die Info diese
    besorgen
sw/source/core/txtnode/atrftn.cxx:282: Zwei Dinge muessen erledigt werden
    1) Die Fussnoten muessen bei ihren Seiten abgemeldet werden
    2) Die Fussnoten-Sektion in den Inserts muss geloescht werden
sw/source/core/txtnode/atrftn.cxx:294: JP 27.01.97: der sw3-Reader setzt einen StartNode aber das
    Attribut ist noch nicht im TextNode verankert
    Wird es geloescht (z.B. bei Datei einfuegen mit
    Footnote in einen Rahmen), muss auch der Inhalt
    geloescht werden
sw/source/core/txtnode/atrftn.cxx:300: Wir duerfen die Fussnotennodes nicht loeschen
    und brauchen die Fussnotenframes nicht loeschen, wenn
    wir im ~SwDoc() stehen
sw/source/core/txtnode/atrftn.cxx:306: 1) Die Section fuer die Fussnote wird beseitigt
    Es kann sein, dass die Inserts schon geloescht wurden
sw/source/core/txtnode/atrftn.cxx:312: Werden die Nodes nicht geloescht mussen sie bei den Seiten
    abmeldet (Frms loeschen) werden, denn sonst bleiben sie
    stehen (Undo loescht sie nicht
sw/source/core/txtnode/atrftn.cxx:317: loesche die Fussnote noch aus dem Array am Dokument
sw/source/core/txtnode/atrftn.cxx:353: Es koennen ja auch Grafiken in der Fussnote stehen
sw/source/core/txtnode/atrftn.cxx:411: Nun verpassen wir dem TextNode noch die Fussnotenvorlage
sw/source/core/txtnode/atrftn.cxx:459: JP 13.05.97: falls das Layout vorm loeschen der Fussnoten entfernt
    wird, sollte man das ueber die Fussnote selbst tun
sw/source/core/txtnode/atrtox.cxx:66: kein entsprechender Verzeichnistyp vorhanden -> anlegen
    sonst verwenden
sw/source/core/txtnode/atrtox.cxx:76: kein entsprechender Typ vorhanden -> neu erzeugen
sw/source/core/txtnode/fmtatr2.cxx:86: weiterleiten an das TextAttribut
sw/source/core/txtnode/fmtatr2.cxx:93: weiterleiten an das TextAttribut
sw/source/core/txtnode/fntcache.cxx:785: Printer          | 1 - 0   | 0 - 1
sw/source/core/txtnode/fntcache.cxx:907: ASIAN LINE AND CHARACTER GRID MODE START
sw/source/core/txtnode/fntcache.cxx:1157: DIRECT PAINTING WITHOUT SCREEN ADJUSTMENT
sw/source/core/txtnode/fntcache.cxx:1378: PAINTING WITH FORMATTING DEVICE/SCREEN ADJUSTMENT
sw/source/core/txtnode/fntcap.cxx:523: Wir basteln uns einen Font fuer die Grossbuchstaben
sw/source/core/txtnode/ndhints.cxx:32: Sortierreihenfolge: Start, Ende (umgekehrt!), Which-Wert (umgekehrt
    als letztes die Adresse selbst
sw/source/core/txtnode/ndhints.cxx:66: Zuerst nach Ende danach nach Ptr
sw/source/core/txtnode/ndhints.cxx:161: 1) gleiche Anzahl in beiden Arrays
sw/source/core/txtnode/ndhints.cxx:191: 2a) gueltiger Pointer? vgl. DELETEFF
sw/source/core/txtnode/ndhints.cxx:208: 2b) gueltiger Pointer? vgl. DELETEFF
sw/source/core/txtnode/ndhints.cxx:226: 5) gleiche Pointer in beiden Arrays
sw/source/core/txtnode/ndhints.cxx:232: 6) gleiche Pointer in beiden Arrays
sw/source/core/txtnode/ndtxt.cxx:413: werden FlyFrames mit verschoben, so muessen diese nicht ihre
    Frames zerstoeren. Im SwTextFly::SetAnchor wird es abgefragt
sw/source/core/txtnode/ndtxt.cxx:420: Ersten Teil des Inhalts in den neuen Node uebertragen und
    im alten Node loeschen
sw/source/core/txtnode/ndtxt.cxx:459: alle zeichengebundenen Rahmen, die im neuen Absatz laden
    muessen aus den alten Frame entfernt werden
    JP 01.10.96: alle leeren und nicht zu expandierenden
    Attribute loeschen
sw/source/core/txtnode/ndtxt.cxx:508: dann sage den Frames noch, das am Ende etwas "geloescht" wurde
sw/source/core/txtnode/ndtxt.cxx:547: JP 01.10.96: alle leeren und nicht zu expandierenden
    Attribute loeschen
sw/source/core/txtnode/ndtxt.cxx:593: Hint fuer Pagedesc versenden. Das mueste eigntlich das Layout im
    Paste der Frames selbst erledigen, aber das fuehrt dann wiederum
    zu weiteren Folgefehlern, die mit Laufzeitkosten geloest werden
    muesten. #56977# #55001# #56135
sw/source/core/txtnode/ndtxt.cxx:711: alle Crsr/StkCrsr/UnoCrsr aus dem Loeschbereich verschieben
sw/source/core/txtnode/ndtxt.cxx:805: alle Crsr/StkCrsr/UnoCrsr aus dem Loeschbereich verschieben
sw/source/core/txtnode/ndtxt.cxx:821: erzeugt einen AttrSet mit Bereichen fuer Frame-/Para/Char-Attributen
sw/source/core/txtnode/ndtxt.cxx:1196: erfrage die OutlineLevel und update gegebenenfalls das Nodes-Array
    falls sich die Level geaendert haben
sw/source/core/txtnode/ndtxt.cxx:1212: Update beim Level 0 noch die Fussnoten
sw/source/core/txtnode/ndtxt.cxx:1230: Wenn man sich genau am Ende einer Text- bzw. INetvorlage befindet
    bekommt diese das DontExpand-Flag verpasst
sw/source/core/txtnode/ndtxt.cxx:1316: Wenn bExpand gesetzt ist, wird das Verhalten bei Eingabe
    simuliert, d.h. der Start wuede verschoben, das Ende expandiert
sw/source/core/txtnode/ndtxt.cxx:1454: Beim Kopieren von Feldern in andere Dokumente
    muessen die Felder bei ihren neuen Feldtypen angemeldet werden
sw/source/core/txtnode/ndtxt.cxx:1470: wandel die interne in eine externe Formel um
sw/source/core/txtnode/ndtxt.cxx:1498: Beim Kopieren von TOXMarks(Client) in andere Dokumente
    muss der Verzeichnis (Modify) ausgetauscht werden
sw/source/core/txtnode/ndtxt.cxx:1505: Wenn wir es mit einer Zeichenvorlage zu tun haben
    muessen wir natuerlich auch die Formate kopieren
sw/source/core/txtnode/ndtxt.cxx:1523: Wenn wir es mit benutzerdefinierten INet-Zeichenvorlagen
    zu tun haben, muessen wir natuerlich auch die Formate kopieren
sw/source/core/txtnode/ndtxt.cxx:1544: JP 24.04.98: Bug 49753 - ein TextNode muss am Attribut
    gesetzt sein, damit die Vorlagen erzeugt
    werden koenne
sw/source/core/txtnode/ndtxt.cxx:1551: JP 22.10.97: Bug 44875 - Verbindung zum Format herstellen
sw/source/core/txtnode/ndtxt.cxx:1569: Beschreibung    kopiert Attribute an der Position nStart in pDest
    BP 7.6.93:      Es werden mit Absicht nur die Attribute _mit_ EndIdx
    kopiert! CopyAttr wird vornehmlich dann gerufen
    wenn Attribute fuer einen Node mit leerem String
    gesetzt werden sollen
sw/source/core/txtnode/ndtxt.cxx:1619: Frames benachrichtigen, sonst verschwinden die Footnote-Nummern
sw/source/core/txtnode/ndtxt.cxx:1661: wurde keine Laenge angegeben, dann Kopiere die Attribute
    an der Position rStart
sw/source/core/txtnode/ndtxt.cxx:1664: harte Absatz umspannende Attribute kopieren
sw/source/core/txtnode/ndtxt.cxx:1668: alle, oder nur die CharAttribute
    i96213
sw/source/core/txtnode/ndtxt.cxx:1698: JP 15.02.96: Bug 25537 - Attributbehandlung am Ende fehlt! Darum
    ueber die InsertMethode den Text einfuegen und nicht
    selbst direkt
sw/source/core/txtnode/ndtxt.cxx:1709: harte Absatz umspannende Attribute kopieren
sw/source/core/txtnode/ndtxt.cxx:1713: alle, oder nur die CharAttribute
    i96213
sw/source/core/txtnode/ndtxt.cxx:1741: Ende erst jetzt holen, weil beim Kopieren in sich selbst der
    Start-Index und alle Attribute vorher aktualisiert werden
sw/source/core/txtnode/ndtxt.cxx:1747: 2. Attribute kopieren
    durch das Attribute-Array, bis der Anfang des Geltungsbereiches
    des Attributs hinter dem zu kopierenden Bereich liegt
sw/source/core/txtnode/ndtxt.cxx:1752: wird in sich selbst kopiert, dann kann beim Einfuegen ein
    Attribut geloescht werden. Darum erst ins Tmp-Array kopieren und
    dann erst ins eigene uebertragen
sw/source/core/txtnode/ndtxt.cxx:1775: JP 26.04.94: REFMARK's werden nie kopiert. Hat das Refmark aber
    keinen Bereich umspannt, so steht im Text ein 255
    dieses muss entfernt werden. Trick: erst kopieren
    erkennen und sammeln, nach dem kopieren Loeschen
    Nimmt sein Zeichen mit ins Grab
    JP 14.08.95: Duerfen RefMarks gemovt werden
sw/source/core/txtnode/ndtxt.cxx:1876: nur falls im Array Attribute stehen (kann nur beim Kopieren
    sich selbst passieren
sw/source/core/txtnode/ndtxt.cxx:1940: analog zu Insert(char) in txtedt.cxx
    1) bei bHintExp leere Hints an rIdx.GetIndex suchen und aufspannen
    2) bei bHintExp == false mitgezogene Feldattribute zuruecksetzen
sw/source/core/txtnode/ndtxt.cxx:1959: bei leeren Attributen auch Start veraendern
sw/source/core/txtnode/ndtxt.cxx:1997: Kein Feld, am Absatzanfang, HintExpand
sw/source/core/txtnode/ndtxt.cxx:2045: wurde keine Laenge angegeben, dann Kopiere die Attribute
    an der Position rStart
sw/source/core/txtnode/ndtxt.cxx:2078: harte Absatz umspannende Attribute kopieren
sw/source/core/txtnode/ndtxt.cxx:2081: alle, oder nur die CharAttribute
sw/source/core/txtnode/ndtxt.cxx:2103: 2. Attribute verschieben
    durch das Attribute-Array, bis der Anfang des Geltungsbereiches
    des Attributs hinter dem zu verschiebenden Bereich liegt
sw/source/core/txtnode/ndtxt.cxx:2124: Attribut mit einem Bereich
    und das Ende des Attribut liegt im Bereich
sw/source/core/txtnode/ndtxt.cxx:2135: der Anfang liegt vollstaendig im Bereich
sw/source/core/txtnode/ndtxt.cxx:2147: die Start/End Indicies neu setzen
sw/source/core/txtnode/ndtxt.cxx:2196: sollten jetzt noch leere Attribute rumstehen, dann haben diese
    eine hoehere Praezedenz. Also herausholen und das Array updaten
    Die dabei entstehenden leeren Hints werden von den gesicherten
    uebergeplaettet".   (Bug: 6977
sw/source/core/txtnode/ndtxt.cxx:2259: GCAttr(); alle leeren weggwerfen ist zu brutal
    Es duerfen nur die wegggeworfen werden
    die im Bereich liegen und nicht am Ende des Bereiches liegen
sw/source/core/txtnode/ndtxt.cxx:2356: Bei leeren Absaetzen werden nur die
    INet-Formate entfernt
sw/source/core/txtnode/ndtxt.cxx:2362: wenn Ende und Start gleich sind --> loeschen
sw/source/core/txtnode/ndtxt.cxx:2586: jetzt kann es sein, das durch die Nummerierung dem neuen Node eine
    Vorlage aus dem Pool zugewiesen wurde. Dann darf diese nicht
    nochmal uebergeplaettet werden
sw/source/core/txtnode/ndtxt.cxx:2589: mehr duerfte nicht gemacht werden oder
sw/source/core/txtnode/ndtxt.cxx:3072: alle FontAttribute mit CHARSET Symbol in dem Bereich setzen
sw/source/core/txtnode/ndtxt.cxx:3236: von 0 bis nContent ist alles geloescht
sw/source/core/txtnode/ndtxt.cxx:3333: dann das 1. Zeichen ersetzen den Rest loschen und einfuegen
    Dadurch wird die Attributierung des 1. Zeichen expandiert
sw/source/core/txtnode/swfntcch.cxx:30: globale Variablen, werden in SwFntCch.Hxx bekanntgegeben
    Der FontCache wird in TextInit.Cxx _TXTINIT erzeugt und in _TXTEXIT geloescht
sw/source/core/txtnode/swfont.cxx:70: Hintergrundbrush setzen, z.B. bei Zeichenvorlagen
sw/source/core/txtnode/swfont.cxx:1069: Robust: Eigentlich sollte der Font bereits eingestellt sein, aber
    sicher ist sicher
sw/source/core/txtnode/swfont.cxx:1127: 15142: Ein Wort laenger als eine Zeile, beim Zeilenumbruch
    hochgestellt, muss seine effektive Hoehe melden
sw/source/core/txtnode/thints.cxx:1072: erst hier wird das Frame-Format kopiert (mit Inhalt
sw/source/core/txtnode/thints.cxx:1124: loesche das Text-Attribut (muss beim Pool abgemeldet werden
sw/source/core/txtnode/thints.cxx:1129: einige Sachen muessen vorm Loeschen der "Format-Attribute" erfolgen
sw/source/core/txtnode/thints.cxx:1136: siehe auch die Anmerkung "Loeschen von Formaten
    zeichengebundener Frames" in fesh.cxx, SwFEShell::DelFormat
sw/source/core/txtnode/thints.cxx:1159: Wenn wir ein HiddenParaField sind, dann muessen wir
    ggf. fuer eine Neuberechnung des Visible-Flags sorgen
sw/source/core/txtnode/thints.cxx:1162: JP 06-08-95: DDE-Felder bilden eine Ausnahme
sw/source/core/txtnode/thints.cxx:1287: Wir muessen zuerst einfuegen, da in SetAnchor
    dem FlyFrm GetStart() uebermittelt wird
    JP 11.05.98: falls das Anker-Attribut schon richtig
    gesetzt ist, dann korrigiere dieses nach dem Einfuegen
    des Zeichens. Sonst muesste das immer  ausserhalb
    erfolgen (Fehleranfaellig
sw/source/core/txtnode/thints.cxx:1318: Format-Pointer kann sich im SetAnchor geaendert haben
    Kopieren in andere Docs
sw/source/core/txtnode/thints.cxx:1336: das soll nicht meoglich sein; hier verhindern
    Der Dtor des TextHints loescht nicht das Zeichen
    Wenn ein CH_TXTATR_.. vorliegt, dann muss man
    dieses explizit loeschen
sw/source/core/txtnode/thints.cxx:1339: loesche das Zeichen aus dem String
sw/source/core/txtnode/thints.cxx:1366: FussNote in nicht Content-/Redline-Bereich einfuegen
sw/source/core/txtnode/thints.cxx:1372: das soll nicht meoglich sein; hier verhindern
    Der Dtor des TextHints loescht nicht das Zeichen
    Wenn ein CH_TXTATR_.. vorliegt, dann muss man
    dieses explizit loeschen
sw/source/core/txtnode/thints.cxx:1375: loesche das Zeichen aus dem String
sw/source/core/txtnode/thints.cxx:1390: wird eine neue Fussnote eingefuegt
sw/source/core/txtnode/thints.cxx:1402: loesche alle Frames der Section, auf die der StartNode zeigt
sw/source/core/txtnode/thints.cxx:1418: Wir muessen zuerst einfuegen, da sonst gleiche Indizes
    entstehen koennen und das Attribut im _SortArr_ am
    Dokument nicht eingetrage wird
sw/source/core/txtnode/thints.cxx:1430: Wir tragen uns am FootnoteIdx-Array des Docs ein
sw/source/core/txtnode/thints.cxx:1434: eine alte Footnote wird umgehaengt (z.B. SplitNode
sw/source/core/txtnode/thints.cxx:1439: neuen Index zuweisen, dafuer aus dem SortArray
    loeschen und neu eintragen
sw/source/core/txtnode/thints.cxx:1445: wenn ueber Undo der StartNode gesetzt wurde, kann
    der Index noch gar nicht in der Verwaltung stehen
sw/source/core/txtnode/thints.cxx:1451: fuers Update der Nummern und zum Sortieren
    muss der Node gesetzt sein
sw/source/core/txtnode/thints.cxx:1454: FussNote im Redline-Bereich NICHT ins FootnoteArray einfuegen
sw/source/core/txtnode/thints.cxx:1482: Fuer SwTextHints ohne Endindex werden CH_TXTATR
    eingefuegt, aStart muss danach um einen zurueckgesetzt werden
    Wenn wir im SwTextNode::Copy stehen, so wurde das Zeichen bereits
    mitkopiert. In solchem Fall ist SETATTR_NOTXTATRCHR angegeben worden
sw/source/core/txtnode/thints.cxx:1750: den MsgHint jetzt fuettern, weil gleich sind
    Start und End weg
    Das CalcVisibleFlag bei HiddenParaFields entfaellt
    da dies das Feld im Dtor selbst erledigt
sw/source/core/txtnode/thints.cxx:1851: setze diese Attribute am TextNode. Wird der gesamte Bereich umspannt
    dann setze sie nur im AutoAttrSet (SwContentNode:: SetAttr
sw/source/core/txtnode/thints.cxx:1870: sind am Node schon Zeichenvorlagen gesetzt, muss man diese Attribute
    rSet) immer als TextAttribute setzen, damit sie angezeigt werden
sw/source/core/txtnode/thints.cxx:2029: aufnehmen als MergeWert (falls noch nicht gesetzt neu setzen
sw/source/core/txtnode/thints.cxx:2037: wenn mehrere Attribute ueberlappen gewinnt der letze
    z.B
    1234567890123456789
    Font1
    Font2
    Abfragebereich: -> Gueltig ist Font2
sw/source/core/txtnode/thints.cxx:2071: erfrage die Attribute vom TextNode ueber den Bereich
sw/source/core/txtnode/thints.cxx:2087: stelle erstmal fest, welche Text-Attribut in dem Bereich gueltig
    sind. Dabei gibt es folgende Faelle
    UnEindeutig wenn: (wenn != Format-Attribut
    das Attribut liegt vollstaendig im Bereich
    das Attributende liegt im Bereich
    der Attributanfang liegt im Bereich
    Eindeutig (im Set mergen
    das Attrib umfasst den Bereich
    nichts tun
    das Attribut liegt ausserhalb des Bereiches
sw/source/core/txtnode/thints.cxx:2094: dann besorge mal die Auto-(Format)Attribute
sw/source/core/txtnode/thints.cxx:2160: reicht in den Bereich
    pHt->GetAttr() != aFormatSet.Get( pHt->Which
sw/source/core/txtnode/thints.cxx:2270: aus dem Format-Set alle entfernen, die im TextSet auch gesetzt sind
sw/source/core/txtnode/thints.cxx:2278: dann besorge mal die Auto-(Format)Attribute
sw/source/core/txtnode/thints.cxx:2968: Felder bilden eine Ausnahme
    1) Sie koennen nie ueberlappen
    2) Wenn zwei Felder genau aneinander liegen
    sollen sie nicht zu einem verschmolzen werden
    Wir koennen also auf die while-Schleife verzichten
sw/source/core/txtnode/thints.cxx:3069: bevor die ReferenzNummer gesetzt wird, sollte
    das Feld am richtigen FeldTypen haengen
sw/source/core/txtnode/thints.cxx:3179: SwTextAttrs ohne Ende werden sonderbehandelt
    Sie werden natuerlich in das Array insertet, aber sie werden nicht
    in die pPrev/Next/On/Off-Verkettung aufgenommen
    Der Formatierer erkennt diese TextHints an dem CH_TXTATR_.. im Text
sw/source/core/txtnode/thints.cxx:3189: und die Abhaengigen benachrichtigen
sw/source/core/txtnode/thints.cxx:3203: Ab hier gibt es nur noch pHint mit einem EndIdx
sw/source/core/txtnode/thints.cxx:3210: Wir drehen den Quatsch einfach um
sw/source/core/txtnode/thints.cxx:3273: und die Abhaengigen benachrichtigen
sw/source/core/txtnode/thints.cxx:3328: Ist der Hint schon bekannt, dann suche die Position und loesche ihn
    Ist er nicht im Array, so gibt es ein OSL_ENSURE
sw/source/core/txtnode/thints.cxx:3407: Ueberlappt das Attribut den Bereich
sw/source/core/txtnode/thints.cxx:3426: Umfasst das Attribut den Bereich komplett
sw/source/core/txtnode/txtedt.cxx:93: Wir ersparen uns in Hyphenate ein GetFrm
    Achtung: in edlingu.cxx stehen die Variablen
sw/source/core/txtnode/txtedt.cxx:674: Aktuelles Wort zurueckliefern
    Wir suchen immer von links nach rechts, es wird also das Wort
    vor nPos gesucht. Es sei denn, wir befinden uns am Anfang des
    Absatzes, dann wird das erste Wort zurueckgeliefert
    Wenn dieses erste Wort nur aus Whitespaces besteht, returnen wir
    einen leeren String
sw/source/core/txtnode/txtedt.cxx:946: Die Aehnlichkeiten zu SwTextFrm::_AutoSpell sind beabsichtigt
    ACHTUNG: Ev. Bugs in beiden Routinen fixen
sw/source/core/txtnode/txtedt.cxx:1241: Die Aehnlichkeiten zu SwTextNode::Spell sind beabsichtigt
    ACHTUNG: Ev. Bugs in beiden Routinen fixen
sw/source/core/txtnode/txtedt.cxx:1251: Die Aehnlichkeiten zu SwTextNode::Spell sind beabsichtigt
    ACHTUNG: Ev. Bugs in beiden Routinen fixen
sw/source/core/txtnode/txtedt.cxx:1597: Findet den TextFrm und sucht dessen CalcHyph
sw/source/core/txtnode/txtedt.cxx:1601: Abkuerzung: am Absatz ist keine Sprache eingestellt
sw/source/core/txtnode/txtedt.cxx:1622: 4935: Seit der Trennung ueber Sonderbereiche sind Faelle
    moeglich, in denen kein Frame zum Node vorliegt
    Also keinOSL_ENSURE
sw/source/core/txtnode/txtedt.cxx:2122: die ACompl-Liste muss angepasst werden
sw/source/filter/html/htmlatr.cxx:123: eventuell muss erst mal eine Liste aufgemacht werden
sw/source/filter/html/htmlatr.cxx:134: entsprechend dem Level-Unterschied schreiben
sw/source/filter/html/htmlatr.cxx:189: fuer die Formate muesste eine einzige Ausgabe-Funktion genuegen
sw/source/filter/html/htmlatr.cxx:210: ein </P> darf zusaetzlich ausgegeben werden
sw/source/filter/html/htmlatr.cxx:262: Es ist eine HTML-Tag-Vorlage oder die Vorlage ist von einer
    solchen abgeleitet
sw/source/filter/html/htmlatr.cxx:266: wenn keine Styles exportiert werden, muss evtl. zusaetlich
    harte Attributierung geschrieben werden
sw/source/filter/html/htmlatr.cxx:272: fuer HTML-Tag-Vorlagen die Unterscheide zum Original
    sofern verfuegbar
sw/source/filter/html/htmlatr.cxx:279: sonst die zur HTML-Tag-Vorlage des Originals oder des
    aktuellen Doks, wenn die nicht verfuegbar ist
sw/source/filter/html/htmlatr.cxx:294: Nicht von einer HTML-Tag-Vorlage abgeleitete Absatz-Vorlagen
    muessen als harte Attributierung relativ zur Textkoerper-Volage
    exportiert werden. Fuer Nicht-Styles-Export sollte die der
    HTML-Vorlage als Referenz dienen
sw/source/filter/html/htmlatr.cxx:307: wenn Unterschiede zu einer anderen Vorlage geschrieben werden
    sollen ist harte Attributierung noetig. Fuer Vorlagen, die
    nicht von HTML-Tag-Vorlagen abgeleitet sind, gilt das immer
sw/source/filter/html/htmlatr.cxx:316: einen leeren Item-Set gleich loeschen, das spart speater
    Arbeit
sw/source/filter/html/htmlatr.cxx:377: Ggf. noch ein DropCap-Attribut uebernehmen
sw/source/filter/html/htmlatr.cxx:405: Die diversen default-Abstaende aus der Vorlage oder der
    Vergleischs-Vorlage merken
sw/source/filter/html/htmlatr.cxx:472: Der aktuelle Absatz ist numeriert
sw/source/filter/html/htmlatr.cxx:474: ein <P> darf zusaetzlich ausgegeben werden
sw/source/filter/html/htmlatr.cxx:481: Sind wir in einer Aufzaehlungs- oder Numerierungliste
sw/source/filter/html/htmlatr.cxx:500: ist der aktuelle Absatz numeriert
sw/source/filter/html/htmlatr.cxx:526: Jetzt holen wir das Token und ggf. die Klasse
sw/source/filter/html/htmlatr.cxx:545: Jetzt wird festgelegt, was aufgrund des Tokens so moeglich ist
sw/source/filter/html/htmlatr.cxx:551: Es ist eine HTML-Tag-Vorlage oder die Vorlage ist von einer
    solchen abgeleitet
sw/source/filter/html/htmlatr.cxx:592: alle Vorlagen, die nicht einem HTML-Tag entsprechen oder von
    diesem abgeleitet sind, werden als <P> exportiert
sw/source/filter/html/htmlatr.cxx:598: Falls noetig, die harte Attributierung der Vorlage uebernehmen
sw/source/filter/html/htmlatr.cxx:605: und noch die harte Attributierung des Absatzes dazunehmen
sw/source/filter/html/htmlatr.cxx:614: den unteren Absatz-Abstand brauchen wir noch
sw/source/filter/html/htmlatr.cxx:645: nur einen Zeilen-Umbruch (ohne Einrueckung) am Absatz-Anfang
    ausgeben
sw/source/filter/html/htmlatr.cxx:652: soll ein ALIGN=... geschrieben werden
sw/source/filter/html/htmlatr.cxx:664: Unteren Absatz-Abstand beachten ? (nie im letzen Absatz von
    Tabellen
sw/source/filter/html/htmlatr.cxx:669: Wenn Styles exportiert werden, wird aus eingerueckten Absaetzen
    eine Definitions-Liste
sw/source/filter/html/htmlatr.cxx:705: Statt eines DD muessen wir hier auch ein DT der Ebene
    darueber nehmen
sw/source/filter/html/htmlatr.cxx:725: ggf. eine Aufzaehlung- oder Numerierungsliste beginnen
sw/source/filter/html/htmlatr.cxx:741: Die Defaults aus der Vorlage merken, denn sie muessen nicht
    exportiert werden
sw/source/filter/html/htmlatr.cxx:751: In Numerierungs-Listen keinen Ertzeilen-Einzug ausgeben
sw/source/filter/html/htmlatr.cxx:757: ein einzelnes LI hat keinen Abstand
sw/source/filter/html/htmlatr.cxx:763: ein einzelnes DD hat auch keinen Abstand
sw/source/filter/html/htmlatr.cxx:774: Wenn im letzten Absatz einer Tabelle der
    untere Absatz-Abstand veraendert wird, vertut sich
    Netscape total. Deshalb exportieren wir hier erstmal
    nichts, indem wir den Abstand aus dem Absatz als Default
    setzen
sw/source/filter/html/htmlatr.cxx:836: fuer BLOCKQUOTE, ADDRESS und DD wird noch ein Absatz-Token
    ausgegeben, wenn
    keine Styles geschrieben werden, und
    ein untere Abstand oder eine Absatz-Ausrichtung existiert
sw/source/filter/html/htmlatr.cxx:884: Ein <P> wird nur geschrieben, wenn
    wir in keiner OL/UL/DL sind, oder
    der Absatz einer OL/UL nicht numeriert ist, oder
    keine Styles exportiert werden und
    ein unterer Abstand oder
    eine Absatz-Ausrichtung existiert, ode
    Styles exportiert werden und
    die Textkoerper-Vorlage geaendert wurde, oder
    ein Benutzer-Format exportiert wird, oder
    Absatz-Attribute existieren
sw/source/filter/html/htmlatr.cxx:894: jetzt werden Optionen ausgegeben
sw/source/filter/html/htmlatr.cxx:955: und nun ggf. noch die STYLE-Option
sw/source/filter/html/htmlatr.cxx:971: Soll ein </P> geschrieben wenrden
sw/source/filter/html/htmlatr.cxx:976: wenn kein End-Tag geschrieben werden soll, es loeschen
sw/source/filter/html/htmlatr.cxx:1005: wenn es kein Token gibt haben wir auch nichts auszugeben
sw/source/filter/html/htmlatr.cxx:1010: Auch in PRE muss eine Bullet-Liste beendet werden
sw/source/filter/html/htmlatr.cxx:1035: fuer BLOCKQUOTE, ADDRESS und DD wird ggf noch ein
    Absatz-Token ausgegeben, wenn
    keine Styles geschrieben werden, und
    ein untere Abstand existiert
sw/source/filter/html/htmlatr.cxx:1054: ggf. eine Aufzaehlung- oder Numerierungsliste beenden
sw/source/filter/html/htmlatr.cxx:1108: nach Anfangs-Psoitionen sortierte Liste
sw/source/filter/html/htmlatr.cxx:1109: nach End-Psotionen sortierte Liste
sw/source/filter/html/htmlatr.cxx:1126: Eine SttEndPos in die Start- und Ende-Listen eintragen bzw. aus
    ihnen loeschen, wobei die Ende-Position bekannt ist
sw/source/filter/html/htmlatr.cxx:1130: die "Art" es Attributs ermitteln
sw/source/filter/html/htmlatr.cxx:1133: Existiert ein bestimmtes On-Tag-Item
sw/source/filter/html/htmlatr.cxx:1137: Existiert ein Item zum ausschalten eines Attributs, das genauso
    exportiert wird wie das uebergebene Item im gleichen Bereich
sw/source/filter/html/htmlatr.cxx:1141: das Ende eines gesplitteten Items anpassen
sw/source/filter/html/htmlatr.cxx:1145: Ein Attribut in die Listen eintragen und ggf. aufteilen
sw/source/filter/html/htmlatr.cxx:1149: Ein bereits vorhandenes Attribut aufteilen
sw/source/filter/html/htmlatr.cxx:1191: In der Start-Liste das Attribut hinter allen vorher und an
    der gleichen Position gestarteten Attributen einfuegen
sw/source/filter/html/htmlatr.cxx:1199: die Position in der Ende-Liste wurde uebergeben
sw/source/filter/html/htmlatr.cxx:1207: jetzt Suchen wir es in der Start-Liste
sw/source/filter/html/htmlatr.cxx:1375: dieses uns alle folgenden Attribute beginnen spaeter
sw/source/filter/html/htmlatr.cxx:1381: das Attribut beginnt vor oder an der aktuellen Position
    und endet hinter ihr
sw/source/filter/html/htmlatr.cxx:1386: ein On-Tag-Attibut wurde gefunden
sw/source/filter/html/htmlatr.cxx:1409: dieses uns alle folgenden Attribute beginnen spaeter
sw/source/filter/html/htmlatr.cxx:1416: das Attribut beginnt vor oder an der aktuellen Position
    und endet hinter ihr
sw/source/filter/html/htmlatr.cxx:1440: das Item aus der End-Liste entfernen
sw/source/filter/html/htmlatr.cxx:1454: jetzt noch die spaeter gestarteten Attribute anpassen
sw/source/filter/html/htmlatr.cxx:1462: das Test-Attribut und alle folgenden beginnen, nachdem das
    gesplittete Attribut endet
sw/source/filter/html/htmlatr.cxx:1468: das Test-Attribut beginnt, bevor das gesplittete Attribut
    endet und endet danach, muss also auch gesplittet werden
sw/source/filter/html/htmlatr.cxx:1473: das Attribut aus der End-Liste entfernen
sw/source/filter/html/htmlatr.cxx:1480: es endet jetzt als erstes Attribut an der entsprechenden
    Position. Diese Position in der Ende-Liste kennen wir schon
sw/source/filter/html/htmlatr.cxx:1483: den "Rest" des Attributs neu einfuegen
sw/source/filter/html/htmlatr.cxx:1507: das Test-Attribut endet, bevor das neue endet. Das
    neue Attribut muss deshalb aufgesplittet werden
sw/source/filter/html/htmlatr.cxx:1520: ein Attribut muss noch eingefuegt werden
sw/source/filter/html/htmlatr.cxx:1530: erstmal muessen wir die alten Items anhand der Startliste suchen
    und die neuen Item-Bereiche festlegen
sw/source/filter/html/htmlatr.cxx:1540: dieses und alle nachfolgenden Attribute beginnen spaeter
sw/source/filter/html/htmlatr.cxx:1545: das Test Attribut endet im zu loeschenenden Bereich
sw/source/filter/html/htmlatr.cxx:1549: nur entsprechende On-Tag Attribute muessen beruecksichtigt
    werden
sw/source/filter/html/htmlatr.cxx:1558: der Start des neuen Attribut entspricht
    dem neuen Ende des Attribts
sw/source/filter/html/htmlatr.cxx:1566: das Test-Item beginnt erst hinter dem neuen
    Ende des Attribts und kann deshalb komplett
    geloescht werden
sw/source/filter/html/htmlatr.cxx:1577: ggf den zweiten Teil des gesplitteten Attribts einfuegen
sw/source/filter/html/htmlatr.cxx:1644: kein Bereich ?? dann nicht aufnehmen, wird nie wirksam
sw/source/filter/html/htmlatr.cxx:1652: das Attribut wird ausgegeben, wenn es nicht sowieso
    schon an ist
sw/source/filter/html/htmlatr.cxx:1661: wenn das entsprechne Attribut an ist, wird es gesplittet
    Zusaetlich wird es aber als Style ausgegeben, wenn es nicht
    am ganzen Absatz gesetzt ist, weil es dann ja schon mit dem
    ABsatz-Tag ausgegeben wurde
sw/source/filter/html/htmlatr.cxx:1669: das Attribut kann immer ausgegeben werden
sw/source/filter/html/htmlatr.cxx:1678: Das Attribut kann nur als CSS1 ausgegeben werden. Wenn
    es am Absatz gesetzt ist, wurde es schon mit dem
    Absatz-Tag ausgegeben. Einzige Ausnahme ist das
    Zeichen-Hintergrund-Attribut. Es muss immer wie ein
    Hint behandelt werden
sw/source/filter/html/htmlatr.cxx:1697: das Zeichenvorlagen-Tag muss vor den harten
    Attributen ausgegeben werden
sw/source/filter/html/htmlatr.cxx:1719: Eine Vordergrund-Farbe als Absatz-Attribut wird nur
    exportiert, wenn sie nicht der Default-Farbe entspricht
sw/source/filter/html/htmlatr.cxx:1739: Zumindest die Attribute der Zeichenvorlage uebernehmen
sw/source/filter/html/htmlatr.cxx:1890: die Edit-Engine-Attribute des Objekts als SW-Attribute holen
    und als Hints einsortieren. Wegen der Menge der Hints werden
    Styles hierbei nicht beruecksichtigt
sw/source/filter/html/htmlatr.cxx:1936: die Attribute in der Start-Liste sind aufsteigend sortiert
sw/source/filter/html/htmlatr.cxx:1955: dieses und alle folgenden Attribute werden erst noch geoeffnet
sw/source/filter/html/htmlatr.cxx:1985: die Attribute in der End-Liste sind aufsteigend sortiert
sw/source/filter/html/htmlatr.cxx:2030: dieses und alle folgenden Attribute werden erst spaeter beendet
sw/source/filter/html/htmlatr.cxx:2036: Das Attribut wird vor der aktuellen Position beendet. Das
    darf nicht sein, aber wie koennen trotzdem damit umgehen
sw/source/filter/html/htmlatr.cxx:2054: Besonderheit: leere Node und HR-Vorlage (horizontaler Strich
    nur ein <HR> ausgeben
sw/source/filter/html/htmlatr.cxx:2064: dann die absatz-gebundenen Grafiken/OLE-Objekte im Absatz
    MIB 8.7.97: Ein <PRE> spannen wir um die Linie auf. Dann stimmen
    zwar die Abstaende nicht, aber sonst bekommen wir einen leeren
    Absatz hinter dem <HR> und das ist noch unschoener
sw/source/filter/html/htmlatr.cxx:2067: Alle an dem Node verankerten Rahmen ausgeben
sw/source/filter/html/htmlatr.cxx:2153: Die leeren Nodes mit 2pt Font-Hoehe und der Stand-Vorlage, die
    vor Tabellen und Bereichen eingefuegt werden, nicht exportieren
    Bookmarks oder absatzgebundene Grafiken aber schon
    MIB 21.7.97: Ausserdem auch keine leeren Tabellen-Zellen exportieren
sw/source/filter/html/htmlatr.cxx:2158: Der aktuelle Node ist leer und enthaelt Standard-Vorlage
sw/source/filter/html/htmlatr.cxx:2165: ausserdem ist die 2pt Schrift eingestellt
sw/source/filter/html/htmlatr.cxx:2176: und er steht vor einer Tabelle ohne einem Bereich
sw/source/filter/html/htmlatr.cxx:2180: Alle an dem Node verankerten Rahmen ausgeben
sw/source/filter/html/htmlatr.cxx:2189: PagePreaks uns PagDescs abfangen
sw/source/filter/html/htmlatr.cxx:2233: An dem Node "verankerte" Seitenegebunde Rahmen ausgeben
sw/source/filter/html/htmlatr.cxx:2237: An dem Node verankerte Rahmen ausgeben, die vor dem
    Absatz-Tag geschrieben werden sollen
sw/source/filter/html/htmlatr.cxx:2248: gibt es harte Attribute, die als Optionen geschrieben werden muessen
sw/source/filter/html/htmlatr.cxx:2251: jetzt das Tag des Absatzes ausgeben
sw/source/filter/html/htmlatr.cxx:2258: Wenn vor dem Absatz-Tag keine neue Zeile aufgemacht wurde, dann
    tun wir das jetzt
sw/source/filter/html/htmlatr.cxx:2263: dann die Bookmarks (inkl. End-Tag
sw/source/filter/html/htmlatr.cxx:2268: jetzt ist noch mal eine gute Gelegenheit fuer ein LF, sofern es noch
    erlaubt ist
sw/source/filter/html/htmlatr.cxx:2276: Text, der aus einer Outline-Numerierung kommt ermitteln
sw/source/filter/html/htmlatr.cxx:2304: gibt es harte Attribute, die als Tags geschrieben werden muessen
sw/source/filter/html/htmlatr.cxx:2319: Absatz-Attribute ausgeben, damit der Text die Attribute des
    Absatzes bekommt
sw/source/filter/html/htmlatr.cxx:2324: Theoretisch muesste man hier die Zeichen-Vorlage der Numerierung
    beachten. Da man die ueber die UI nicht setzen kann, ignorieren
    wir sie erstmal
sw/source/filter/html/htmlatr.cxx:2339: erstmal den Start berichtigen. D.h. wird nur ein Teil vom Satz
    ausgegeben, so muessen auch da die Attribute stimmen
sw/source/filter/html/htmlatr.cxx:2348: Ok, es gibt vorher Attribute, die ausgegeben werden muessen
sw/source/filter/html/htmlatr.cxx:2364: leere Hints am Anfang nicht beachten, oder
sw/source/filter/html/htmlatr.cxx:2368: Attribut in die Liste aufnehemen
sw/source/filter/html/htmlatr.cxx:2382: aber nicht ausgeben, das erfolgt spaeter
sw/source/filter/html/htmlatr.cxx:2388: dann gebe mal alle gesammelten Attribute von der String-Pos aus
sw/source/filter/html/htmlatr.cxx:2403: Die an der aktuellen Position verankerten Rahmen ausgeben
sw/source/filter/html/htmlatr.cxx:2424: Hints mit Ende einsortieren, wenn sie keinen
    leeren Bereich aufspannen (Hints, die keinen
    Bereich aufspannen werden ignoriert
sw/source/filter/html/htmlatr.cxx:2432: Hints ohne-Ende werden als letztes ausgebeben
sw/source/filter/html/htmlatr.cxx:2455: Manche Draw-Formate koennen auch noch Attribute mitbringen
sw/source/filter/html/htmlatr.cxx:2565: Die an der letzten Position verankerten Rahmen ausgeben
sw/source/filter/html/htmlatr.cxx:2584: Wenn der letzte Absatz einer Tabellezelle leer ist und
    wir fuer den MS-IE exportieren, schreiben wir statt eines
    BR> ein &nbsp
sw/source/filter/html/htmlatr.cxx:2629: wenn ein LF nicht schon erlaubt ist wird es erlaubt, wenn der
    Absatz mit einem ' ' endet
sw/source/filter/html/htmlatr.cxx:2659: wo ein Twip ist sollte auch ein Pixel sein
sw/source/filter/html/htmlatr.cxx:2668: wenn gerade Hints geschrieben werden versuchen wir den Hint als
    CSS1-Attribut zu schreiben
sw/source/filter/html/htmlatr.cxx:2687: Font-Farbe nicht als Tag schreiben, wenn Styles normalen Tags
    vorgezogen werden
sw/source/filter/html/htmlatr.cxx:2832: Wegen Netscape schrieben wir hier STRIKE und nicht S raus
sw/source/filter/html/htmlatr.cxx:2913: Das ist jetzt unser Blink-Item. Blinkend wird eingeschaltet, indem man
    das Item auf true setzt
sw/source/filter/html/htmlatr.cxx:3062: ggf. ein noch offenes Attribut voruebergehend beenden
sw/source/filter/html/htmlatr.cxx:3085: das eigene Attribut vom Stack holen
sw/source/filter/html/htmlatr.cxx:3094: es ist noch ein Attribut auf dem Stack, das wieder geoeffnet
    werden muss
sw/source/filter/html/htmlatr.cxx:3205: lege hier die Tabellen fuer die HTML-Funktions-Pointer auf
    die Ausgabe-Funktionen an
    Es sind lokale Strukturen, die nur innerhalb der HTML-DLL
    bekannt sein muessen
sw/source/filter/html/htmlbas.cxx:69: Den Inhalt des Script-Tags ignorieren
sw/source/filter/html/htmlbas.cxx:93: Ausser StarBasic und unbenutzem JavaScript jedes Script oder den
    Modulnamen in einem Feld merken merken
sw/source/filter/html/htmlbas.cxx:110: Fuer JavaScript und StarBasic noch ein Basic-Modul anlegen
    Das Basic entfernt natuerlich weiterhin keine SGML-Kommentare
sw/source/filter/html/htmlbas.cxx:186: Hier merken wir und nur ein par Strings
sw/source/filter/html/htmlbas.cxx:222: Leerzeilen am Anfang werden ignoriert
sw/source/filter/html/htmlbas.cxx:229: Wir stehen hinter dem CR/LF der Zeile davor
sw/source/filter/html/htmlbas.cxx:273: und jetzt alle StarBasic-Module und alle unbenutzen JavaSrript-Module
    ausgeben
sw/source/filter/html/htmlcss1.cxx:69: Wie viele Zeilen/Zeichen sind fuer DropCaps erlaubt
    Gibt es vielleicht woanders entsprechende Werte
sw/source/filter/html/htmlcss1.cxx:163: LEFT/RIGHT koennte man auch am Absatz davor setzen
sw/source/filter/html/htmlcss1.cxx:199: Angaben beim FontHeight-Item werden nicht unterstuetzt
sw/source/filter/html/htmlcss1.cxx:209: Ein Brush-Item mit RES_BACKGROUND muss noch in eines mit
    RES_CHRATR_BACKGROUND gewandelt werden
sw/source/filter/html/htmlcss1.cxx:283: linker, rechter Rand und Erstzeilen-Einzug
sw/source/filter/html/htmlcss1.cxx:330: Angaben beim FontHeight-Item werden nicht unterstuetzt
sw/source/filter/html/htmlcss1.cxx:464: linker, rechter Rand und Erstzeilen-Einzug
sw/source/filter/html/htmlcss1.cxx:528: Bei "size: auto|portrait|landscape" bleibt die bisherige
    Groesse der Vorlage erhalten. Bei "landscape" und "portrait
    wird das Landscape-Flag gesetzt und evtl. die Breite/Hoehe
    vertauscht
sw/source/filter/html/htmlcss1.cxx:747: Token und Class zu dem Selektor holen
sw/source/filter/html/htmlcss1.cxx:754: und noch ein ganz par Infos zum naechsten Element
sw/source/filter/html/htmlcss1.cxx:771: vielleicht A:visited oder A:link
sw/source/filter/html/htmlcss1.cxx:814: Den Hintergrund muessen wir vor dem Setzen abfragen
    denn in SetPageDescAttrs wird er geloescht
sw/source/filter/html/htmlcss1.cxx:832: Ein par Attribute muessen an der Seitenvorlage gesetzt werden
    und zwar die, die nicht vererbt werden
sw/source/filter/html/htmlcss1.cxx:836: alle noch uebrigen Optionen koennen an der Standard-Vorlage
    gesetzt werden und gelten dann automatisch als defaults
sw/source/filter/html/htmlcss1.cxx:875: Jetzt werden die Selektoren verarbeitet, die zu einer Absatz-Vorlage
    gehoehren
sw/source/filter/html/htmlcss1.cxx:942: nicht TH und TD, aber TH P und TD P
sw/source/filter/html/htmlcss1.cxx:990: Entweder kein zusammengesetzter Selektor oder
    ein X:first-line { float: left
sw/source/filter/html/htmlcss1.cxx:1007: nur die Attribute an der Vorlage setzen
sw/source/filter/html/htmlcss1.cxx:1032: die Attribute in das DropCap-Attribut einfuegen
sw/source/filter/html/htmlcss1.cxx:1069: Das Attribut nur setzen, wenn float: left angegeben wurde
    und das Initial ueber mehrere Zeilen geht. Sonst wird die
    ggf. angelegte Zeichen-Vorlage spaeter ueber den Namen
    gesucht und gesetzt
sw/source/filter/html/htmlcss1.cxx:1085: Jetzt werden die Selektoten verarbeitet, die zu einer Zechenvorlage
    gehoehren. Zusammengesetzte gibt es hier allerdings nich nicht
sw/source/filter/html/htmlcss1.cxx:1146: die entsprechende Vorlage suchen
sw/source/filter/html/htmlcss1.cxx:1171: die Vorlage suchen oder anlegen (geht nur mit Namen
sw/source/filter/html/htmlcss1.cxx:1175: Die Vorlage (ohne Class) suchen oder anlegen
sw/source/filter/html/htmlcss1.cxx:1195: Wenn es eine Klasse gibt, die Klassen-Vorlage suchen aber nicht
    neu anlegen
sw/source/filter/html/htmlcss1.cxx:1303: Wenn dieser Fall eintritt, dann wurde ein <TD><P CLASS=foo
    gelesen, aber die TD.foo Vorlage nicht gefunden. Dann muessen
    wir P.foo nehmen, wenn es sie gibt
sw/source/filter/html/htmlcss1.cxx:1365: Die erste Seite wird aus der rechten Seite erzeugt, wenn es die
    gibt
sw/source/filter/html/htmlcss1.cxx:1372: Die neue Seitenvorlage entsteht aus dem Master durch kopieren
sw/source/filter/html/htmlcss1.cxx:1376: dazu brauchen wir auch die Nummer der neuen Vorlage
sw/source/filter/html/htmlcss1.cxx:1381: Die Vorlagen an ihren neuen Zweck anpassen
sw/source/filter/html/htmlcss1.cxx:1388: Wenn es schon eine linke Seite gibt, dann ist das die
    Folge-Vorlage, sonst ist es die HTML-Vorlage
sw/source/filter/html/htmlcss1.cxx:1397: Wenn die linke Vorlage schon angelegt ist, passiert hier gar
    nichts. Sonst wird die linke Vorlage angelegt und sorgt auch
    fuer die richtige Verkettung mit der rechten Voralge
sw/source/filter/html/htmlcss1.cxx:1405: Die rechte Vorlage wird angelegt, wenn sie noch nicht existiert
    Es findet aber keine Verkettung statt
    Wenn schon eine erste Seitenvorlage existiert, wird die linke
    Vorlage die Folge-Vorlage der ersten Seite
sw/source/filter/html/htmlcss1.cxx:1453: das Tag wird absolut positioniert und left/top sind beide
    gegeben und enthalten auch keine %-Angabe, oder
    das Tag soll fliessen, und
    es wurde eine Breite angegeben (in beiden Faellen noetig
sw/source/filter/html/htmlcss1.cxx:1477: die Anzahl der Zeilen entspricht in etwa einer %-Angabe
    fuer die Hoehe (was passiert mit absoluten Hoehen
sw/source/filter/html/htmlcss1.cxx:1490: Nur wenn nLines>1 ist, wird das Attribut auch gesetzt. Dann
    brauchen wir die Font-Hoehe aber auch nicht in der Zeichen-Vorlage
sw/source/filter/html/htmlcss1.cxx:1500: Bei harter Attributierung (pName==0) koennen wir aufhoehren, wenn
    das Initial nur ueber eine Zeile geht
sw/source/filter/html/htmlcss1.cxx:1506: ein rechter Rand wird der Abstand zum Text
sw/source/filter/html/htmlcss1.cxx:1514: Fuer alle anderen Attribute eine Zeichen-Vorlage anlegen
sw/source/filter/html/htmlcss1.cxx:1542: Die Zeichenvorlage braucht nur im Attribut gesetzt werden, wenn
    auch das Attribut gesetzt wird
sw/source/filter/html/htmlcss1.cxx:1552: den zu dem Item gehoehrenden Tabellen-Eintrag ermitteln
sw/source/filter/html/htmlcss1.cxx:1706: View wegschmeissen (wegen Reschedule
sw/source/filter/html/htmlcss1.cxx:1727: wurde der Import vom SFX abgebrochen
sw/source/filter/html/htmlcss1.cxx:1788: Der Style wurde synchron geladen und wir koennen
    es direkt aufrufen
sw/source/filter/html/htmlcss1.cxx:1795: Der Style wird asynchron geladen und ist erst beim
    naechsten Continue-Aufruf da. Wir muessen deshalb einen
    Pending-Stack anlegen, damit wir hierher zurueckkehren
sw/source/filter/html/htmlcss1.cxx:1828: page (wirkt auf alle Seiten, die es schon gibt
sw/source/filter/html/htmlcss1.cxx:1834: Fuer alle anderen Seiten-Vorlagen, die es schon gibt
    muessen die Attribute auch noch gesetzt werden
sw/source/filter/html/htmlcss1.cxx:1968: Absolut positionierte Objekte sind seitengebunden, wenn
    sie nicht schon in einem Rahmen stehen und sonst
    Rahmengebunden
sw/source/filter/html/htmlcss1.cxx:2009: fliessende Objekte werden Absatzgebunden eingefuegt, wenn
    der Absatz noch leer ist und sonst auto-gebunden
    Auto-gebundene Rahmen werden zunaechst an der Position davor
    eingefuegt und erst spaeter verschoben
sw/source/filter/html/htmlcss1.cxx:2083: Netscape und MS-IE interpretieren die Hoehe regelwiedrig
    als Mindest-Hoehe, also machwn wir das auch so
sw/source/filter/html/htmlcss1.cxx:2108: Alle 4 Seiten gleichzeitig auf 0 setzen
sw/source/filter/html/htmlcss1.cxx:2144: Stack-Eintrag zu dem Token suchen
sw/source/filter/html/htmlcss1.cxx:2262: Fuer DropCaps noch die Anzahl der Zeichen anpassen. Wenn
    es am Ende 0 sind, wird das Attribut invalidiert und dann
    von _SetAttr gar nicht erst gesetzt
sw/source/filter/html/htmlcss1.cxx:2285: den zu dem Item gehoehrenden Tabellen-Eintrag ermitteln
sw/source/filter/html/htmlctxt.cxx:44: In Umgebung gueltige Numerierung
sw/source/filter/html/htmlctxt.cxx:46: hierhin beim verlassen den
    Kontexts zurueckgesprungen
sw/source/filter/html/htmlctxt.cxx:49: In Umgebung gueltige Attribute
    wenn Attributierung nicht
    beibehalten werden soll
sw/source/filter/html/htmlctxt.cxx:53: In Umgebung gueltige Stack
    Untergrenze, wenn der Stack
    geschuetzt werden soll
sw/source/filter/html/htmlctxt.cxx:56: In Umgebung gueltige Stack
    Untergrenze, wenn die Attribute
    nicht beibehalten werden sollen
sw/source/filter/html/htmlctxt.cxx:74: Die Position gehoert uns, muss also angelegt und zerstoert werden
sw/source/filter/html/htmlctxt.cxx:78: Der Index gehoert uns nicht. Kein Anlgen und Zerstoeren
sw/source/filter/html/htmlctxt.cxx:145: alle noch offenen Attribute beenden und hinter der Tabelle
    neu aufspannen
sw/source/filter/html/htmlctxt.cxx:160: Das Attribut muss eine Content-Position weiter vorne
    beendet werden
sw/source/filter/html/htmlctxt.cxx:182: Das Attribut muss gesetzt werden. Da wir
    das Original noch brauchen, weil Zeiger auf das Attribut
    noch in den Kontexten existieren, muessen wir es clonen
    Die Next-Liste geht dabei verloren, aber die
    Previous-Liste bleibt erhalten
sw/source/filter/html/htmlctxt.cxx:199: Wenn das Attribut nicht gesetzt vor der Tabelle
    gesetzt werden muss, muessen der Previous-Attribute
    trotzdem gesetzt werden
sw/source/filter/html/htmlctxt.cxx:211: den Start des Attributs neu setzen
sw/source/filter/html/htmlctxt.cxx:240: Wenn der PaM an eine andere Position gesetzt wird, muss
    die Numerierung gerettet werden
sw/source/filter/html/htmlctxt.cxx:245: Die Numerierung soll nicht beibehalten werden. Also muss
    der aktuelle Zustand gerettet und die Numerierung
    anschliessend ausgeschaltet werden
sw/source/filter/html/htmlctxt.cxx:266: Mit dem Setzen von nContextStMin koennen automatisch auch
    keine gerade offenen Listen (DL/OL/UL) mehr beendet werden
sw/source/filter/html/htmlctxt.cxx:299: Attribute an aktueller Position beenden und an alter neu
    anfangen
sw/source/filter/html/htmlctxt.cxx:309: Die bisherigen Attribute koennen wir schonmal setzen
sw/source/filter/html/htmlctxt.cxx:322: Die bisherige gemerkte Numerierung wieder setzen
sw/source/filter/html/htmlctxt.cxx:334: Alle noch offenen Kontexte beenden. Der eigene
    Kontext muss bereits geloscht sein
sw/source/filter/html/htmlctxt.cxx:354: Falls ein Bereich geoeffnet wurde, den verlassen. Da Bereiche
    auch innerhalb von absolut positionierten Objekten angelegt werden
    muss das passieren, bever ein alter Dokument-Kontext restauriert wird
sw/source/filter/html/htmlctxt.cxx:358: Rahmen und sonstige Sonderbereiche verlassen
sw/source/filter/html/htmlctxt.cxx:362: Ggf. noch einen Ansatz-Umbruch einfuegen
sw/source/filter/html/htmlctxt.cxx:367: PRE-/LISTING- und XMP-Umgebungen wieder starten
sw/source/filter/html/htmlctxt.cxx:390: einfaches Loeschen reicht hier nicht, weil das
    Attribut auch aus seiner Liste ausgetragen werden
    muss. Theoretisch koennt man natuerlich auch die Liste
    und die Attribute getrennt loeschen, aber wenn man
    dann was falsch gemacht hat, sieht es uebel aus
sw/source/filter/html/htmlctxt.cxx:400: PRE-/LISTING- und XMP-Umgebungen wieder starten
sw/source/filter/html/htmlctxt.cxx:424: Unter folgenden Umstaenden wird jetzt ein Rahmen aufgemacht
    das Tag wird absolut positioniert und left/top sind beide
    gegeben und enthalten auch keine %-Angabe, oder
    das Tag soll fliessen, und
    es wurde eine Breite angegeben (in beiden Faellen noetig
sw/source/filter/html/htmlctxt.cxx:492: Ein DropCap-Attribut basteln, wenn auf Zeichen-Ebene vor dem
    ersten Zeichen ein float: left vorkommt
sw/source/filter/html/htmlctxt.cxx:502: Nur wenn das Initial auch ueber mehrere Zeilen geht, wird das
    DropCap-Attribut gesetzt. Sonst setzten wir die Attribute hart
sw/source/filter/html/htmlctxt.cxx:536: Absatz-Einzuege muessen addiert werden und werden immer
    nur absatzweise gesetzt (fuer den ersten Absatz hier
    fuer alle folgenden in SetTextCollAttrs
sw/source/filter/html/htmlctxt.cxx:542: die bisherigen Absatz-Abstaende holen (ohne die vom
    obersten Kontext, denn den veraendern wir ja gerade
sw/source/filter/html/htmlctxt.cxx:560: und die neuen Abstaende zu den alten addieren
    Hier werden nicht die aus dem Item genommen, sondern die
    extra gemerkten, weil die auch negativ sein koennen. Die
    Abfrage ueber das Item funktioniert aber trotzdem, denn
    fuer negative Werte wird das Item (mit Wert 0) auch
    eingefuegt
sw/source/filter/html/htmlctxt.cxx:586: und die Werte fuer nachfolgende Absaetze merken
sw/source/filter/html/htmlctxt.cxx:589: das Attribut noch am aktuellen Absatz setzen
sw/source/filter/html/htmlctxt.cxx:624: es werden keine Attribute mit %-Angaben gesetzt
sw/source/filter/html/htmlctxt.cxx:629: es werden keine Attribute mit %-Angaben gesetzt
sw/source/filter/html/htmlctxt.cxx:634: es werden keine Attribute mit %-Angaben gesetzt
sw/source/filter/html/htmlctxt.cxx:642: das Frame-Attr ggf. in ein Char-Attr umwandeln
sw/source/filter/html/htmlctxt.cxx:678: den zu dem Item gehoehrenden Tabellen-Eintrag ermitteln
sw/source/filter/html/htmlctxt.cxx:721: PRE/Listing/XMP soll beim beenden des Kontexts beendet werden
sw/source/filter/html/htmlctxt.cxx:724: Und die jetzt gueltigen Flags sollen wieder gesetzt werden
sw/source/filter/html/htmldrawreader.cxx:107: Ggf. den Erstzeilen-Einzug noch plaetten
sw/source/filter/html/htmldrawreader.cxx:134: Ggf. den Erstzeilen-Einzug noch plaetten
sw/source/filter/html/htmldrawreader.cxx:327: erstmal nur als Pixelwerte merken
sw/source/filter/html/htmldrawreader.cxx:335: erstmal nur als Pixelwerte merken
sw/source/filter/html/htmldrawreader.cxx:342: erstmal nur als Pixelwerte merken
sw/source/filter/html/htmldrawreader.cxx:347: erstmal nur als Pixelwerte merken
sw/source/filter/html/htmldrawreader.cxx:380: die fuer das Scrollen benoetigten Attribute umsetzen
sw/source/filter/html/htmldrawreader.cxx:403: die Default-Farbe (aus der Standard-Vorlage) setzen, damit ueberhaupt
    eine sinnvolle Farbe gesetzt ist
sw/source/filter/html/htmldrawreader.cxx:409: Die Attribute der aktuellen Absatzvorlage setzen
sw/source/filter/html/htmldrawreader.cxx:435: die Attribute der Umgebung am Draw-Objekt setzen
sw/source/filter/html/htmldrawreader.cxx:451: Styles parsen (funktioniert hier nur fuer Attribute, die auch
    am Zeichen-Objekt gesetzt werden koennen
sw/source/filter/html/htmldrawreader.cxx:495: Die Laufschrift steht in einer Tabelle, aber nicht
    in einer Zelle. Da jetzt keine vernuenftige Zuordung
    zu einer Zelle moeglich ist, passen wir hir die
    Breite dem Inhalt der Laufschrift an
sw/source/filter/html/htmldrawreader.cxx:502: Da wir wissen, in welcher Zelle die Laufschrift ist
    koennen wir die Breite auch anpassen. Keine Breitenangabe
    wird wie 100% behandelt
sw/source/filter/html/htmldrawreader.cxx:516: Die Hoehe ist nur eine Mindest-Hoehe
sw/source/filter/html/htmldrawreader.cxx:527: und das Objekt in das Dok einfuegen
sw/source/filter/html/htmldrawreader.cxx:536: Das Zeichen-Objekt der Tabelle bekanntmachen. Ist ein bisserl
    umstaendlich, weil noch ueber den Parser gegangen wird, obwohl die
    Tabelle bekannt ist, aber anderenfalls muesste man die Tabelle
    oeffentlich machen, und das ist auch nicht schoen. Das globale
    pTable kann uebrigens auch nicht verwendet werden, denn die
    Laufschrift kann sich auch mal in einer Sub-Tabelle befinden
sw/source/filter/html/htmldrawreader.cxx:549: Da es keine fixe Hoehe gibt, das Text-Objekt erstmal breiter
    als den Text machen, damit nicht umgebrochen wird
sw/source/filter/html/htmldrawreader.cxx:574: das akteulle Textstueck an den Text anhaengen
sw/source/filter/html/htmldrawwriter.cxx:77: die Edit script::Engine-Attribute aus dem Objekt holen
sw/source/filter/html/htmldrawwriter.cxx:81: ueber die Edit script::Engine-Attribute iterieren und die Attribute
    in SW-Attrs wandeln bzw. default setzen
sw/source/filter/html/htmldrawwriter.cxx:117: wenn das Item nicht gesetzt ist nehmen wir ggf. das
    Default-Item
sw/source/filter/html/htmldrawwriter.cxx:121: jetzt Clonen wir das Item mit der Which-Id des Writers
sw/source/filter/html/htmldrawwriter.cxx:143: Gibt es ueberhaupt auszugebenden Text
sw/source/filter/html/htmldrawwriter.cxx:238: Die Hoehe ist bei MS eine Mindesthoehe, also geben wir auch die
    Mindestheoehe aus, wenn es sie gibt. Da eine Mindesthoehe MINFLY
    mit hoher Wahrscheinlichkeit vom Import kommt, wird sie nicht mit
    ausgegeben. Falsch machen kann man da nichst, denn jeder Font ist
    hoeher
sw/source/filter/html/htmldrawwriter.cxx:286: und nun noch ALIGN, HSPACE und VSPACE
sw/source/filter/html/htmldrawwriter.cxx:296: Was jetzt kommt ist das Gegenstueck zu SdrTextObjectt::SetText
sw/source/filter/html/htmlfld.cxx:261: Autor und Absender werden nur als als variables Feld eingefuegt
    wenn man das Dok selbst als letztes geaendert hat oder es noch
    niemend geandert hat und man das Dok erstellt hat. Sonst
    wird ein Fixed-Feld daraus gemacht
sw/source/filter/html/htmlfld.cxx:579: das aktuelle Textstueck an den Text anhaengen
sw/source/filter/html/htmlfld.cxx:610: MIB 24.06.97: Wenn ein PostIt nach einen Space eingefuegt
    werden soll, fuegen wir es vor dem Space ein. Dann gibt es
    weniger Probleme beim Formatieren (bug #40483
sw/source/filter/html/htmlfldw.cxx:209: Fuer ein fixes Feld och den Num-Value ausgeben
    Fixe Felder ohne Zahlenformate sollte es
    eigentlich nicht geben. OSL_ENSURE(ist unten
sw/source/filter/html/htmlfldw.cxx:216: Nicht fixe Felder muessen kein Zahlenformat haben
    wenn sie aus 4.0-Dokumenten stammen
sw/source/filter/html/htmlfldw.cxx:461: Kommentare werden im ANSI-Zeichensetz, aber mit System-Zeilen
    Umbruechen gesschrieben
sw/source/filter/html/htmlfldw.cxx:525: sonst ist es der Script-Inhalt selbst. Da nur noh JavaScript
    in Feldern landet, muss es sich um JavaSrript handeln
sw/source/filter/html/htmlfly.cxx:55: Auto-gebundene Rahmen werden ein Zeichen weiter hinten
    ausgegeben, weil dann die Positionierung mit Netscape
    uebereinstimmt
sw/source/filter/html/htmlfly.hxx:33: ACHTUNG: Die Werte dieses Enumgs gehen direkt in die
    Augabe Tabelle
sw/source/filter/html/htmlflyt.cxx:35: Textrahmen mit Tabelle und Ueberschrift
sw/source/filter/html/htmlflyt.cxx:109: SW
    Netscape schaltet FORM bei Controls in abs.-pos. SPAN aus
sw/source/filter/html/htmlflyt.cxx:131: Textrahmen mit Tabelle und Ueberschrift
sw/source/filter/html/htmlflyt.cxx:195: Laufschrift (fuer Netscape 4 im Container, damit
    die LAufschrift an der richtigen Stelle erscheint
sw/source/filter/html/htmlflyt.cxx:206: SW
    hier koennte man einen Container draus machen (Import fehlt
sw/source/filter/html/htmlflyt.cxx:228: Textrahmen mit Tabelle und Ueberschrift
sw/source/filter/html/htmlflyt.cxx:302: SW
    hier koennte man einen Container draus machen (Import fehlt
sw/source/filter/html/htmlflyt.cxx:324: Textrahmen mit Tabelle und Ueberschrift
sw/source/filter/html/htmlflyt.cxx:420: Textrahmen mit Tabelle und Ueberschrift
sw/source/filter/html/htmlflyt.cxx:484: Laufschrift (kann immer als MARQUEE exportiert werden, weil
    der Inhalt an der richtigen Stelle erscheint
sw/source/filter/html/htmlflywriter.cxx:169: Als Default irgendein Zeichen-Objekt
sw/source/filter/html/htmlflywriter.cxx:320: Absatz-gebundene Rahmen werden nur dann vor den
    Absatz geschrieben, wenn der Absatz einen Abstand
    hat
sw/source/filter/html/htmlflywriter.cxx:363: OutFlyFrm kan rekursiv aufgerufen werden. Deshalb muss man
    manchmal wieder von vorne anfangen, nachdem ein Fly ausgegeben
    wurde
sw/source/filter/html/htmlflywriter.cxx:369: suche nach dem Anfang der FlyFrames
sw/source/filter/html/htmlflywriter.cxx:385: Erst entfernen ist wichtig, weil in tieferen
    Rekursionen evtl. weitere Eintraege oder das
    ganze Array geloscht werden koennte
sw/source/filter/html/htmlflywriter.cxx:393: nicht wirklich, nur raus
    aus der Schleife
sw/source/filter/html/htmlflywriter.cxx:446: Fuer Nicht-Zeichenobekte eine Breite ausgeben
sw/source/filter/html/htmlflywriter.cxx:449: Fuer spaltige Rahmen koennen wir auch noch den Hintergrund ausgeben
sw/source/filter/html/htmlflywriter.cxx:571: MIB 12.3.98: Ist es nicht schlauer, absatzgebundene
    Rahmen notfalls links auszurichten als sie
    zeichengebunden einzufuegen
sw/source/filter/html/htmlflywriter.cxx:652: Der Abstand muss bei der Groesse beruecksichtigt, wenn das entsprechende
    Flag gesetzt ist
sw/source/filter/html/htmlflywriter.cxx:676: WIDTH und/oder HEIGHT
    ATT_VAR_SIZE/ATT_MIN_SIZE nur ausgeben, wenn ANYSIZE gesezut ist
sw/source/filter/html/htmlflywriter.cxx:741: Umlauf fuer absatzgeb. Grafiken als <BR CLEAR=...> in den String
    schreiben
sw/source/filter/html/htmlflywriter.cxx:918: Der Abstand muss bei der Groesse beruecksichtigt, wenn das entsprechende
    Flag gesetzt ist
sw/source/filter/html/htmlflywriter.cxx:942: width" and/or "height
    ATT_VAR_SIZE/ATT_MIN_SIZE nur ausgeben, wenn ANYSIZE gesezut ist
sw/source/filter/html/htmlflywriter.cxx:1002: Umlauf fuer absatzgeb. Grafiken als <BR CLEAR=...> in den String
    schreiben
sw/source/filter/html/htmlflywriter.cxx:1078: das URL-Attribut nur beruecksichtigen, wenn keine Image-Map
    uebergeben wurde
sw/source/filter/html/htmlflywriter.cxx:1216: ggf. ein noch offenes Attribut voruebergehend beenden
sw/source/filter/html/htmlflywriter.cxx:1409: es ist noch ein Attribut auf dem Stack, das wieder geoeffnet
    werden muss
sw/source/filter/html/htmlflywriter.cxx:1524: die Anzahl der Spalten als COLS ausgeben
sw/source/filter/html/htmlflywriter.cxx:1532: die Gutter-Breite (Minimalwert) als GUTTER
sw/source/filter/html/htmlflywriter.cxx:1560: den Inhalt von Multicol einruecken
sw/source/filter/html/htmlflywriter.cxx:1569: in einem Block damit rechtzeitig vor dem Ende der alte Zustand
    wieder hergestellt wird
sw/source/filter/html/htmlflywriter.cxx:1577: den Inhalt von Multicol einruecken
sw/source/filter/html/htmlflywriter.cxx:1590: wenn meoglich vor der Grafik einen Zeilen-Umbruch ausgeben
sw/source/filter/html/htmlflywriter.cxx:1648: Am Start-Node verankerte Rahmen-gebundene Rahmen ausgeben
sw/source/filter/html/htmlflywriter.cxx:1656: in einem Block damit rechtzeitig vor dem Ende der alte Zustand
    wieder hergestellt wird
sw/source/filter/html/htmlflywriter.cxx:1664: den Inhalt von Multicol einruecken
sw/source/filter/html/htmlflywriter.cxx:1725: die Edit-Engine-Attribute des Objekts als SW-Attribute holen
    und als Hints einsortieren
sw/source/filter/html/htmlflywriter.cxx:1762: den Inhalt von Multicol einruecken
sw/source/filter/html/htmlflywriter.cxx:1766: Einen Spacer fuer den Absatnd zusammenbasteln. Da durch das
    DL> bzw. </DL> immer einer Absatz-Abstand entsteht, wird der
    ggf. abgezogen
sw/source/filter/html/htmlflywriter.cxx:1801: in einem Block damit rechtzeitig vor dem Ende der alte Zustand
    wieder hergestellt wird. pFlyFormat braucht hier nicht gestzt zu
    werden, denn PageDesc-Attribute koennen hier nicht vorkommen
sw/source/filter/html/htmlflywriter.cxx:1819: den Inhalt von Multicol einruecken
sw/source/filter/html/htmlflywriter.cxx:1876: Einfach nur in einem sortierten Array merken
sw/source/filter/html/htmlflywriter.cxx:1886: Hier brauchen wir Position und Name. Deshalb sortieren wir
    ein sal_uInt16 und ein String-Array selbst
sw/source/filter/html/htmlform.cxx:380: startProduction darf nicht im Konstruktor gerufen werden, weil
    wir und ggf. selbst zerstoeren ... Deshlab eine eigene Methode
sw/source/filter/html/htmlform.cxx:426: Als Event-Listener am Shape anmelden, damit wir es beim dispose
    loslassen ko"onnen
sw/source/filter/html/htmlform.cxx:433: Zum Schluss halten wir noch eine Referenz auf uns selbst, damit
    wir am Leben bleiben ... (eigentlich sollte das nicht neotig sein
    weil wir ja noch an diversen anderen Stellen angemeldet sind
sw/source/filter/html/htmlform.cxx:436: und am ImageProducer anmelden, um die Groesse zu erehalten
sw/source/filter/html/htmlform.cxx:446: Am Shape als Event-Listener abmelden
sw/source/filter/html/htmlform.cxx:465: Wenn keine Breite oder Hoehe angegeben ist, ist das das init von
    der leeren Grafik, die angezeigt wird, bevor der Stream einer
    asynchron anzuzeigenden Grfik verfuegbar ist
sw/source/filter/html/htmlform.cxx:506: Wenn das Control in einer Tabelle verankert ist, muesen
    die Tabellen-Spalten neu berechnet werden
sw/source/filter/html/htmlform.cxx:509: Um an den SwXShape* zu gelangen, brauchen wir ein Interface
    das auch vom SwXShape implementiert wird
sw/source/filter/html/htmlform.cxx:550: uns selbst abmelden und loeschen
sw/source/filter/html/htmlform.cxx:583: uns selbst abmelden und loeschen
sw/source/filter/html/htmlform.cxx:594: Wenn das Shape verschwindet soll muessen wir es loslassen
sw/source/filter/html/htmlform.cxx:648: Um an den SwXShape* zu gelangen, brauchen wir ein Interface
    das auch vom SwXShape implementiert wird
sw/source/filter/html/htmlform.cxx:764: Erstmal muss die Anzahl der Events ermittelt werden
sw/source/filter/html/htmlform.cxx:771: Solange nicht alle Events implementiert sind, enthaelt die
    Tabelle auch Leerstrings
sw/source/filter/html/htmlform.cxx:916: Ggf. den Erstzeilen-Einzug noch plaetten
sw/source/filter/html/htmlform.cxx:946: Ggf. den Erstzeilen-Einzug noch plaetten
sw/source/filter/html/htmlform.cxx:1207: Das Control-Model am Control-Shape setzen
sw/source/filter/html/htmlform.cxx:1216: Da beim Einfuegen der Controls der Fokus gesetzt wird, werden
    auch schon Fokus-Events verschickt. Damit die nicht evtl. schon
    vorhendene JavaSCript-Eents rufen, werden die Events nachtraeglich
    gesetzt
sw/source/filter/html/htmlform.cxx:1475: erstmal nur als Pixelwerte merken
sw/source/filter/html/htmlform.cxx:1479: erstmal nur als Pixelwerte merken
sw/source/filter/html/htmlform.cxx:1489: erstmal nur als Pixelwerte merken
sw/source/filter/html/htmlform.cxx:1556: Image-Controls ohne Image-URL werden ignoriert (wie bei MS
sw/source/filter/html/htmlform.cxx:1564: ALIGN fuer alle Controls auszuwerten ist keine so gute Idee
    solange Absatz-gebundene Controls die Hoehe von Tabellen-Zellen
    nicht beeinflussen
sw/source/filter/html/htmlform.cxx:1612: Fuer ein par Controls mussen CR/LF noch aus dem VALUE
    geloescht werden
sw/source/filter/html/htmlform.cxx:1676: Beim RadioButton darf die DefaultChecked-Property
    erst gesetzt werden, wenn das Control angelegt und ein
    activateTabOrder gerufen wurde, weil es sonst noch zu der
    vorhergehenden Gruppe gehoert
sw/source/filter/html/htmlform.cxx:1689: SIZE auszuwerten duerfte hier keinen Sinn machen
sw/source/filter/html/htmlform.cxx:1757: Beim File-Control wird der VALUE aus Sicherheitsgruenden ignoriert
sw/source/filter/html/htmlform.cxx:1824: Beim Image-Button bei nicht gegebern Groesse einen sinnvollen Default
    setzen
sw/source/filter/html/htmlform.cxx:1868: Die URL erst nach dem Einfuegen setzen, weil sich der
    Download der Grafik erst dann am XModel anmelden kann
    wenn das Control eingefuegt ist
sw/source/filter/html/htmlform.cxx:1893: Spezialbehandlung fuer TextArea auch untem im Parser beenden
sw/source/filter/html/htmlform.cxx:2100: und PRE/Listing/XMP voruebergehend aussetzen
sw/source/filter/html/htmlform.cxx:2373: und PRE/Listing/XMP voruebergehend aussetzen
sw/source/filter/html/htmlform.cxx:2424: In einer DropDown-Listbox sollte immer ein Eintrag selektiert
    sein
sw/source/filter/html/htmlforw.cxx:101: Und die Position des ControlModel darin suchen
sw/source/filter/html/htmlforw.cxx:230: wir sind in einer Tabelle oder einem Bereich
sw/source/filter/html/htmlforw.cxx:231: ueber dem eine Form aufgespannt wurde
sw/source/filter/html/htmlforw.cxx:235: die Form beenden wenn alle Controls ausgegeben wurden
sw/source/filter/html/htmlforw.cxx:249: Ueberspringen von Controls vor dem interesanten Bereich
sw/source/filter/html/htmlforw.cxx:257: Check fuer einen einzelnen Node: da ist nur interessant, ob
    es zu dem Node ein Control gibt und zu welcher Form es gehoert
sw/source/filter/html/htmlforw.cxx:267: wir klappern eine Tabelle/einen Bereich ab: hier interessiert uns
    ob es Controls mit unterschiedlichen Start-Nodes gibt
    ob es eine Form gibt, fuer die nicht alle Controls in der
    Tabelle/dem Bereich liegen
sw/source/filter/html/htmlforw.cxx:269: die aktuelle Form in der Tabelle
sw/source/filter/html/htmlforw.cxx:271: und die in ihr gefundenen Controls
sw/source/filter/html/htmlforw.cxx:281: Wir befinden uns bereits in einer Form
sw/source/filter/html/htmlforw.cxx:284: und das Control befindet sich auch darin
sw/source/filter/html/htmlforw.cxx:289: aber es liegt in einer anderen Zelle
    Dann muessen eir eine Form ueber der Tabelle
    aufmachen
sw/source/filter/html/htmlforw.cxx:299: aber das Control liegt in einer anderen Zelle
    Da tun wir so, als ob wir eine neue Form aufmachen
    und suchen weiter
sw/source/filter/html/htmlforw.cxx:308: Wir befinden uns noch in keiner Form
    Da tun wir mal so, als ob wie wir die Form aufmachen
sw/source/filter/html/htmlforw.cxx:319: In der Table/dem Bereich sollte eine Form aufgemacht werden
    die nicht vollstaendig in der Tabelle liegt. Dan muessen
    wie die Form jetzt ebenfalls oeffen
sw/source/filter/html/htmlforw.cxx:327: Es soll eine Form aufgemacht werden
sw/source/filter/html/htmlforw.cxx:332: es ist aber noch eine Form offen: Das ist in
    jedem Fall eine Fehler, aber wir schliessen die alte
    Form trotzdem
sw/source/filter/html/htmlforw.cxx:335: Control wird falscher Form zugeordnet
sw/source/filter/html/htmlforw.cxx:352: Ohne DrawModel kann es auch keine Controls geben. Dann darf man
    auch nicht per UNO auf das Dok zugreifen, weil sonst ein DrawModel
    angelegt wird
sw/source/filter/html/htmlforw.cxx:632: hier folgen die Ausgabe-Routinen, dadurch sind die form::Forms gebuendelt
sw/source/filter/html/htmlforw.cxx:640: Schauen, ob es ein SdrObject dafuer gibt
sw/source/filter/html/htmlforw.cxx:913: VALUE vim form aus Sicherheitsgruenden nicht exportieren
sw/source/filter/html/htmlforw.cxx:1028: Wenn Zeichen-Objekte nicht absolut positioniert werden duerfen
    das entsprechende Flag loeschen
sw/source/filter/html/htmlforw.cxx:1159: der Inhalt von Select darf
    eingerueckt werden
sw/source/filter/html/htmlforw.cxx:1226: das </SELECT> bekommt eine eigene Zeile
sw/source/filter/html/htmlforw.cxx:1233: In TextAreas duerfen keine zusaetzlichen Spaces oder LF exportiert
    werden
sw/source/filter/html/htmlforw.cxx:1271: Controls sind nicht absatz-gebunden, deshalb kein LF mehr ausgeben
sw/source/filter/html/htmlforw.cxx:1280: Ermitteln, ob eine Format zu einem Control gehoert und wenn ja
    dessen Form zurueckgeben
sw/source/filter/html/htmlforw.cxx:1317: Idee: die absatz- und zeichengebundenen Controls werden erst einmal
    eingesammelt. Dabei wird fuer jedes Control des Absatz-Position
    und VCForm in einem Array gemerkt
    Ueber dieses Array laesst sich dann feststellen, wo form::Forms geoeffnet
    und geschlossen werden muessen
sw/source/filter/html/htmlforw.cxx:1321: die absatz-gebundenen Controls einsammeln
sw/source/filter/html/htmlforw.cxx:1338: und jetzt die in einem zeichengebundenen Rahmen
sw/source/filter/html/htmlftn.cxx:212: In Kopf- und Fusszeilen duerfen keine Fussnoten eingefuegt werden
sw/source/filter/html/htmlgrin.cxx:116: auf den Start-Node der 1. Section
sw/source/filter/html/htmlgrin.cxx:133: Die (leere) Image-Map des Nodes wird entweder
    durch die jetzt gefundene Image-Map ersetzt
    oder geloescht
sw/source/filter/html/htmlgrin.cxx:141: die Grafikgroesse ist mitlerweile da oder dir
    Grafik muss nicht skaliert werden
sw/source/filter/html/htmlgrin.cxx:167: Wenn wir und in einem Container befinden wird die Verankerung
    des Containers uebernommen
sw/source/filter/html/htmlgrin.cxx:173: Wenn die Ausrichtung anhand der CSS1-Optionen gesetzt werden kann
    werden die benutzt
sw/source/filter/html/htmlgrin.cxx:179: Sonst wird die Ausrichtung entsprechend der normalen HTML-Optionen
    gesetzt
sw/source/filter/html/htmlgrin.cxx:200: Horizonale Ausrichtung und Umlauf bestimmen
sw/source/filter/html/htmlgrin.cxx:224: Einen neuen Absatz aufmachen, wenn der aktuelle
    absatzgebundene Rahmen ohne Umlauf enthaelt
sw/source/filter/html/htmlgrin.cxx:230: Wenn der Absatz nur Grafiken enthaelt, braucht er
    auch keinen unteren Absatz-Abstand. Da hier auch bei
    Verwendung von Styles kein Abstand enstehen soll, wird
    hier auch geweohnlich attributiert
sw/source/filter/html/htmlgrin.cxx:245: Vertikale Ausrichtung und Verankerung bestimmen
sw/source/filter/html/htmlgrin.cxx:281: automatisch verankerte Rahmen muessen noch um eine Position
    nach vorne verschoben werden
sw/source/filter/html/htmlgrin.cxx:357: erstmal nur als Pixelwerte merken
sw/source/filter/html/htmlgrin.cxx:436: Wenn wir in einer Numerierung stehen und der Absatz noch leer und
    nicht numeriert ist, handelt es sich vielleicht um die Grafik
    einer Bullet-Liste
sw/source/filter/html/htmlgrin.cxx:452: Rule invalisieren ist noetig, weil zwischem dem einlesen
    des LI und der Grafik ein EndAction gerufen worden sein kann
sw/source/filter/html/htmlgrin.cxx:457: Die Vorlage novh mal setzen. Ist noetig, damit der
    Erstzeilen-Einzug stimmt
sw/source/filter/html/htmlgrin.cxx:562: CSS1-Groesse auf "normale" Groesse umrechnen
sw/source/filter/html/htmlgrin.cxx:606: Es fehlt die Breite oder die Hoehe
    Wenn die Grfik in einer Tabelle steht, wird sie gleich
    angefordert, damit sie eventuell schon da ist, bevor die
    Tabelle layoutet wird
sw/source/filter/html/htmlgrin.cxx:613: Die Groesse des Rahmens wird nachtraeglich gesetzt
sw/source/filter/html/htmlgrin.cxx:650: Breite und Hoehe wurden angegeben und brauchen nicht gesetzt
    zu werden
sw/source/filter/html/htmlgrin.cxx:690: die Grafik muss beim SetTwipSize skaliert werden, wenn
    wir keine Groesse am Node gesetzt haben oder die Groesse
    nicht der Grafikgroesse entsprach
sw/source/filter/html/htmlgrin.cxx:794: das Attribut wurde unmitellbar vor einer zeichengeb
    Grafik eingefuegt, also verschieben wir es
sw/source/filter/html/htmlgrin.cxx:799: Wenn das Attribut auch ein Sprungziel ist, fuegen
    wir noch eine Bookmark vor der Grafik ein, weil das
    SwFormatURL kein Sprungziel ist
sw/source/filter/html/htmlgrin.cxx:822: Ggf. Frames anlegen und Auto-gebundenen Rahmen registrieren
sw/source/filter/html/htmlgrin.cxx:936: Die Textfarbe wird an der Standard-Vorlage gesetzt
sw/source/filter/html/htmlgrin.cxx:943: Die Item fuer die Seitenvorlage vorbereiten (Hintergrund, Umrandung
    Beim BrushItem muessen schon gesetzte werte erhalten bleiben
sw/source/filter/html/htmlgrin.cxx:983: Ein par Attribute muessen an der Seitenvorlage gesetzt werden
    und zwar die, die nicht vererbit werden
sw/source/filter/html/htmlgrin.cxx:1006: alle noch uebrigen Optionen koennen an der Standard-Vorlage
    gesetzt werden und gelten dann automatisch als defaults
sw/source/filter/html/htmlgrin.cxx:1065: den voherigen Link beenden, falls es einen gab
sw/source/filter/html/htmlgrin.cxx:1160: Sprungziele, die unseren ipmliziten Zielen entsprechen, schmeissen
    wir hier ganz rigoros raus
sw/source/filter/html/htmlgrin.cxx:1363: den Knoten duerfen wir nicht loeschen
sw/source/filter/html/htmlgrin.cxx:1369: die noch offenen Attribute muessen
    beendet werden, bevor der Node
    geloescht wird, weil sonst der
    End-Index in die Botanik zeigt
sw/source/filter/html/htmlgrin.cxx:1374: es wurden Felder in den Node eingefuegt, die muessen
    wir jetzt verschieben
sw/source/filter/html/htmlgrin.cxx:1424: In leeren Zellen stellen wir einen kleinen Font ein, damit die
    Zelle nicht hoeher wird als die Grafik bzw. so niedrig wie
    moeglich bleibt
sw/source/filter/html/htmlgrin.cxx:1433: Wenn die Zelle nur zeichengebundene Grafiken/Rahmen enthaelt
    stellen wir ebenfalls einen kleinen Font ein
sw/source/filter/html/htmlnumreader.cxx:60: Erstmal einen neuen Absatz aufmachen
sw/source/filter/html/htmlnumreader.cxx:80: das Format anpassen, falls es fuer den Level noch nicht
    geschehen ist
sw/source/filter/html/htmlnumreader.cxx:84: das default Numerierungsformat erstellen
sw/source/filter/html/htmlnumreader.cxx:101: Wir setzen hier eine Zeichenvorlage, weil die UI das auch
    so macht. Dadurch wurd immer auch eine 9pt-Schrift
    eingestellt, was in Netscape nicht der Fall ist. Bisher hat
    das noch niemanden gestoert
    i63395# - Only apply user defined default bullet font
sw/source/filter/html/htmlnumreader.cxx:129: Wenn die Ebene schon mal benutzt wurde, muss der Start-Wert
    ggf. hart am Absatz gesetzt werden
sw/source/filter/html/htmlnumreader.cxx:133: und es ggf. durch die Optionen veraendern
sw/source/filter/html/htmlnumreader.cxx:230: Die Groesse nur beachten, wenn Breite und Hoehe vorhanden sind
sw/source/filter/html/htmlnumreader.cxx:241: Die Ausrichtung auch nur beachten, wenn eine Ausrichtung
    angegeben wurde
sw/source/filter/html/htmlnumreader.cxx:246: Und noch die Grafik merken, um sie in den Absaetzen nicht
    einzufuegen
sw/source/filter/html/htmlnumreader.cxx:253: den aktuellen Absatz erst einmal nicht numerieren
sw/source/filter/html/htmlnumreader.cxx:274: Der Der Default-Einzug wurde schon eingefuegt
sw/source/filter/html/htmlnumreader.cxx:327: die Attribute der neuen Vorlage setzen
sw/source/filter/html/htmlnumreader.cxx:338: Ein neuer Absatz muss aufgemacht werden, wenn
    der aktuelle nicht leer ist, also Text oder absatzgebundene Objekte
    enthaelt
    der aktuelle Absatz numeriert ist
sw/source/filter/html/htmlnumreader.cxx:355: den aktuellen Kontext vom Stack holen
sw/source/filter/html/htmlnumreader.cxx:359: Keine Liste aufgrund eines Tokens beenden, wenn der Kontext
    nie angelgt wurde oder nicht beendet werden darf
sw/source/filter/html/htmlnumreader.cxx:366: Die noch nicht angepassten Formate werden jetzt noch
    angepasst, damit es sich besser Editieren laesst
sw/source/filter/html/htmlnumreader.cxx:402: Beim letzen Append wurde das NumRule-Item und das
    NodeNum-Objekt mit kopiert. Beides muessen wir noch
    loeschen. Das ResetAttr loescht das NodeNum-Objekt mit
sw/source/filter/html/htmlnumreader.cxx:427: Absatz-Atts wegen JavaScript moeglichst schnell setzen
sw/source/filter/html/htmlnumreader.cxx:471: In <LI> wird kein Abstand eingefuegt
sw/source/filter/html/htmlnumreader.cxx:506: Wir tun so, als ob wir in einem Absatz sind. Dann wird
    beim naechsten Absatz wenigstens die Numerierung
    weggeschmissen, die nach dem naechsten AppendTextNode uebernommen
    wird
sw/source/filter/html/htmlnumreader.cxx:561: Kontext zu dem Token suchen und vom Stack holen
sw/source/filter/html/htmlnumreader.cxx:582: keine LI/LH ausserhalb der aktuellen Liste betrachten
sw/source/filter/html/htmlnumreader.cxx:592: Absatz-Atts wegen JavaScript moeglichst schnell setzen
sw/source/filter/html/htmlnumreader.cxx:596: und die bisherige Vorlage setzen
sw/source/filter/html/htmlnumreader.cxx:614: NumRule invalidieren, weil sie durch ein EndAction bereits
    auf valid geschaltet worden sein kann
sw/source/filter/html/htmlnumwriter.cxx:59: Der naechste wird als naechstes ausgegeben
sw/source/filter/html/htmlnumwriter.cxx:66: Vor einer Tabelle behalten wir erst einmal die alte Ebene bei
    wenn die gleiche Numerierung hinter der Tabelle
    fortgesetzt wird und dort nicht von vorne numeriert
    wird. Die Tabelle wird ann beim Import so weit eingeruckt
    wie es der Num-Ebene entspricht
sw/source/filter/html/htmlnumwriter.cxx:77: Eine Tabelle wird uebersprungen, also den Node
    hinter der Tabelle betrachten
sw/source/filter/html/htmlnumwriter.cxx:84: In allen anderen Faellen ist die Numerierung erstmal
    zu Ende
sw/source/filter/html/htmlnumwriter.cxx:193: den Typ ueber das Bullet-Zeichen bestimmen
sw/source/filter/html/htmlnumwriter.cxx:228: den Typ ueber das Format bestimmen
sw/source/filter/html/htmlnumwriter.cxx:305: MIB 23.7.97: Die Schleife muss doch rueckwaerts durchlaufen
    werden, weil die Reihenfolge von </OL>/</UL> stimmen muss
sw/source/filter/html/htmlnumwriter.cxx:312: es wird also eine Liste angefangen oder beendet
sw/source/filter/html/htmlplug.cxx:134: absolute Groessenangaben in Twip umrechnen
sw/source/filter/html/htmlplug.cxx:227: Ggf. den Erstzeilen-Einzug noch plaetten
sw/source/filter/html/htmlplug.cxx:265: Ggf. den Erstzeilen-Einzug noch plaetten
sw/source/filter/html/htmlplug.cxx:312: Die Optionen werden vorwaerts gelesen, weil die Plugins sie in
    dieser Reihenfolge erwarten. Trotzdem darf immer nur der erste
    Wert einer Option beruecksichtigt werden
sw/source/filter/html/htmlplug.cxx:380: Es werden alle Parameter an das Plugin weitergereicht
sw/source/filter/html/htmlplug.cxx:390: Die Default-Werte umsetzen (ausser Hoehe/Breite, das macht schon
    SetFrmSize() fuer uns
sw/source/filter/html/htmlplug.cxx:399: Size (0,0) wird in SetFrmSize auf (MINFLY, MINFLY) umgebogen
sw/source/filter/html/htmlplug.cxx:461: und noch die Groesse des Rahmens
sw/source/filter/html/htmlplug.cxx:481: Ggf Frames anlegen und auto-geb. Rahmen registrieren
sw/source/filter/html/htmlplug.cxx:486: HIDDEN-Plugins sollen absatzgebunden bleiben. Da RegisterFlyFrm
    absatzgebundene Rahmen mit DUrchlauf in am Zeichen gebundene
    Rahmen umwandelt, muessen die Frames hier von Hand angelegt werden
sw/source/filter/html/htmlplug.cxx:577: Es werden alle Parameter auch an das Applet weitergereicht
sw/source/filter/html/htmlplug.cxx:619: den Anker und die Ausrichtung setzen
sw/source/filter/html/htmlplug.cxx:622: und noch die Groesse des Rahmens
sw/source/filter/html/htmlplug.cxx:653: Ggf Frames anlegen und auto-geb. Rahmen registrieren
sw/source/filter/html/htmlplug.cxx:726: Es werden alle Parameter auch an das Applet weitergereicht
sw/source/filter/html/htmlplug.cxx:752: den Anker und die Ausrichtung setzen
sw/source/filter/html/htmlplug.cxx:755: und noch die Groesse des Rahmens
sw/source/filter/html/htmlplug.cxx:785: Ggf Frames anlegen und auto-geb. Rahmen registrieren
sw/source/filter/html/htmlplug.cxx:834: Erstmal die Optionen f?r das Writer-Frame-Format holen
sw/source/filter/html/htmlplug.cxx:932: den Anker und die Ausrichtung setzen
sw/source/filter/html/htmlplug.cxx:935: und noch die Groesse des Rahmens
sw/source/filter/html/htmlplug.cxx:951: Ggf Frames anlegen und auto-geb. Rahmen registrieren
sw/source/filter/html/htmlplug.cxx:1013: wenn meoglich vor dem "Objekt" einen Zeilen-Umbruch ausgeben
sw/source/filter/html/htmlplug.cxx:1128: oder das Flating-Frame spezifische
sw/source/filter/html/htmlplug.cxx:1144: ALT, WIDTH, HEIGHT, HSPACE, VSPACE, ALIGN
sw/source/filter/html/htmlplug.cxx:1154: fuer Applets die Parameter als eigene Tags ausgeben
    und ein </APPLET> schreiben
sw/source/filter/html/htmlplug.cxx:1213: fuer Plugins die Parameter als Optionen schreiben
sw/source/filter/html/htmlplug.cxx:1240: und fuer Floating-Frames einfach noch ein </IFRAME
    ausgeben
sw/source/filter/html/htmlsect.cxx:159: noch keine Header, dann erzeuge einen
sw/source/filter/html/htmlsect.cxx:171: noch keine Footer, dann erzeuge einen
sw/source/filter/html/htmlsect.cxx:190: Einen neuen Node zu Beginn der Section anlegen
sw/source/filter/html/htmlsect.cxx:195: Den bisherigen Inhalt der Section loeschen
sw/source/filter/html/htmlsect.cxx:244: Bereiche fuegen wir in Rahmen nur dann ein, wenn der Bereich gelinkt ist
sw/source/filter/html/htmlsect.cxx:248: Bereich einfuegen (muss vor dem Setzten von Attributen erfolgen
    weil die Section vor der PaM-Position eingefuegt
sw/source/filter/html/htmlsect.cxx:253: wenn wir im ersten Node einer Section stehen, wir die neue
    Section nicht in der aktuellen, sondern vor der aktuellen
    Section eingefuegt. Deshalb muessen wir dann einen Node
    einfuegen. UND IN LOESCHEN
sw/source/filter/html/htmlsect.cxx:266: Namen der Section eindeutig machen
sw/source/filter/html/htmlsect.cxx:351: PageDesc- und SwFormatBreak Attribute vom aktuellen Node in den
    ersten) Node des Bereich verschieben
sw/source/filter/html/htmlsect.cxx:359: noch vorhandene PostIts in den ersten Absatz
    der Tabelle setzen
sw/source/filter/html/htmlsect.cxx:367: keine text::Bookmarks mit dem gleichen Namen wie Bereiche einfuegen
sw/source/filter/html/htmlsect.cxx:391: Stack-Eintrag zu dem Token suchen (weil wir noch den Div-Stack
    haben unterscheiden wir erst einmal nicht zwischen DIV und CENTER
sw/source/filter/html/htmlsect.cxx:410: Absatz-Atts wegen JavaScript moeglichst schnell setzen
sw/source/filter/html/htmlsect.cxx:449: Der untere Absatz-Abstand wird zum Abstand zur
    Kopf- oder Fusszeile
sw/source/filter/html/htmlsect.cxx:453: und anschliessend auf einen vernuenftigen Wert
    gesetzt
sw/source/filter/html/htmlsect.cxx:483: Der obere Absatz-Abstand wird zum Abstand zur
    Kopf- oder Fusszeile, wenn er groesser ist als
    der untere vom Absatz davor
sw/source/filter/html/htmlsect.cxx:487: und anschliessend auf einen vernuenftigen Wert gesetzt
sw/source/filter/html/htmltab.cxx:572: Beenden einer Tab-Definition (MUSS fuer ALLE Tabs aufgerufen werden
sw/source/filter/html/htmltab.cxx:575: SwTable konstruieren (inkl. der Child-Tabellen
sw/source/filter/html/htmltab.cxx:643: die Tabellen brauchen wir nicht mehr
sw/source/filter/html/htmltab.cxx:698: der Inhalt ist in mehrere Zellen eingetragen, darf aber nur einmal
    geloescht werden
sw/source/filter/html/htmltab.cxx:738: Die Inhalte dieser Zelle mussen nich irgenwo anders verankert
    sein, weil sie nicht geloescht werden
sw/source/filter/html/htmltab.cxx:814: die Zeile wird mit einer einzigen Zelle aufgefuellt, wenn
    bOneCell gesetzt ist. Das geht, nur fuer Zeilen, in die keine
    Zellen mehr eingefuegt werden
sw/source/filter/html/htmltab.cxx:964: nBorder gibt die Breite der Umrandung an, wie sie in die
    Breitenberechnung in Netscape einfliesst. Wenn pOption->nBorder
    USHRT_MAX, wurde keine BORDER-Option angegeben. Trotzdem fliesst
    eine 1 Pixel breite Umrandung in die Breitenberechnung mit ein
sw/source/filter/html/htmltab.cxx:970: HACK: ein Pixel-breite Linien sollen zur Haarlinie werden, wenn
    wir mit doppelter Umrandung arbeiten
sw/source/filter/html/htmltab.cxx:1097: pLayoutInfo wurde entweder bereits geloescht oder muss aber es
    in den Besitz der SwTable uebergegangen
sw/source/filter/html/htmltab.cxx:1184: Suchen des SwStartNodes der letzten belegten Vorgaengerbox
sw/source/filter/html/htmltab.cxx:1205: evtl. eine Zelle in der aktuellen Zeile
sw/source/filter/html/htmltab.cxx:1217: sonst die letzte gefuellte Zelle der Zeile davor suchen
sw/source/filter/html/htmltab.cxx:1281: Wenn die Gegenueberliegende Seite umrandet ist muessen
    wir zumindest den minimalen Abstand zum Inhalt
    beruecksichtigen. (Koennte man zusaetzlich auch an
    nCellPadding festmachen
sw/source/filter/html/htmltab.cxx:1321: Wenn die Gegenueberliegende Seite umrandet ist muessen
    wir zumindest den minimalen Abstand zum Inhalt
    beruecksichtigen. (Koennte man zusaetzlich auch an
    nCellPadding festmachen
sw/source/filter/html/htmltab.cxx:1362: Wenn die Zelle ueber mehrere Zeilen geht muss ein evtl
    an der Zeile gesetzter Hintergrund an die Zelle uebernommen
    werden
    Wenn es sich um eine Tabelle in der Tabelle handelt und
    die Zelle ueber die gesamte Heoehe der Tabelle geht muss
    ebenfalls der Hintergrund der Zeile uebernommen werden, weil
    die Line von der GC (zu Recht) wegoptimiert wird
sw/source/filter/html/htmltab.cxx:1411: die Umrandung nur an Edit-Boxen setzen (bei der oberen und unteren
    Umrandung muss beruecks. werden, ob es sich um den ersten oder
    letzen Absatz der Zelle handelt
sw/source/filter/html/htmltab.cxx:1435: Leere Zeilen koennen zur Zeit nur dann ueber
    dicke Linien simuliert werden, wenn die Linie
    einfach ist
sw/source/filter/html/htmltab.cxx:1472: BorderDist nicht mehr Bestandteil einer Zelle mit fixer Breite
sw/source/filter/html/htmltab.cxx:1479: wir setzen das Item nur, wenn es eine Umrandung gibt
    oder eine sheet::Border-Distanz vorgegeben ist. Fehlt letztere
    dann gibt es eine Umrandung, und wir muessen die Distanz
    setzen
sw/source/filter/html/htmltab.cxx:1493: Format nur setzten, wenn es auch einen Value gibt oder die Box leer ist
sw/source/filter/html/htmltab.cxx:1606: wenn der StartNode dem StartNode der initial angelegten Box
    entspricht nehmen wir diese Box
sw/source/filter/html/htmltab.cxx:1646: An der Line eine Frabe zu setzen macht keinen Sinn, wenn sie
    die auesserste und gleichzeitig einzige Zeile einer Tabelle in
    der Tabelle ist
sw/source/filter/html/htmltab.cxx:1653: Ein an einer Tabellen in der Tabelle gesetzter Hintergrund
    wird an den Rows gesetzt. Das gilt auch fuer den Hintergrund
    der Zelle, in dem die Tabelle vorkommt
sw/source/filter/html/htmltab.cxx:1669: Tabellenhoehe einstellen. Da es sich um eine
    Mindesthoehe handelt, kann sie genauso wie in
    Netscape berechnet werden, also ohne Beruecksichtigung
    der tatsaechlichen Umrandungsbreite
sw/source/filter/html/htmltab.cxx:1685: sonst muessen wir die Hoehe aus dem Attribut entfernen
    und koennen uns das Format merken
sw/source/filter/html/htmltab.cxx:1714: Die HTML-Tabellen-Zellen bilden genau eine Box
    Dann muss hinter der Box gesplittet werden
sw/source/filter/html/htmltab.cxx:1792: und die ist eine Tabelle: dann bauen wir eine neue
    Box und fuegen die Zeilen der Tabelle in die Zeilen
    der Box ein
sw/source/filter/html/htmltab.cxx:1805: mehrere Inhalts Sections: dann brauchen wir eine Box mit Zeilen
sw/source/filter/html/htmltab.cxx:1814: normale Absaetze werden zu einer Box in einer Zeile
sw/source/filter/html/htmltab.cxx:1821: Wenn es noch kein Line-Format ohne Hoehe gibt, koennen
    wir uns dieses her als soleches merken
sw/source/filter/html/htmltab.cxx:1840: Tabellen werden direkt eingetragen
sw/source/filter/html/htmltab.cxx:1877: Die Child-Tabelle muss einen Rahmen bekommen, wenn die umgebende
    Zelle einen Rand an der betreffenden Seite besitzt
    Der obere bzw. untere Rand wird nur gesetzt, wenn die Tabelle
    ale erster bzw. letzter Absatz in der Zelle vorkommt. Ansonsten
    Fuer den linken/rechten Rand kann noch nicht entschieden werden
    ob eine Umrandung der Tabelle noetig/moeglich ist, weil das davon
    abhaengt, ob "Filler"-Zellen eingefuegt werden. Hier werden deshalb
    erstmal nur Informationen gesammelt
sw/source/filter/html/htmltab.cxx:1882: auch Filler bekommt eine Umrandung
sw/source/filter/html/htmltab.cxx:1888: auch Filler bekommt eine Umrandung
sw/source/filter/html/htmltab.cxx:1897: Die Child Tabelle darf keinen oberen oder linken Rahmen bekommen
    wenn der bereits durch die umgebende Tabelle gesetzt ist
    Sie darf jedoch immer einen oberen Rand bekommen, wenn die Tabelle
    nicht der erste Absatz in der Zelle ist
sw/source/filter/html/htmltab.cxx:1902: die Child-Tabelle muss die Farbe der Zelle erben, in der sie
    vorkommt, wenn sie keine eigene besitzt
sw/source/filter/html/htmltab.cxx:1910: die ganze umgebende Tabelle ist eine Tabelle in der Tabelle
    und besteht nur aus einer Line, die bei der GC (zu Recht
    wegoptimiert wird. Deshalb muss der Hintergrund der Line in
    diese Tabelle uebernommen werden
sw/source/filter/html/htmltab.cxx:2079: falls wir mehr Spalten benoetigen als wir zur Zeit haben
    muessen wir in allen Zeilen noch Zellen hinzufuegen
sw/source/filter/html/htmltab.cxx:2094: falls wir mehr Zeilen benoetigen als wir zur Zeit haben
    muessen wir noch neue Zeilen hinzufuegen
sw/source/filter/html/htmltab.cxx:2104: Testen, ob eine Ueberschneidung vorliegt und diese
    gegebenfalls beseitigen
sw/source/filter/html/htmltab.cxx:2118: Der Inhalt reicht von einer weiter oben stehenden Zelle
    hier herein. Inhalt und Farbe der Zelle sind deshalb in
    jedem Fall noch dort verankert und koennen deshalb
    ueberschrieben werden bzw. von ProtectRowSpan geloescht
    Inhalt) oder kopiert (Farbe) werden
sw/source/filter/html/htmltab.cxx:2129: Auch diese Inhalte sind in jedem Fall nich in der Zeile
    darueber verankert
sw/source/filter/html/htmltab.cxx:2155: die Breite nur in die erste Zelle setzen
sw/source/filter/html/htmltab.cxx:2170: den Spaltenzaehler hinter die neuen Zellen setzen
sw/source/filter/html/htmltab.cxx:2175: und die naechste freie Zelle suchen
sw/source/filter/html/htmltab.cxx:2182: die vorhergende Section beenden, falls es schon eine Zeile gibt
sw/source/filter/html/htmltab.cxx:2195: die naechste Zeile anlegen, falls sie nicht schon da ist
sw/source/filter/html/htmltab.cxx:2211: den Spaltenzaehler wieder an den Anfang setzen
sw/source/filter/html/htmltab.cxx:2214: und die naechste freie Zelle suchen
sw/source/filter/html/htmltab.cxx:2223: leere Zellen bekommen einfach einen etwas dickeren unteren Rand
sw/source/filter/html/htmltab.cxx:2236: den COLSPAN aller leeren Zellen am Zeilenende so anpassen, dass
    eine Zelle daraus wird. Das kann man hier machen (und auf keinen
    Fall frueher), weill jetzt keine Zellen mehr in die Zeile eingefuegt
    werden
sw/source/filter/html/htmltab.cxx:2316: Die Anzahl der Tabellenzeilen richtet sich nur nach den
    TR>-Elementen (d.h. nach nCurRow). Durch ROWSPAN aufgespannte
    Zeilen hinter Zeile nCurRow muessen wir deshalb loeschen
    und vor allem aber den ROWSPAN in den darueberliegenden Zeilen
    anpassen
sw/source/filter/html/htmltab.cxx:2332: falls die Tabelle keine Spalte hat, muessen wir eine hinzufuegen
sw/source/filter/html/htmltab.cxx:2342: falls die Tabelle keine Zeile hat, muessen wir eine hinzufuegen
sw/source/filter/html/htmltab.cxx:2416: Umrandung der Tabelle und aller in ihr enthaltenen berechnen
sw/source/filter/html/htmltab.cxx:2420: Schritt 1: Die benoetigten Layout-Strukturen werden angelegt
    inklusive Tabellen in Tabellen
sw/source/filter/html/htmltab.cxx:2425: Schritt 2: Die minimalen und maximalen Spaltenbreiten werden
    berechnet (inklusive Tabellen in Tabellen). Da wir noch keine
    Boxen haben, arabeiten wir noch auf den Start-Nodes
sw/source/filter/html/htmltab.cxx:2432: Schritt 3: Die tatsaechlichen Spaltenbreiten dieser Tabelle werden
    berechnet (nicht von Tabellen in Tabellen). Dies muss jetzt schon
    sein, damit wir entscheiden koennen ob Filler-Zellen benoetigt werden
    oder nicht (deshalb war auch Pass1 schon noetig
sw/source/filter/html/htmltab.cxx:2439: die linke und rechte Umrandung der Tabelle kann jetzt entgueltig
    festgelegt werden
sw/source/filter/html/htmltab.cxx:2444: linke Umrandung von auesserer Tabelle uebernehmen
sw/source/filter/html/htmltab.cxx:2453: Umrandung nur setzen, wenn es erlaubt ist
sw/source/filter/html/htmltab.cxx:2462: ggf. rechte Umrandung von auesserer Tabelle uebernehmen
sw/source/filter/html/htmltab.cxx:2468: Fuer die Top-Table muss die Ausrichtung gesetzt werden
sw/source/filter/html/htmltab.cxx:2476: Die Tabelle soll in einen Rahmen und ist auch schmaler
    als der verfuegbare Platz und nicht 100% breit
    Dann kommt sie in einen Rahmen
sw/source/filter/html/htmltab.cxx:2483: Die Tabelle passt entweder auf die Seite, soll aber in keinen
    Rahmen oder sie ist Breiter als die Seite und soll deshalb
    in keinen Rahmen
sw/source/filter/html/htmltab.cxx:2487: in rechtsbuendigen Tabellen kann nicht auf den rechten
    Rand Ruecksicht genommen werden
sw/source/filter/html/htmltab.cxx:2491: zentrierte Tabellen nehmen keine Ruecksicht auf Raender
sw/source/filter/html/htmltab.cxx:2497: linksbuendige Tabellen nehmen nur auf den linken Rand
    Ruecksicht
sw/source/filter/html/htmltab.cxx:2502: das Tabellenform holen und anpassen
sw/source/filter/html/htmltab.cxx:2527: die Default Line- und Box-Formate holen
sw/source/filter/html/htmltab.cxx:2530: die erste Box merken und aus der ersten Zeile ausketten
sw/source/filter/html/htmltab.cxx:2545: ggf. muessen fuer Tabellen in Tabellen "Filler"-Zellen eingefuegt
    werden
sw/source/filter/html/htmltab.cxx:2554: dazu brauchen wir erstmal ein eine neue Table-Line in der Box
sw/source/filter/html/htmltab.cxx:2560: Sicherstellen, dass wie ein Format ohne Hoehe erwischt haben
sw/source/filter/html/htmltab.cxx:2564: sonst muessen wir die Hoehe aus dem Attribut entfernen
    und koennen uns das Format merken
sw/source/filter/html/htmltab.cxx:2577: pPrevStNd ist der Vorgaenger-Start-Node der Tabelle. Den
    Filler"-Node fuegen wir einfach dahinter ein
sw/source/filter/html/htmltab.cxx:2598: und noch ggf. rechts eine Zelle einfuegen
sw/source/filter/html/htmltab.cxx:2618: zum Schluss fuehren wir noch eine Garbage-Collection fuer die
    Top-Level-Tabelle durch
sw/source/filter/html/htmltab.cxx:2626: Hoehe einer einzeiligen Tabelle als Mindesthoehe der
    Zeile setzen. (War mal fixe Hoehe, aber das gibt manchmal
    Probleme (fix #34972#) und ist auch nicht Netscape 4.0
    konform
sw/source/filter/html/htmltab.cxx:2652: Wenn eine Tabelle ohne Breitenangabe nicht links oder
    rechts umflossen werden soll, dann stacken wir sie
    in einem Rahmen mit 100%-Breite, damit ihre Groesse
    angepasst wird. Der Rahmen darf nicht angepasst werden
sw/source/filter/html/htmltab.cxx:2666: Links und rechts ausgerichtete Tabellen ohne Breite
    duerfen leider nicht in der Breite angepasst werden, denn
    sie wuerden nur schrumpfen aber nie wachsen
sw/source/filter/html/htmltab.cxx:2895: vorsicht, wenn Kommentare nicht uebrlesen werden
sw/source/filter/html/htmltab.cxx:2915: Bei Netscape entspricht ein Absatz-Ende zwei LFs
    mit einem kommt man in die naechste Zeile, das
    zweite erzeugt eine Leerzeile) Diesen Abstand
    erreichen wie aber schon mit dem unteren
    Absatz-Abstand. Wenn nach den <BR> ein neuer
    Absatz aufgemacht wird, wird das Maximum des Abstands
    der sich aus den BR und dem P ergibt genommen
    Deshalb muessen wir 2 bzw. alle bei weniger
    als zweien loeschen
sw/source/filter/html/htmltab.cxx:3055: und noch ein par Zaehler rekonstruieren
sw/source/filter/html/htmltab.cxx:3180: Leere BGCOLOR bei <TABLE>, <TR> und <TD>/<TH> wie Netscape
    ignorieren, bei allen anderen Tags *wirklich* nicht
sw/source/filter/html/htmltab.cxx:3230: einen neuen Kontext anlegen, aber das drawing::Alignment-Attribut
    nicht dort verankern, weil es noch ger keine Section gibt, in der
    es gibt
sw/source/filter/html/htmltab.cxx:3303: Die Attribute muessen schon beim Auefrauemen des Kontext-Stacks
    entfernt worden sein, sonst ist etwas schiefgelaufen. Das
    Checken wir mal eben
    MIB 8.1.98: Wenn ausserhalb einer Zelle Attribute geoeffnet
    wurden stehen diese noch in der Attribut-Tabelle und werden erst
    ganz zum Schluss durch die CleanContext-Aufrufe in BuildTable
    geloescht. Damit es in diesem Fall keine Asserts gibt findet dann
    keine Ueberpruefung statt. Erkennen tut man diesen Fall an
    nContextStAttrMin: Der gemerkte Wert nContextStAttrMinSave ist der
    Wert, den nContextStAttrMin beim Start der Tabelle hatte. Und
    der aktuelle Wert von nContextStAttrMin entspricht der Anzahl der
    Kontexte, die beim Start der Zelle vorgefunden wurden. Sind beide
    Werte unterschiedlich, wurden ausserhalb der Zelle Kontexte
    angelegt und wir ueberpruefen nichts
sw/source/filter/html/htmltab.cxx:3317: jetzt muessen wir noch die Zelle an der aktuellen Position einfuegen
sw/source/filter/html/htmltab.cxx:3365: NOBR> wurde unmittelbar vor dem Zellen-Ende beendet
sw/source/filter/html/htmltab.cxx:3378: Zwischem dem </NOBR> und dem Zellen-Ende gibt es nur
    ein Blank oder einen Zeilenumbruch
sw/source/filter/html/htmltab.cxx:3390: eine neue Section anlegen, der PaM steht dann darin
sw/source/filter/html/htmltab.cxx:3397: 1. Absatz auf nicht numeriert setzen
sw/source/filter/html/htmltab.cxx:3461: TH> bzw. <TD> wurde bereits gelesen
sw/source/filter/html/htmltab.cxx:3473: die Tabelle besitzt noch keinen Inhalt, d.h. die eigentliche
    Tabelle muss erst noch angelegt werden
sw/source/filter/html/htmltab.cxx:3514: Den linken/rechten Absatzeinzug ermitteln
sw/source/filter/html/htmltab.cxx:3520: die aktuelle Position an die wir irgendwann zurueckkehren
sw/source/filter/html/htmltab.cxx:3531: Wenn die Tabelle links oder rechts ausgerivchtet ist
    oder in einen Rahmen soll, dann kommt sie auch in einen
    solchen
sw/source/filter/html/htmltab.cxx:3538: Entweder kommt die Tabelle in keinen Rahmen und befindet
    sich in keinem Rahmen (wird also durch Zellen simuliert
    oder es gibt bereits Inhalt an der entsprechenden Stelle
sw/source/filter/html/htmltab.cxx:3547: Wenn die Tabelle in einen Rahmen kommt, muss
    nur ein neuer Absatz aufgemacht werden, wenn
    der Absatz Rahmen ohne Umlauf enthaelt
sw/source/filter/html/htmltab.cxx:3554: Sonst muss ein neuer Absatz aufgemacht werden
    wenn der Absatz nicht leer ist, oder Rahmen
    oder text::Bookmarks enthaelt
sw/source/filter/html/htmltab.cxx:3587: ja, 0, weil schon
    vom Tabellenende vorher
    was gesetzt sein kann
sw/source/filter/html/htmltab.cxx:3598: Der Absatz wird gleich hinter die Tabelle
    verschoben. Deshalb entfernen wir alle harten
    Attribute des Absatzes
sw/source/filter/html/htmltab.cxx:3613: Absaetze bzw. ueberschriften beeenden
sw/source/filter/html/htmltab.cxx:3617: die harten Attribute an diesem Absatz werden nie mehr ungueltig
sw/source/filter/html/htmltab.cxx:3628: alle noch offenen Attribute beenden und hinter der Tabelle
    neu aufspannen
sw/source/filter/html/htmltab.cxx:3639: Wenn wir einen schon vorhandenen Absatz verwenden, duerfen
    in den keine PostIts eingefuegt werden, weil der Absatz
    ja hinter die Tabelle wandert. Sie werden deshalb in den
    ersten Absatz der Tabelle verschoben
    Bei Tabellen in Tabellen duerfen ebenfalls keine PostIts
    in einen noch leeren Absatz eingefuegt werden, weil
    der sonat nicht geloescht wird
sw/source/filter/html/htmltab.cxx:3657: Aktuelle Numerierung retten und auschalten
sw/source/filter/html/htmltab.cxx:3666: Die Tabelle soll in einen Rahmen geschaufelt werden
sw/source/filter/html/htmltab.cxx:3725: eine SwTable mit einer Box anlegen und den PaM in den
    Inhalt der Box-Section bewegen (der Ausrichtungs-Parameter
    ist erstmal nur ein Dummy und wird spaeter noch richtig
    gesetzt
sw/source/filter/html/htmltab.cxx:3783: noch vorhandene PostIts in den ersten Absatz
    der Tabelle setzen
sw/source/filter/html/htmltab.cxx:3799: noch offene Bereiche muessen noch entfernt werden
sw/source/filter/html/htmltab.cxx:3807: dannach entfernen wir ein ggf. zu viel vorhandenen
    leeren Absatz, aber nur, wenn er schon vor dem
    entfernen von LFs leer war
sw/source/filter/html/htmltab.cxx:3814: noch vorhandene PostIts an das Ende des jetzt
    aktuellen Absatzes schieben
sw/source/filter/html/htmltab.cxx:3831: Den Kontext-Stack einfrieren, denn es koennen auch mal
    irgendwo ausserhalb von Zellen Attribute gesetzt werden
    Darf nicht frueher passieren, weil eventuell noch im
    Stack gesucht wird
sw/source/filter/html/htmltab.cxx:3840: ist beim ersten GetNextToken schon pending, muss bei
    wiederaufsetzen auf jedenfall neu gelesen werden
sw/source/filter/html/htmltab.cxx:3859: NextToken direkt aufrufen (z.B. um den Inhalt von
    Floating-Frames oder Applets zu ignorieren
sw/source/filter/html/htmltab.cxx:3889: nur wenn eine neue Tabelle aufgemacht wird, aber
    nicht wenn nach einem Pending in der Tabelle
    weitergelesen wird
sw/source/filter/html/htmltab.cxx:3893: HACK: Eine Section fuer eine Tabelle anlegen, die
    in einen Rahmen kommt
sw/source/filter/html/htmltab.cxx:3897: Diese Schleife muss vorwartes sein, weil die
    erste Option immer gewinnt
sw/source/filter/html/htmltab.cxx:3922: Wenn im aktuellen Absatz Flys verankert sind
    muss die neue Tabelle in einen Rahmen
sw/source/filter/html/htmltab.cxx:3926: in der Zelle kann sich ein Bereich befinden
sw/source/filter/html/htmltab.cxx:3939: nur wenn die Tabelle wirklich zu Ende ist
sw/source/filter/html/htmltab.cxx:3988: Da wir diese Section nicht mehr loeschen
    koennen (sie koeente zur erster Box
    gehoeren), fuegen wir sie ein
sw/source/filter/html/htmltab.cxx:3992: Jetzt haben wir keine Section mehr
sw/source/filter/html/htmltab.cxx:4003: HACK fuer MS: Steht das <NOBR> zu beginn der Zelle
sw/source/filter/html/htmltab.cxx:4014: Mit Kommentar-Feldern werden Spaces nicht mehr geloescht
    ausserdem wollen wir fuer einen Kommentar keine neue Zelle
    anlegen
sw/source/filter/html/htmltab.cxx:4021: eine neue Section anlegen, der PaM steht dann darin
sw/source/filter/html/htmltab.cxx:4037: eine neue Section anlegen, der PaM steht dann darin
sw/source/filter/html/htmltab.cxx:4070: Falls der Inhalt der Zelle leer war, muessen wir noch einen
    leeren Inhalt anlegen. Ausserdem legen wir einen leeren Inhalt
    an, wenn die Zelle mit einer Tabelle aufgehoert hat und keine
    COL-Tags hatte (sonst wurde sie wahrscheinlich von uns exportiert
    und dann wollen wir natuerlich keinen zusaetzlichen Absatz haben
sw/source/filter/html/htmltab.cxx:4101: Alle noch offenen Kontexte beenden. Wir nehmen hier
    AttrMin, weil nContxtStMin evtl. veraendert wurde
    Da es durch EndContext wieder restauriert wird, geht das
sw/source/filter/html/htmltab.cxx:4114: falls fuer die Zelle eine Ausrichtung gesetzt wurde, muessen
    wir die beenden
sw/source/filter/html/htmltab.cxx:4130: auch eine Numerierung muss beendet werden
sw/source/filter/html/htmltab.cxx:4137: wir stehen jetzt (wahrschenlich) vor <TH>, <TD>, <TR> oder </TABLE
sw/source/filter/html/htmltab.cxx:4208: Leere BGCOLOR bei <TABLE>, <TR> und <TD>/<TH> wie Netsc
    ignorieren, bei allen anderen Tags *wirklich* nicht
sw/source/filter/html/htmltab.cxx:4236: ist beim ersten GetNextToken schon pending, muss bei
    wiederaufsetzen auf jedenfall neu gelesen werden
sw/source/filter/html/htmltab.cxx:4257: NextToken direkt aufrufen (z.B. um den Inhalt von
    Floating-Frames oder Applets zu ignorieren
sw/source/filter/html/htmltab.cxx:4305: wo keine Zelle anfing kann auch keine aufhoehren, oder
    und die ganzen anderen Tokens haben hier auch nicht zu
    suchen und machen nur die Tabelle kaputt
sw/source/filter/html/htmltab.cxx:4308: spaltige Rahmen koennen wir hier leider nicht einguegen
sw/source/filter/html/htmltab.cxx:4321: eine Image-Map fuegt nichts ein, deshalb koennen wir sie
    problemlos auch ohne Zelle parsen
sw/source/filter/html/htmltab.cxx:4356: wir stehen jetzt (wahrscheinlich) vor <TR> oder </TABLE
sw/source/filter/html/htmltab.cxx:4363: THEAD>, <TBODY> bzw. <TFOOT> wurde bereits gelesen
sw/source/filter/html/htmltab.cxx:4434: NextToken direkt aufrufen (z.B. um den Inhalt von
    Floating-Frames oder Applets zu ignorieren
sw/source/filter/html/htmltab.cxx:4477: spaltige Rahmen koennen wir hier leider nicht einguegen
sw/source/filter/html/htmltab.cxx:4486: Blank-Strings sind Folge von CR+LF und kein Text
sw/source/filter/html/htmltab.cxx:4607: ist beim ersten GetNextToken schon pending, muss bei
    wiederaufsetzen auf jedenfall neu gelesen werden
sw/source/filter/html/htmltab.cxx:4628: NextToken direkt aufrufen (z.B. um den Inhalt von
    Floating-Frames oder Applets zu ignorieren
sw/source/filter/html/htmltab.cxx:4693: die Angaben in <COLGRP> sollen ignoriert werden, wenn
    COL>-Elemente existieren
sw/source/filter/html/htmltab.cxx:4700: spaltige Rahmen koennen wir hier leider nicht einguegen
sw/source/filter/html/htmltab.cxx:4749: Die aktuelle Numerierung wurde gerettet und muss nur
    noch beendet werden
sw/source/filter/html/htmltab.cxx:4758: Die alten Stack wiederherstellen
sw/source/filter/html/htmltab.cxx:4761: Die alte Attribut-Tabelle wiederherstellen
sw/source/filter/html/htmltab.cxx:4764: Die alte Numerierung wieder aufspannen
sw/source/filter/html/htmltab.cxx:4832: Tabellen-Ueberschriften sind immer zentriert
sw/source/filter/html/htmltab.cxx:4936: Beim spaeteren verschieben der Beschriftung vor oder hinter
    die Tabelle wird der letzte Absatz nicht mitverschoben
    Deshalb muss sich am Ende der Section immer ein leerer
    Absatz befinden
sw/source/filter/html/htmltab.cxx:4948: falls fuer die Zelle eine Ausrichtung gesetzt wurde, muessen
    wir die beenden
sw/source/filter/html/htmltab.cxx:4955: Stacks und Attribut-Tabelle wiederherstellen
sw/source/filter/html/htmltab.cxx:4977: Aufbau der Tabelle anstossen und die Tabelle ggf. in einen
    Rahmen packen. Wenn true zurueckgegeben wird muss noch ein
    Absatz eingefuegt werden
sw/source/filter/html/htmltab.cxx:4997: Existiert schon ein Layout, dann muss an dieser Tabelle die
    BoxFrames neu erzeugt werden
sw/source/filter/html/htmltab.cxx:5077: BORDER und BORDER=BORDER wie BORDER=1 behandeln
sw/source/filter/html/htmltab.cxx:5102: Leere BGCOLOR bei <TABLE>, <TR> und <TD>/<TH> wie Netscape
    ignorieren, bei allen anderen Tags *wirklich* nicht
sw/source/filter/html/htmltab.cxx:5145: Wenn BORDER=0 oder kein BORDER gegeben ist, daan darf es auch
    keine Umrandung geben
sw/source/filter/html/htmltab.cxx:5199: ist beim ersten GetNextToken schon pending, muss bei
    wiederaufsetzen auf jedenfall neu gelesen werden
sw/source/filter/html/htmltab.cxx:5223: NextToken direkt aufrufen (z.B. um den Inhalt von
    Floating-Frames oder Applets zu ignorieren
sw/source/filter/html/htmltab.cxx:5232: Wenn noch keine Tabelle eingefuegt wurde
    die naechste Tabelle lesen
sw/source/filter/html/htmltab.cxx:5266: spaltige Rahmen koennen wir hier leider nicht einguegen
sw/source/filter/html/htmltab.cxx:5275: Blank-Strings sind u. U. eine Folge von CR+LF und kein Text
sw/source/filter/html/htmltab.cxx:5313: ausserhalb von Zellen begonnene Kontexte beenden
    muss vor(!) dem Umsetzten der Attribut Tabelle existieren
    weil die aktuelle danach nicht mehr existiert
sw/source/filter/html/htmltab.cxx:5331: Der letzte Absatz der Section wird nie mitkopiert. Deshalb
    muss die Section mindestens zwei Absaetze enthalten
sw/source/filter/html/htmltab.cxx:5335: Start-Node und letzten Absatz nicht mitkopieren
sw/source/filter/html/htmltab.cxx:5360: Wenn die Caption vor der Tabelle eingefuegt wurde muss
    eine an der Tabelle gestzte Seitenvorlage noch in den
    ersten Absatz der Ueberschrift verschoben werden
    Ausserdem muessen alle gemerkten Indizes, die auf den
    Tabellen-Node zeigen noch verschoben werden
sw/source/filter/html/htmltab.cxx:5368: Die Section wird jetzt nicht mehr gebraucht
sw/source/filter/html/htmltab.cxx:5406: Wenn Import abgebrochen wurde kein erneutes Show
    aufrufen, weil die SwViewShell schon geloescht wurde
    Genuegt nicht. Auch im ACCEPTING_STATE darf
    kein Show aufgerufen werden, weil sonst waehrend des
    Reschedules der Parser zerstoert wird, wenn noch ein
    DataAvailable-Link kommt. Deshalb: Nur im WORKING-State
sw/source/filter/html/htmltab.cxx:5413: Es wurde gar keine Tabelle gelesen
sw/source/filter/html/htmltab.cxx:5415: Dann muss eine evtl gelesene Beschriftung noch geloescht werden
sw/source/filter/html/htmltabw.cxx:110: Einige Twip-Werte an Pixel-Grenzen anpassen
sw/source/filter/html/htmltabw.cxx:248: MIB 30.6.97: Wenn schon eine Box expandiert wurde, wird eine
    weitere nur expandiert, wenn sie Umrandungen besitzt
sw/source/filter/html/htmltabw.cxx:259: Eine Box als einzelne Zelle schreiben
sw/source/filter/html/htmltabw.cxx:290: nur Absaetzte betrachten, an denen man was erkennt
    Das ist der Fall, wenn die Vorlage eine der Tabellen-Vorlagen
    ist oder von einer der beiden abgelitten ist
sw/source/filter/html/htmltabw.cxx:359: WIDTH ausgeben (Grrr: nur fuer Netscape
sw/source/filter/html/htmltabw.cxx:371: WIDTH ausgeben: Aus Layout oder berechnet
sw/source/filter/html/htmltabw.cxx:398: ALIGN wird jetzt nur noch an den Absaetzen ausgegeben
sw/source/filter/html/htmltabw.cxx:463: den Inhalt von <TD>...</TD> einruecken
sw/source/filter/html/htmltabw.cxx:496: den Inhalt von <TD>...</TD> einruecken
sw/source/filter/html/htmltabw.cxx:513: Wenn die Zeile mehr als eine Zelle nethaelt und alle Zellen
    die gleiche Ausrichtung besitzen, das VALIGN an der Zeile statt der
    Zelle ausgeben
sw/source/filter/html/htmltabw.cxx:555: Inhalt von <TR>...</TR> einruecken
sw/source/filter/html/htmltabw.cxx:560: Inhalt von <TR>...</TR> einruecken
sw/source/filter/html/htmltabw.cxx:620: vorhergende Aufzaehlung etc. beenden
sw/source/filter/html/htmltabw.cxx:701: CELLPADDING ausgeben: Stammt aus Layout oder ist berechnet
sw/source/filter/html/htmltabw.cxx:741: COLGRP>/<COL> ausgeben: Bei Export ueber Layout nur wenn beim
    Import welche da waren, sonst immer
sw/source/filter/html/htmltabw.cxx:806: die Lines als Tabellenzeilen rausschreiben
sw/source/filter/html/htmltabw.cxx:813: Wenn Sections ausgegeben werden muessen darf ein THEAD um die erste
    Zeile nur ausgegeben werden, wenn unter der Zeile eine Linie ist
sw/source/filter/html/htmltabw.cxx:819: TBODY> aus ausgeben, wenn <THEAD> ausgegeben wird
sw/source/filter/html/htmltabw.cxx:896: die horizontale Ausrichtung des Rahmens hat (falls vorhanden
    Prioritaet. NONE bedeutet, dass keine horizontale
    Ausrichtung geschrieben wird
sw/source/filter/html/htmltabw.cxx:947: Tabellen mit automatischer Ausrichtung werden zu Tabellen
    mit 100%-Breite
sw/source/filter/html/htmltabw.cxx:961: Die Tabellenbreite wird anhand des linken und rechten
    Abstandes bestimmt. Deshalb versuchen wir die
    tatsaechliche Breite der Tabelle zu bestimmen. Wenn
    das nicht geht, machen wir eine 100% breite Tabelle
    draus
sw/source/filter/html/htmltabw.cxx:972: Ohne rechten Rand bleibt die %-Breite erhalten
sw/source/filter/html/htmltabw.cxx:980: Ohne rechten Rand bleibt auch eine absolute Breite erhalten
    Wir versuchen aber trotzdem ueber das Layout die
    tatsachliche Breite zu ermitteln
sw/source/filter/html/htmltabw.cxx:994: In allen anderen Faellen kann eine absolute oder relative
    Breite direkt uebernommen werden
sw/source/filter/html/htmltabw.cxx:1020: Wenn der Absatz vor der Tabelle nicht numeriert ist oder
    der Absatz nach der Tabelle mit einer anderen oder
    gar keiner) Regel numeriert ist, koennen wir
    die Einrueckung ueber eine DL regeln. Sonst behalten wir
    die Einrueckung der Numerierung bei
sw/source/filter/html/htmltabw.cxx:1038: eFlyHoriOri und eTabHoriOri besitzen nun nur noch die Werte
    LEFT/CENTER und RIGHT
sw/source/filter/html/htmltabw.cxx:1046: MIB 4.7.97: Wenn die Tabelle eine relative Breite besitzt
    dann richtet sich ihre Breite nach der des Rahmens, also
    exportieren wir dessen Breite. Bei fixer Breite ist die Breite
    der Tabelle massgeblich. Wer Tabellen mit relativer Breite <100
    in Rahmen steckt, ist selber schuld wenn nix Gutes bei rauskommt
sw/source/filter/html/htmltabw.cxx:1059: Wenn eine linksbuendigeTabelle keinen rechtsseiigen Durchlauf
    hat, brauchen wir auch kein ALIGN=LEFT in der Tabelle
sw/source/filter/html/htmltabw.cxx:1065: Aehnliches gilt fuer rechtsbuendigeTabelle, hier nehmen wir
    stattdessen ein <DIV ALIGN=RIGHT
sw/source/filter/html/htmltabw.cxx:1074: ALIGN=CENTER versteht so gut wie keiner, deshalb verzichten wir
    daruf und nehmen ein <CENTER
sw/source/filter/html/htmltabw.cxx:1104: Wenn die Tabelle in keinem Rahmen ist kann man immer ein LF ausgeben
sw/source/filter/html/htmltabw.cxx:1134: Wenn die Tabelle in keinem Rahmen war kann man immer ein LF ausgeben
sw/source/filter/html/htmltabw.cxx:1148: Pam hinter die Tabelle verschieben
sw/source/filter/html/htmltabw.cxx:1168: Wenn der Absatz hinter der Tabelle mit der gleichen Regel
    numeriert ist wie der Absatz vor der Tabelle, dann steht in
    der NumInfo des naechsten Absatzes noch die Ebene des Absatzes
    vor der Tabelle. Es muss deshalb die NumInfo noch einmal geholt
    werden um ggf. die Num-Liste noch zu beenden
sw/source/filter/html/parcss1.cxx:33: Loop-Check: Um Endlos-Schleifen zu vermeiden, wird in jeder
    Schalife geprueft, ob ein Fortschritt in der Eingabe-Position
    stattgefunden hat
sw/source/filter/html/parcss1.cxx:64: Wenn noch nichts gelesen wurde ist das wie WS
sw/source/filter/html/parcss1.cxx:103: beschriebenen Scanner fuer CSS1. Es handelt sich um eine direkte
    Umsetzung der dort beschriebenen Lex-Grammatik
sw/source/filter/html/parcss1.cxx:111: Merken, ob davor White-Space gelesen wurde
sw/source/filter/html/parcss1.cxx:176: Fehlerbehandlung: '@ident' und alles bis
    zu einem Semikolon der dem Ende des folgenden
    Blocks ignorieren
sw/source/filter/html/parcss1.cxx:261: Fehlerbehandlung: '!' ignorieren, IDENT nicht
sw/source/filter/html/parcss1.cxx:313: erstmal versuchen eine Hex-Zahl zu scannen
sw/source/filter/html/parcss1.cxx:326: wir haben eine hexadezimale Farbe gefunden
sw/source/filter/html/parcss1.cxx:334: sonst versuchen wir es mit einer Zahl
sw/source/filter/html/parcss1.cxx:360: und nun Schauen, ob es eine Einheit gibt
sw/source/filter/html/parcss1.cxx:537: erstmal versuchen eine Hex-Zahl zu scannen
sw/source/filter/html/parcss1.cxx:550: wir haben eine hexadezimale Farbe gefunden
sw/source/filter/html/parcss1.cxx:558: sonst versuchen wir es mit einer Zahl
sw/source/filter/html/parcss1.cxx:664: beschriebenen Parser fuer CSS1. Es handelt sich um eine direkte
    Umsetzung der dort beschriebenen Grammatik
sw/source/filter/html/parcss1.cxx:689: IMPORT_SYM url
    url ueberspringen wir ungeprueft
sw/source/filter/html/parcss1.cxx:931: wir wissen nicht was kommt, also aufhoehren
sw/source/filter/html/parcss1.cxx:936: falls ein Selektor angelegt wurd, ihn speichern
sw/source/filter/html/parcss1.cxx:1002: das Vorzeichen wird nur fuer numerische Werte (ausser PERCENTAGE
    beruecksichtigt und wird auf nValue angewendet
sw/source/filter/html/parcss1.cxx:1027: term [operator term
    hier sind wir sehr lax, was die Syntax angeht, sollte aber kein
    Problem sein
sw/source/filter/html/parcss1.cxx:1063: sonst landet das auch im naechsten Ident
sw/source/filter/html/parcss1.cxx:1306: etwas anderes als eine Farbe kann es nicht sein
sw/source/filter/html/parcss1.cxx:1323: HACK fuer MS-IE: DIe Farbe kann auch in einem String stehen
sw/source/filter/html/svxcss1.cxx:62: die Funktionen zum Parsen einer CSS1-Property sind von folgendem Typ
sw/source/filter/html/svxcss1.cxx:303: Linien-Stil doppelt oder einfach
sw/source/filter/html/svxcss1.cxx:335: benannte Breite umrechnenen, wenn keine absolute gegeben ist
sw/source/filter/html/svxcss1.cxx:682: und die naechste Rule vorbereiten
sw/source/filter/html/svxcss1.cxx:688: den Selektor haben wir gespeichert. Loeschen toedlich
sw/source/filter/html/svxcss1.cxx:701: die Deklaration brauchen wir nicht mehr. Loeschen
sw/source/filter/html/svxcss1.cxx:1086: Alle nachfolgenden id's sammeln und mit einem
    Space getrennt hintendranhaengen
sw/source/filter/html/svxcss1.cxx:1213: der Wert kann zwei Werte enthalten
sw/source/filter/html/svxcss1.cxx:1216: Auch hier hinterlaesst MS-IEs Parser seine Spuren
sw/source/filter/html/svxcss1.cxx:1228: fuer 'normal' muessen wir auch die case-map aussch
sw/source/filter/html/svxcss1.cxx:1477: da wir keine absolute Positionierung koennen
    unterscheiden wir nur zwischen  0 und !0. Deshalb
    koennen Pixel auch wie alle anderen Einheiten behandelt
    werden
sw/source/filter/html/svxcss1.cxx:1495: die %-Angabe wird auf den enum abgebildet
sw/source/filter/html/svxcss1.cxx:1743: Da "font" alle Werte zurecksetzt, fuer die nichts angegeben ist
    tun wir das hier
sw/source/filter/html/svxcss1.cxx:1859: der Wert kann zwei Werte enthalten! Und MS-IE auch Strings
sw/source/filter/html/svxcss1.cxx:2514: benannte Linien-Dicke (und default
sw/source/filter/html/svxcss1.cxx:2556: Ein Pixel wird zur Haarlinie (ist huebscher
sw/source/filter/html/svxcss1.cxx:2609: benannte Linien-Dicke (und default
sw/source/filter/html/svxcss1.cxx:3063: die Zuordung Property zu parsender Funktion
sw/source/filter/html/svxcss1.hxx:85: und der dazugehoerige Wert eines Enums
sw/source/filter/html/svxcss1.hxx:196: Diese Klasse bereitet den Output des CSS1-Parsers auf
    indem die CSS1-Properties in SvxItem(Set)s umgewandelt werden
    Ausserdem werden die Selektoren samt zugehoeriger Item-Set
    gespeichert
    Ein abgeleiteter Parser kann dies fuer einzelne Selektoren unterdruecken
    indem er die Methode StyleParsed ueberlaed
sw/source/filter/html/svxcss1.hxx:242: Diese Methode wird fuer jeden Selektor mit dem zugehoerigen
    Item-Set aufgerufen. Fuer einen Selektor koennen mehrere
    Aufrufe erfolgen
    wenn true zuruckgegeben wird, wird der Item-Set bzw. der
    Selektor nicht mehr gespeichert
    Der ItemSet darf entsprechend modifiziert werden
    Die Implementierung dieser Methode gibt false zurueck
sw/source/filter/html/svxcss1.hxx:275: Parsen einer Style-Option. Hier wird einfach nur der Item-Set
    gefuellt
sw/source/filter/html/svxcss1.hxx:279: Umwandeln eines Strings in den Wert eines Enums
sw/source/filter/html/svxcss1.hxx:286: Die Font-Hoehe fuer eine bestimmte Font-Groesse (0-6) ermitteln
sw/source/filter/html/swcss1.hxx:37: Dieser Header seiht zwar harmlos aus, included aber eben doch
    ganz unauffaellig das ein oder andere! Andererseits wird diese
    Klasse recht selten benoetigt. Deshalb ein eigener Header
sw/source/filter/html/swcss1.hxx:81: Die Font-Hoehe fuer eine bestimmte Font-Groesse (0-6) ermitteln
sw/source/filter/html/swcss1.hxx:84: Die aktuelle Font-Liste holen (auch 0 ist erlaubt
sw/source/filter/html/swcss1.hxx:88: das Zeichen-Format zu einem Token und einer ggf leeren Klasse
    ermitteln
sw/source/filter/html/swcss1.hxx:91: eine TextFormatColl zu einer Pool-Id ermitteln
sw/source/filter/html/swcss1.hxx:103: Die linke oder rechte Seiten-Vorlage holen. In Dokumenten mit nur
    einer Vorlage gibt es nur eine rechtee Seite
    Ansonsten ist die rechte Seite die HTML-Poolvorlage und die linke
    eine Benutzter-Vorlage, die on-demand angelegt wird, wenn
    bCreate gesetzt ist
sw/source/filter/html/swcss1.hxx:111: Attribute an der HTML-Seitenvorlage setzen (gesetzte Attribute
    werden aus dem Item-Set geloescht ). Wird fuer's BODY-Tag
    aufgerufen
sw/source/filter/html/swhtml.cxx:190: Aufruf fuer die allg. Reader-Schnittstelle
sw/source/filter/html/swhtml.cxx:204: Die HTML-Seitenvorlage setzen, wenn des kein HTML-Dokument ist
    sonst ist sie schon gesetzt
sw/source/filter/html/swhtml.cxx:229: den Stream als Fehlernummer Transporter benutzen
sw/source/filter/html/swhtml.cxx:314: Die Font-Groessen 1-7 aus der INI-Datei lesen
sw/source/filter/html/swhtml.cxx:343: Waehrend des Imports in den HTML-Modus schalten, damit die
    richrigen Vorlagen angelegt werden
sw/source/filter/html/swhtml.cxx:364: Timer nur bei ganz normalen Dokumenten aufsetzen
sw/source/filter/html/swhtml.cxx:370: es ist ein Sprungziel vorgegeben
sw/source/filter/html/swhtml.cxx:402: ansonsten ist das ein normaler (Book)Mark
sw/source/filter/html/swhtml.cxx:430: das DocumentDetected kann ggfs. die DocShells loeschen, darum nochmals
    abfragen
sw/source/filter/html/swhtml.cxx:478: keiner will mehr das Doc haben, also weg damit
sw/source/filter/html/swhtml.cxx:502: wurde der Import vom SFX abgebrochen
sw/source/filter/html/swhtml.cxx:512: einen temporaeren Index anlegen, auf Pos 0 so wird er nicht bewegt
sw/source/filter/html/swhtml.cxx:576: Wenn der Import (vom SFX) abgebrochen wurde, wird ein Fehler
    gesetzt aber trotzdem noch weiter gemacht, damit vernuenftig
    aufgeraeumt wird
sw/source/filter/html/swhtml.cxx:582: Die SwViewShell vom Dokument holen, merken und als aktuelle setzen
sw/source/filter/html/swhtml.cxx:590: Beim ersten Aufruf erstmal returnen, Doc anzeigen
    und auf Timer Callback warten
    An dieser Stelle wurde im CallParser gerade mal ein Zeichen
    gelesen und ein SaveState(0) gerufen
sw/source/filter/html/swhtml.cxx:609: waehrend des einlesens kein OLE-Modified rufen
sw/source/filter/html/swhtml.cxx:620: Wenn der Import abgebrochen wird, kein Continue mehr rufen
    Falls ein Pending-Stack existiert aber durch einen Aufruf
    von NextToken dafuer sorgen, dass der Pending-Stack noch
    beendet wird
sw/source/filter/html/swhtml.cxx:641: noch die letzten Attribute setzen
sw/source/filter/html/swhtml.cxx:661: ggf. ein noch vorhandes LF hinter dem letzen Absatz entfernen
sw/source/filter/html/swhtml.cxx:686: Noch die erst verzoegert gesetzten Styles setzen
sw/source/filter/html/swhtml.cxx:698: wenn der Cursor noch in dem Node steht, dann setze in an das Ende
sw/source/filter/html/swhtml.cxx:706: sollte nicht moeglich sein, oder
sw/source/filter/html/swhtml.cxx:741: es fehlen noch ein paar Image-Map zuordungen
    vielleicht sind die Image-Maps ja jetzt da
sw/source/filter/html/swhtml.cxx:745: jetzt noch den letzten ueberfluessigen Absatz loeschen
sw/source/filter/html/swhtml.cxx:804: nun noch das SplitNode vom Anfang aufheben
sw/source/filter/html/swhtml.cxx:816: eigentlich muss hier ein JoinNext erfolgen, aber alle Cursor
    usw. sind im pTextNode angemeldet, so dass der bestehen
    bleiben MUSS
sw/source/filter/html/swhtml.cxx:819: Absatz in Zeichen-Attribute umwandeln, aus dem Prev die
    Absatzattribute und die Vorlage uebernehmen
sw/source/filter/html/swhtml.cxx:866: sollte der Parser der Letzte sein, der das Doc haelt, dann braucht
    man hier auch nichts mehr tun, Doc wird gleich zerstoert
sw/source/filter/html/swhtml.cxx:879: Wenn zu Beginn des Continue keine Shell vorhanden war
    kann trotzdem mitlerweile eine angelegt worden sein
    In dieses Fall stimmt das bWasUndo-Flag nicht und
    wir muessen das Undo noch anschalten
sw/source/filter/html/swhtml.cxx:900: Wenn die Dokuemnt-SwViewShell noch existiert und eine Action
    offen ist (muss bei Abbruch nicht sein), die Action beenden
    uns von der Shell abmelden und schliesslich die alte Shell
    wieder rekonstruieren
sw/source/filter/html/swhtml.cxx:938: Durch das DocumentDetected wurde im allgemeinen eine
    SwViewShell angelegt. Es kann aber auch sein, dass sie
    erst spaeter angelegt wird, naemlich dann, wenn die UI
    gecaptured ist
sw/source/filter/html/swhtml.cxx:2092: Ein harter Zeilen-Umbruch am Ende muss immer entfernt werden
    Einen zweiten ersetzen wir durch einen Absatz-Abstand
sw/source/filter/html/swhtml.cxx:2097: die harten Attribute an diesem Absatz werden nie mehr ungueltig
sw/source/filter/html/swhtml.cxx:2140: Zeichen-Attribute aufspalten und ggf keine setzen, die ueber den
    ganzen Absatz gesetzt sind
sw/source/filter/html/swhtml.cxx:2223: Wenn das Attribut den gesamten Absatz umspannt, werden
    alle auesseren Attribute nicht mehr beachtet. Deshalb
    darf es auch nicht in die Prev-Liste eines ausseren
    Attributs eingetragen werden, denn dieses wird ja
    erstmal nicht gesetzt. Das fuehrt zu verschiebenungen
    wenn Felder ins Rennen kommen
sw/source/filter/html/swhtml.cxx:2239: Die Previous-Attribute muessen trotzdem gesetzt werden
sw/source/filter/html/swhtml.cxx:2271: Attrubute im Absatz davor sollte man jetzt setzen (wegen JavaScript
sw/source/filter/html/swhtml.cxx:2479: Hier wird
    ein EndAction gerufen, damit formatiert wird
    ein Reschedule gerufen
    die eiegen View-Shell wieder gesetzt
    und Start-Action gerufen
sw/source/filter/html/swhtml.cxx:2489: wurde der Import vom SFX abgebrochen
sw/source/filter/html/swhtml.cxx:2494: Die SwViewShell nochmal holen, denn sie koennte im Reschedule
    zerstoert wirden sein
sw/source/filter/html/swhtml.cxx:2498: ist der aktuelle Node nicht mehr sichtbar, dann benutzen wir
    eine groessere Schrittweite
sw/source/filter/html/swhtml.cxx:2511: Hier wird
    ein Reschedule gerufen, damit gescrollt werden kann
    die eiegen View-Shell wieder gesetzt
    ein Start/End-Action gerufen, wenn gescrollt wurde
sw/source/filter/html/swhtml.cxx:2527: wurde der Import vom SFX abgebrochen
sw/source/filter/html/swhtml.cxx:2599: Schon gescrollt?, dann dafuer sorgen, dass die View sich nicht bewegt
sw/source/filter/html/swhtml.cxx:2608: bChkJumpMark ist nur gesetzt, wenn das Object auch gefunden wurde
sw/source/filter/html/swhtml.cxx:2622: sollte der Parser der Letzte sein, der das Doc haelt, dann kann
    man hier abbrechen und einen Fehler setzen
sw/source/filter/html/swhtml.cxx:2676: Zechen-Attribute mit Ende moeglich frueh
    also noch im aktuellen Absatz setzen (wegen JavaScript
    und diversen Chats). das darf man aber nicht fuer Attribute
    die ueber den ganzen Absatz aufgspannt werden sollen, weil
    sie aus Absatzvorlgen stammen, die nicht gesetzt werden
    koennen. Weil die Attribute mit SETATTR_DONTREPLACE
    eingefuegt werden, sollte man sie auch anchtraeglich
    noch setzen koennen
sw/source/filter/html/swhtml.cxx:2691: Attribute im Content-Bereich duerfen nicht gesetzt
    werden, wenn wir in einem Sonderbereich stehen, aber
    umgekekehrt schon
sw/source/filter/html/swhtml.cxx:2701: Das Attribute darf nicht in der liste der vorlaeufigen
    Absatz-Attribute stehen, weil es sonst geloescht wurde
sw/source/filter/html/swhtml.cxx:2717: ungueltige Attribute koennen gloescht werden
sw/source/filter/html/swhtml.cxx:2727: durch die elende Loescherei von Nodes kann auch mal
    ein Index auf einen End-Node zeigen
sw/source/filter/html/swhtml.cxx:2733: wenn der End-Index auch auf den Node zeigt
    brauchen wir auch kein Attribut mehr zu setzen
    es sei denn, es ist ein Text-Attribut
sw/source/filter/html/swhtml.cxx:2752: durch das Loeschen von BRs kann der Start-Index
    auch mal hinter das Ende des Textes zeigen
sw/source/filter/html/swhtml.cxx:2785: durch das Loeschen von BRs kann der End-Index
    auch mal hinter das Ende des Textes zeigen
sw/source/filter/html/swhtml.cxx:2797: wenn wir vor dem Einfuegen einer Tabelle stehen
    und das Attribut im aktuellen Node beendet wird
    muessen wir es im Node davor beenden oder wegschmeissen
    wenn es erst in dem Node beginnt
sw/source/filter/html/swhtml.cxx:2870: wegen Numerierungen dieses Attribut direkt
    am Node setzen
sw/source/filter/html/swhtml.cxx:2985: Font-Hoehen und -Farben- sowie Escapement-Attribute duerfen nicht
    zusammengefasst werden. Sie werden deshalb in einer Liste gespeichert
    in der das zuletzt aufgespannte Attribut vorne steht und der Count
    immer 1 ist. Fuer alle anderen Attribute wird der Count einfach
    hochgezaehlt
sw/source/filter/html/swhtml.cxx:3003: Der Listenkopf ist im Attribut gespeichert
sw/source/filter/html/swhtml.cxx:3013: WIrd das zueltzt gestartete oder ein frueher gestartetes Attribut
    beendet
sw/source/filter/html/swhtml.cxx:3017: Es wird nicht das zuletzt gestartete Attribut beendet
sw/source/filter/html/swhtml.cxx:3021: Dann suche wir das unmittelbar danach gestartete Attribut, das
    ja ebenfalls noch nicht beendet wurde (sonst stuende es nicht
    mehr in der Liste
sw/source/filter/html/swhtml.cxx:3034: dann eine Contentnt Position zurueck
sw/source/filter/html/swhtml.cxx:3109: keine offenen Attribute dieses Typs mehr da
    dann koennen alle gesetzt werden, es sei denn
    sie haengen noch von einem anderen Attribut ab
    dann werden sie dort angehaengt
sw/source/filter/html/swhtml.cxx:3125: es gibt noch andere offene Attribute des Typs
    daher muss das Setzen zurueckgestellt werden
    das aktuelle Attribut wird deshalb hinten an die
    Previous-Liste des Nachfolgers angehaengt
sw/source/filter/html/swhtml.cxx:3134: dann nicht einfuegen, sondern Loeschen. Durch das "tuerken" von
    Vorlagen durch harte Attributierung koennen sich auch mal andere
    leere Attribute in der Prev-Liste befinden, die dann trotzdem
    gesetzt werden muessen
sw/source/filter/html/swhtml.cxx:3141: Die Previous-Attribute muessen trotzdem gesetzt werden
sw/source/filter/html/swhtml.cxx:3156: wenn das erste Attribut der Liste gesetzt wurde muss noch der
    Listenkopf korrigiert werden
sw/source/filter/html/swhtml.cxx:3177: Der Listenkopf ist im Attribut gespeichert
sw/source/filter/html/swhtml.cxx:3183: Wird das zueltzt gestartete oder ein frueher gestartetes Attribut
    entfernt
sw/source/filter/html/swhtml.cxx:3187: Es wird nicht das zuletzt gestartete Attribut beendet
sw/source/filter/html/swhtml.cxx:3191: Dann suche wir das unmittelbar danach gestartete Attribut, das
    ja ebenfalls noch nicht beendet wurde (sonst stuende es nicht
    mehr in der Liste
sw/source/filter/html/swhtml.cxx:3206: Die Previous-Attribute muessen trotzdem gesetzt werden
sw/source/filter/html/swhtml.cxx:3219: wenn das erste Attribut der Liste entfernt wurde muss noch der
    Listenkopf korrigiert werden
sw/source/filter/html/swhtml.cxx:3267: alle noch offenen Attribute beenden und hinter der Tabelle
    neu aufspannen
sw/source/filter/html/swhtml.cxx:3286: keine Attribute setzen, wenn der PaM aus dem Content-Bereich
    herausgeschoben wurde
sw/source/filter/html/swhtml.cxx:3309: das Attribut muss vor der Liste gesetzt werden. Da wir
    das Original noch brauchen, weil Zeiger auf das Attribut
    noch in den Kontexten existieren, muessen wir es clonen
    Die Next-Liste geht dabei verloren, aber die
    Previous-Liste bleibt erhalten
sw/source/filter/html/swhtml.cxx:3326: Wenn das Attribut nicht gesetzt vor der Tabelle
    gesetzt werden muss, muessen der Previous-Attribute
    trotzdem gesetzt werden
sw/source/filter/html/swhtml.cxx:3339: den Start des Attributs neu setzen und die Verkettungen
    aufbrechen
sw/source/filter/html/swhtml.cxx:3643: Stack-Unterlauf in Tabellen vermeiden
sw/source/filter/html/swhtml.cxx:3724: in Ueberschriften bestimmt die aktuelle Ueberschrift
    die Font-Hoehe und nicht BASEFONT
sw/source/filter/html/swhtml.cxx:3730: wenn die Schriftgroesse in der Ueberschrift noch
    nicht veraendert ist, die aus der Vorlage nehmen
sw/source/filter/html/swhtml.cxx:3743: in Ueberschriften wird die neue Fonthoehe wenn moeglich aus
    den Vorlagen geholt
sw/source/filter/html/swhtml.cxx:3869: Stack-Unterlauf in Tabellen vermeiden
sw/source/filter/html/swhtml.cxx:3918: Styles parsen (Class nicht beruecksichtigen. Das geht nur, solange
    keine der CSS1-Properties der Klasse hart formatiert werden muss
sw/source/filter/html/swhtml.cxx:3939: die aktuelle Vorlage oder deren Attribute setzen
sw/source/filter/html/swhtml.cxx:3959: leere Absaetze werden von Netscape uebersprungen, von uns jetzt auch
sw/source/filter/html/swhtml.cxx:3969: wenn ein DD oder DT offen war, handelt es sich um eine
    implizite Def-Liste, die jetzt beendet werden muss
sw/source/filter/html/swhtml.cxx:3977: den Kontext vom Stack holen. Er kann auch von einer implizit
    geoeffneten Definitionsliste kommen
sw/source/filter/html/swhtml.cxx:3986: Absatz-Atts wegen JavaScript moeglichst schnell setzen
sw/source/filter/html/swhtml.cxx:3990: und die bisherige Vorlage neu setzen
sw/source/filter/html/swhtml.cxx:4073: und die Vorlage oder deren Attribute setzen
sw/source/filter/html/swhtml.cxx:4090: Kontext zu dem Token suchen und vom Stack holen
sw/source/filter/html/swhtml.cxx:4113: Absatz-Atts wegen JavaScript moeglichst schnell setzen
sw/source/filter/html/swhtml.cxx:4117: die bisherige Vorlage neu setzen
sw/source/filter/html/swhtml.cxx:4159: Diese beiden Tags werden jetzt auf die PRE-Vorlage gemappt
    Fuer dem Fall, dass ein CLASS angegeben ist, loeschen wir
    es damit wir nicht die CLASS der PRE-Vorlage bekommen
sw/source/filter/html/swhtml.cxx:4168: ADDRESS kann auf einen <P> ohne </P> folgen
sw/source/filter/html/swhtml.cxx:4236: den aktuellen Kontext vom Stack holen
sw/source/filter/html/swhtml.cxx:4243: Absatz-Atts wegen JavaScript moeglichst schnell setzen
sw/source/filter/html/swhtml.cxx:4247: und die bisherige Vorlage setzen
sw/source/filter/html/swhtml.cxx:4320: Die Einrueckung, die sich schon aus einem DL-ergibt, entspricht der
    eines DT auf dem aktuellen Level, und die entspricht der eines
    DD auf dem Level davor. Fue einen Level >=2 muss also ein DD-Abstand
    hinzugefuegt werden
sw/source/filter/html/swhtml.cxx:4324: und den der DT-Vorlage des aktuellen Levels
sw/source/filter/html/swhtml.cxx:4348: die Attribute der neuen Vorlage setzen
sw/source/filter/html/swhtml.cxx:4365: den aktuellen Kontext vom Stack holen
sw/source/filter/html/swhtml.cxx:4372: Absatz-Atts wegen JavaScript moeglichst schnell setzen
sw/source/filter/html/swhtml.cxx:4382: festellen, ob das DD/DT in einer DL vorkommt
sw/source/filter/html/swhtml.cxx:4402: wenn nicht, implizit eine neue DL aufmachen
sw/source/filter/html/swhtml.cxx:4422: Kontext zu dem Token suchen und vom Stack holen
sw/source/filter/html/swhtml.cxx:4440: keine DD/DT ausserhalb der aktuelen DefListe betrachten
sw/source/filter/html/swhtml.cxx:4445: und auch nicht ausserhalb einer anderen Liste
sw/source/filter/html/swhtml.cxx:4455: Absatz-Atts wegen JavaScript moeglichst schnell setzen
sw/source/filter/html/swhtml.cxx:4459: und die bisherige Vorlage setzen
sw/source/filter/html/swhtml.cxx:4471: bNoSurroundOnly:     Der Absatz enthaelt mindestens einen Rahmen
    ohne Umlauf
    bSurroundOnly:       Der Absatz enthaelt mindestens einen Rahmen
    mit Umlauf aber keinen ohne Umlauf
    sonst:               Der Absatz enthaelt irgendeinen Rahmen
sw/source/filter/html/swhtml.cxx:4486: Ein Rahmen wurde gefunden, wenn
    er absatzgebunden ist, und
    im aktuellen Absatz verankert ist, und
    jeder absatzgebunene Rahmen zaehlt, oder
    nur Rahmen oder umlauf zaehlen und ) der Rahmen keinen
    Umlauf besitzt
sw/source/filter/html/swhtml.cxx:4503: Wenn Rahmen mit Umlauf gesucht sind
    auch keine mit Durchlauf beachten. Dabei handelt es
    sich (noch) um HIDDEN-Controls, und denen weicht man
    besser auch nicht aus
sw/source/filter/html/swhtml.cxx:4524: weitersuchen: Es koennten ja noch welche ohne
    Umlauf kommen
sw/source/filter/html/swhtml.cxx:4534: die speziellen Methoden zum Einfuegen von Objecten
sw/source/filter/html/swhtml.cxx:4564: Es gibt eine Vorlage, die zu setzen ist. Dann
    muss zunaechst einmal entschieden werden
    ob die Vorlage auch gesetzt werden kann
sw/source/filter/html/swhtml.cxx:4579: HR> auch in <PRE> als Vorlage setzen, sonst kann man sie
    nicht mehr exportieren
sw/source/filter/html/swhtml.cxx:4594: wenn jetzt eine andere Vorlage gesetzt werden soll als
    bisher, muss die bishere Vorlage durch harte Attributierung
    ersetzt werden
sw/source/filter/html/swhtml.cxx:4599: die Attribute, die bisherige Vorlage setzt
    hart einfuegen
sw/source/filter/html/swhtml.cxx:4612: aber die Attribute, die aktuelle Vorlage setzt
    entfernen, weil sie sonst spaeter ueberschrieben
    werden
sw/source/filter/html/swhtml.cxx:4635: vielliecht gibt es ja eine Default-Vorlage
sw/source/filter/html/swhtml.cxx:4653: wenn im aktuellen Kontext eine neue Vorlage gesetzt werden soll
    muessen deren Absatz-Abstaende noch in den Kontext eingetragen werden
sw/source/filter/html/swhtml.cxx:4656: TD><P CLASS=xxx> muss TD.xxx werden
sw/source/filter/html/swhtml.cxx:4676: In Definitions-Listen enthalten die Abstaende auch die der
    vorhergehenden Level
sw/source/filter/html/swhtml.cxx:4691: die Absatz-Abstaende addieren sich
sw/source/filter/html/swhtml.cxx:4706: wenn gar keine Vorlage im Kontext gesetzt ist, Textkoerper nehmen
sw/source/filter/html/swhtml.cxx:4719: bisherige harte Attributierung des Absatzes entfernen
sw/source/filter/html/swhtml.cxx:4731: ggf. noch den Absatz-Einzug korrigieren
sw/source/filter/html/swhtml.cxx:4756: und nun noch die Attribute setzen
sw/source/filter/html/swhtml.cxx:4796: die Vorlage setzen und im Kontext merken
sw/source/filter/html/swhtml.cxx:4817: Zeichen-Vorlagen werden in einem eigenen Stack gehalten und
    koennen nie durch Styles eingefuegt werden. Das Attribut ist deshalb
    auch gar nicht im CSS1-Which-Range enthalten
sw/source/filter/html/swhtml.cxx:4827: und es ggf. durch die Optionen veraendern
sw/source/filter/html/swhtml.cxx:4858: erstmal nur als Pixelwerte merken
sw/source/filter/html/swhtml.cxx:4863: erstmal nur als Pixelwerte merken
sw/source/filter/html/swhtml.cxx:4868: erstmal nur als Pixelwerte merken
sw/source/filter/html/swhtml.cxx:4886: den Anker und die Ausrichtung setzen
sw/source/filter/html/swhtml.cxx:4889: und noch die Groesse des Rahmens
sw/source/filter/html/swhtml.cxx:4910: Ggf Frames anlegen und auto-geb. Rahmen registrieren
sw/source/filter/html/swhtml.cxx:4929: den unteren Absatz-Abstand des vorherigen Nodes aendern
    wenn moeglich
sw/source/filter/html/swhtml.cxx:4938: Wenn der Abstz davor kein Textenode ist, dann wird jetzt
    ein leere Absatz angelegt, der eh schon eine Zeilenhoehe
    Abstand erzeugt
sw/source/filter/html/swhtml.cxx:4963: wenn der Absatz noch leer ist, einen Erstzeilen-Einzug
    setzen, sondern Sperrschrift ueber einem Space aufspannen
sw/source/filter/html/swhtml.cxx:5070: BR CLEAR=xxx> wird wie folgt behandelt
    1.) Es werden nur nur absatzgebundene Rahmen betrachtet, die
    im aktuellen Absatz verankert sind
    2.) Fuer linksbuendig ausgerichtete Rahmen wird bei CLEAR=LEFT
    oder ALL und auf rechtsbuendige ausgerichtete Rahmen bei
    CLEAR=RIGHT oder ALL der Durchlauf wie folgt geaendert
    3.) Wenn der Absatz keinen Text enthaelt, bekommt der Rahmen keinen
    Umlauf
    4.) sonst erhaelt ein links ausgerichteter Rahmen eine rechten
    nur Anker" Umlauf und recht rechst ausg. Rahmen einen linken
    nur Anker" Umlauf
    5.) wenn in einem nicht-leeren Absatz der Umlauf eines Rahmens
    geaendert wird, wird ein neuer Absatz aufgemacht
    6.) Wenn von keinem Rahmen der Umlauf geaendert wird, wird ein
    harter Zeilenumbruch eingefuegt
sw/source/filter/html/swhtml.cxx:5109: CLEAR wird nur fuer den aktuellen Absaetz unterstuetzt
sw/source/filter/html/swhtml.cxx:5158: Anker ist nicht im Node
    Schleife ueber Fly-Frames
    kein Text-Node
    kein CLEAR
sw/source/filter/html/swhtml.cxx:5189: wenn kein CLEAR ausgefuehrt werden sollte oder konnte, wird
    ein Zeilenumbruch eingef?gt
sw/source/filter/html/swhtml.cxx:5199: wenn ein clear in einem nicht-leeren Absatz ausgefuehrt wurde
    muss anschliessen ein neuer Absatz aufgemacht werden
    MIB 21.02.97: Eigentlich muesste man hier den unteren Absatz
    Absatnd auf 0 drehen. Das geht aber bei sowas wie <BR ..><P
    schief (>Netacpe). Deshalb lassen wir das erstmal
sw/source/filter/html/swhtml.cxx:5241: 100%-Linien sind der default-Fall (keine Attrs neotig
sw/source/filter/html/swhtml.cxx:5276: die harten Attribute an diesem Absatz werden nie mehr ungueltig
sw/source/filter/html/swhtml.cxx:5282: Farbe und/oder Breite der Linie setzen
sw/source/filter/html/swhtml.cxx:5319: Wenn wir in keiner Tabelle sind, wird die Breitenangabe durch
    Absatz-Einzuege "getuerkt". In einer Tabelle macht das wenig
    Sinn. Um zu Vermeiden, dass die Linie bei der Breitenberechnung
    beruecksichtigt wird, bekommt sie aber trotzdem entsprechendes
    LRSpace-Item verpasst
sw/source/filter/html/swhtml.cxx:5322: Laenge und Ausrichtung der Linie ueber Absatz-Einzuege "tuerken
sw/source/filter/html/swhtml.cxx:5357: Bookmarks koennen nicht in Hyperlinks eingefueht werden
sw/source/filter/html/swhtml.cxx:5361: den aktuellen Kontext vom Stack holen
sw/source/filter/html/swhtml.cxx:5368: und im Absatz danach die dort aktuelle Vorlage setzen
sw/source/filter/html/swhtml.cxx:5400: Hier wird es etwas tricky: Wir wissen genau, da? die Dok-Info
    nicht geaendert wurde. Deshalb genuegt es, auf Generator und
    auf refresh abzufragen, um noch nicht verarbeitete Token zu finden
    denn das sind die einzigen, die die Dok-Info nicht modifizieren
sw/source/filter/html/swhtml.cxx:5486: das Attribut mit der alten Start-Position neu anlegen
sw/source/filter/html/swhtml.cxx:5489: die Previous-Liste muss uebernommen werden, die Next-Liste nicht
sw/source/filter/html/swhtml.cxx:5498: den Anfang (und das Ende) neu setzen
sw/source/filter/html/swhtml.cxx:5504: den Head korrigieren und die Verkettungen aufheben
sw/source/filter/html/swhtml.hxx:62: ein par Sachen, die man oefter mal braucht
sw/source/filter/html/swhtml.hxx:80: Attribut ueber dem gesamten Absatz setzen
sw/source/filter/html/swhtml.hxx:84: Anzahl noch zu schliessender Attrs mit einem Wert
sw/source/filter/html/swhtml.hxx:85: noch zu schliessene Attrs mit unterschiedl. Werten
sw/source/filter/html/swhtml.hxx:86: bereits geschlossene aber noch nicht gesetze Attrs
sw/source/filter/html/swhtml.hxx:132: Beim Setzen von Attributen aus Vorlagen kann es passieren
    dass Attribute doch nicht mehr gesetzt werden sollen. Die zu loeschen
    waere sehr aufwendig, da man nicht so genau weiss, wo sie eingekettet
    sind. Sie werden deshalb einfach invalidiert und erst beim naechsten
    SetAttr() geloescht
sw/source/filter/html/swhtml.hxx:137: Tabelle der Attribute: Hier ist die Reihenfolge wichtig: Die Attribute
    vorne in der Tabelle werden in EndAllAttrs auch zuerst gesetzt
sw/source/filter/html/swhtml.hxx:193: Abstand nicht setzen aber 0cm merken
sw/source/filter/html/swhtml.hxx:199: die in dem Kontext gestarteten Attribute
sw/source/filter/html/swhtml.hxx:206: das Token, zu dem der Kontext gehoehrt
sw/source/filter/html/swhtml.hxx:208: eine in dem Kontext begonnene Vorlage oder 0
sw/source/filter/html/swhtml.hxx:219: linker/rechtr Rand, Einzug veraendert
sw/source/filter/html/swhtml.hxx:222: Der Kontext spannt eine SwSection auf
sw/source/filter/html/swhtml.hxx:365: Inhalt des aktuellen Script-Blocks
sw/source/filter/html/swhtml.hxx:371: ein gestartetes unbekanntes Token
sw/source/filter/html/swhtml.hxx:381: "geschlossene", noch nicht gesetzte Attr
sw/source/filter/html/swhtml.hxx:397: SwViewShell, an der das StartAction
    gerufen wurde
sw/source/filter/html/swhtml.hxx:400: die aktuelle "auesserste" Tabelle
sw/source/filter/html/swhtml.hxx:408: die Seitengroesse der HTML-Vorlage
sw/source/filter/html/swhtml.hxx:423: Anzahl der Eintraege der akt. Listbox
sw/source/filter/html/swhtml.hxx:433: Ausrichtung des aktuellen Absatz
sw/source/filter/html/swhtml.hxx:440: Dokument bzw. Shell wurden initialisiert
    Flag um doppeltes init durch Rekursion
    zu verhindern
sw/source/filter/html/swhtml.hxx:441: die View wurde schon erzeugt (asynchron
sw/source/filter/html/swhtml.hxx:442: Crsr wieder auf den Anfang setzen
sw/source/filter/html/swhtml.hxx:445: Wir sind in einen Floating Frame
sw/source/filter/html/swhtml.hxx:448: unbekannte/nicht unterstuetze Tokens beh
    8
sw/source/filter/html/swhtml.hxx:450: Inhalt eines Scripts/Styles ignorieren
sw/source/filter/html/swhtml.hxx:453: Groesse einer Laufschrift anpassen
sw/source/filter/html/swhtml.hxx:460: gibt es ueberhaupt ein StarBasic-Modul
sw/source/filter/html/swhtml.hxx:461: Wir sind in einem NOEMBED-Bereich
sw/source/filter/html/swhtml.hxx:465: springe ggfs. zu einem vorgegebenem Mark
sw/source/filter/html/swhtml.hxx:510: Ein Attribut beginnen/beenden
    ppDepAttr gibt einen Attribut-Tabellen-Eintrag an, dessen Attribute
    gesetzt sein muessen, bevor das Attribut beendet werden darf
sw/source/filter/html/swhtml.hxx:554: die Vorlagen auf dem Stack bzw. deren Attribute setzen
sw/source/filter/html/swhtml.hxx:566: den obersten/spezifizierten Kontext holen, aber nicht ausserhalb
    des Kontexts mit Token nLimit suchen. Wenn bRemove gesetzt ist
    wird er entfernt
sw/source/filter/html/swhtml.hxx:578: Behandlung von Tags auf Absatz-Ebene
sw/source/filter/html/swhtml.hxx:602: alle durch <DIV> aufgespannten Bereiche verlassen
sw/source/filter/html/swhtml.hxx:615: Numerierungs <OL> und Aufzaehlungs-Listen <UL> mit <LI
sw/source/filter/html/swhtml.hxx:629: Behandlung von Tags auf Zeichen-Ebene
sw/source/filter/html/swhtml.hxx:632: Tags wie <B>, <I> etc behandeln, die ein bestimmtes Attribut
    an und ausschalten, oder die wie SPAN nur Attribute aus Styles holen
sw/source/filter/html/swhtml.hxx:646: Tags, die durch Zeichenvorlagen realisiert werden
sw/source/filter/html/swhtml.hxx:660: Einfuegen von Grafiken, Plugins und Applets
sw/source/filter/html/swhtml.hxx:662: Image-Maps suchen und mit Grafik-Nodes verbinden
sw/source/filter/html/swhtml.hxx:667: Verankerung eines Fly-Frames bestimmen und entsprechende Attribute
    in den Attrset setzen (htmlgrin.cxx
sw/source/filter/html/swhtml.hxx:684: Frames anlegen und Auto-gebundene Rahmen registrieren
sw/source/filter/html/swhtml.hxx:688: Die Groesse des Fly-Frames an die Vorgaben und Gegebenheiten anpassen
    nicht fuer Grafiken, deshalb htmlplug.cxx
sw/source/filter/html/swhtml.hxx:705: die eigentlichen Einfuege-Methoden fuer <IMG>, <EMBED> und <APPLET
    und <PARAM
sw/source/filter/html/swhtml.hxx:722: BODY>-Tag auswerten: Hintergrund-Grafiken und -Farben setzen (htmlgrin.cxx
sw/source/filter/html/swhtml.hxx:725: Einfuegen von Links und Bookmarks (htmlgrin.cxx
sw/source/filter/html/swhtml.hxx:727: A>-Tag auswerten: einen Link bzw. eine Bookmark einfuegen
sw/source/filter/html/swhtml.hxx:737: sind im aktuellen Absatz Bookmarks vorhanden
sw/source/filter/html/swhtml.hxx:742: das zueletzt gelsene Basic-Modul parsen (htmlbas.cxx
sw/source/filter/html/wrthtml.cxx:206: ueberhaupt Styles ausgeben
    dann auch obere und untere Absatz-Abstaende
sw/source/filter/html/wrthtml.cxx:254: Nur noch fuer den MS-IE ziehen wir den Export von Styles vor
sw/source/filter/html/wrthtml.cxx:335: Tabellen und Bereiche am Doc.-Anfang beachten
sw/source/filter/html/wrthtml.cxx:347: erster Node (der einen Seitenumbruch enthalten darf
sw/source/filter/html/wrthtml.cxx:375: FindSectionNode() an einem SectionNode liefert den selben
sw/source/filter/html/wrthtml.cxx:381: Tabelle fuer die freifliegenden Rahmen erzeugen, aber nur wenn
    das gesamte Dokument geschrieben wird
sw/source/filter/html/wrthtml.cxx:393: Formulare, die nur HiddenControls enthalten ausgeben
sw/source/filter/html/wrthtml.cxx:441: loesche die Tabelle mit den freifliegenden Rahmen
sw/source/filter/html/wrthtml.cxx:499: Waehrend des Exports angelegte Zeichen- und Abastzvorlagen
    loeschen
sw/source/filter/html/wrthtml.cxx:770: gebe alle Bereiche des Pams in das HTML-File aus
sw/source/filter/html/wrthtml.cxx:776: suche den ersten am Pam-auszugebenen FlyFrame
    fehlt noch
sw/source/filter/html/wrthtml.cxx:817: sollen nur die Selectierten Bereiche gesichert werden, so
    duerfen nur die vollstaendigen Nodes gespeichert werde
    d.H. der 1. und n. Node teilweise, der 2. bis n-1. Node
    vollstaendig. (vollstaendig heisst mit allen Formaten
sw/source/filter/html/wrthtml.cxx:822: Nach einem Node keine Fusszeile mehr
sw/source/filter/html/wrthtml.cxx:826: MIB 8.7.97: Machen wir jetzt hier und nicht
    beim Aufrufer
sw/source/filter/html/wrthtml.cxx:857: wenn das Item nur in der Vorlage des aktuellen Doks gesetzt
    ist oder einen anderen Wert hat, als in der HTML-Vorlage
    wird es gesetzt
sw/source/filter/html/wrthtml.cxx:881: Das Item war in der HTML-Vorlage noch gesetzt, also geben wir
    das Default aus
sw/source/filter/html/wrthtml.cxx:979: Kommentare und Meta-Tags des ersten Absatzes
sw/source/filter/html/wrthtml.cxx:988: In Nicht-HTML-Dokumenten wird die erste gesetzte Seitenvorlage
    exportiert und wenn keine gesetzt ist die Standard-Vorlage
sw/source/filter/html/wrthtml.cxx:1021: und nun ... das BASIC und JavaScript
sw/source/filter/html/wrthtml.cxx:1022: nur mit DocShell ist Basic moeglich
sw/source/filter/html/wrthtml.cxx:1029: der Body wird nicht eingerueckt, weil sonst alles eingerueckt waere
sw/source/filter/html/wrthtml.cxx:1038: Textfarbe ausgeben, wenn sie an der Standard-Vorlage gesetzt ist
    und sich geaendert hat
sw/source/filter/html/wrthtml.cxx:1065: nur mit DocShell ist Basic moeglich
sw/source/filter/html/wrthtml.cxx:1091: Ausgabe aller Bookmarks in diesem Absatz. Die Content-Position
    wird vorerst nicht beruecksichtigt
sw/source/filter/html/wrthtml.cxx:1097: Der Bereich derBookmark wird erstam ignoriert, da er von uns
    auch nicht eingelesen wird
sw/source/filter/html/wrthtml.cxx:1345: etwas umstaendlich, aber wir haben nur einen Indent-String
sw/source/filter/html/wrthtml.cxx:1408: Struktur speichert die aktuellen Daten des Writers zwischen, um
    einen anderen Dokument-Teil auszugeben, wie z.B. Header/Footer
sw/source/filter/html/wrthtml.cxx:1428: Tabelle in Sonderbereichen erkennen
sw/source/filter/html/wrthtml.cxx:1444: Ggf. die aktuelle Numerierungs-Info merken, damit sie wieder
    neu aufgenommen werden kann. Nur dann belibt auch die Numerierungs
    Info des nachsten Absatz gueltig
sw/source/filter/html/wrthtml.cxx:1456: Die Numerierung wird in jedem Fall unterbrochen
sw/source/filter/html/wrthtml.cxx:1479: Ggf. die Numerierung von vor der Section fortsetzen. Die Numerierung
    des naecshten Absatz wird in jedem Fall ungueltig
sw/source/filter/html/wrthtml.hxx:69: Flags fuer die Ausgabe von Rahmen aller Art
    BORDER geht nur bei OutHTML_Image
    ANYSIZE gibt an, ob auch VAR_SIZE und MIN_SIZE angaben exportiert werden
    ABSSIZE gibt an, ob Abstand und Umrandung ignoriert werden sollen
sw/source/filter/html/wrthtml.hxx:135: Die folgenden Flags bestimmen nur, welche Descriptoren, Tags, Optionen etc
    ausgegeben werden
    bit 0,1,2
sw/source/filter/html/wrthtml.hxx:157: Die folgenden Flags legen fest, was ausgegeben wird
    bit 6,7,8,9
sw/source/filter/html/wrthtml.hxx:188: die Form, zu der das Control gehoert
sw/source/filter/html/wrthtml.hxx:190: der Node, in dem es verankert ist
sw/source/filter/html/wrthtml.hxx:234: Konstruktor fuer einen Dummy zum Suchen
sw/source/filter/html/wrthtml.hxx:247: Konstruktor zum Erstellen der Format-Info
sw/source/filter/html/wrthtml.hxx:339: die dafaults, der nicht geschrieben
sw/source/filter/html/wrthtml.hxx:343: die defaults, der nicht geschrieben
sw/source/filter/html/wrthtml.hxx:347: welcher DL-Level existiert gerade
sw/source/filter/html/wrthtml.hxx:361: Beschreibung der Export-Konfiguration
    0
sw/source/filter/html/wrthtml.hxx:363: Styles herkoemmlichen Tags vorziehen
sw/source/filter/html/wrthtml.hxx:368: Beschreibung dessen, was exportiert wird
sw/source/filter/html/wrthtml.hxx:380: Die folgenden beiden Flags geben an, wir Attribute exportiert werden
    bTextAttr bOutOpts
    0        0           Style-Sheets
    1        0           Hints: Jedes Attribut wird als eignes Tag
    geschrieben und es gibt ein End-Tag
    0        1           (Absatz-)Attribute: Das Attribut wird als Option
    eines bereits geschrieben Tags exportiert. Es
    gibt kein End-Tag
sw/source/filter/html/wrthtml.hxx:385: wird der Tabelleninhalt geschrieben
sw/source/filter/html/wrthtml.hxx:392: wurde schon eine Property ausgegeben
sw/source/filter/html/wrthtml.hxx:393: wurde schon eine Property ausgegeben
sw/source/filter/html/wrthtml.hxx:396: die Textkoerper-Vorlage wurde
    modifiziert
    16
sw/source/filter/html/wrthtml.hxx:399: was muss/kann/darf nicht ausgegeben werden
sw/source/filter/html/wrthtml.hxx:402: <BR CLEAR=LEFT> am Absatz-Ende ausg
sw/source/filter/html/wrthtml.hxx:403: <BR CLEAR=RIGHT> am Absatz-Ende ausg
sw/source/filter/html/wrthtml.hxx:404: ein Zeilenumbruch darf eingef. werden
sw/source/filter/html/wrthtml.hxx:426: gebe alle an in aktuellen Ansatz stehenden Bookmarks aus
sw/source/filter/html/wrthtml.hxx:436: gebe die evt. an der akt. Position stehenden FlyFrame aus
sw/source/filter/html/wrthtml.hxx:474: BODY-Tag-Events aus der SFX-Konfigaurion
sw/source/filter/html/wrthtml.hxx:489: ALT/ALIGN/WIDTH/HEIGHT/HSPACE/VSPACE-Optionen des aktuellen
    Frame-Formats ausgeben und ggf. ein <BR CLEAR=...> vorne an
    rEndTags anhaengen
sw/source/filter/html/wrthtml.hxx:539: Die Numerierungs-Information des naechsten Absatz holen. Sie
    muss noch nicht vorhanden sein
sw/source/filter/html/wrthtml.hxx:548: Die Numerierungs-Information des naeschten Absatz loeschen
sw/source/filter/html/wrthtml.hxx:631: Struktur speichert die aktuellen Daten des Writers zwischen, um
    einen anderen Dokument-Teil auszugeben, wie z.B. Header/Footer
    Mit den beiden USHORTs im CTOR wird ein neuer PaM erzeugt und auf
    die Position im Dokument gesetzt
    Im Destructor werden alle Daten wieder restauriert und der angelegte
    Pam wieder geloescht
sw/source/filter/inc/fltini.hxx:35: wir wollen die Streams / Storages nicht geoeffnet haben
sw/source/filter/inc/fltini.hxx:65: Umsetzen der LRSpaces im aktuell importierten Doc. Die Fremd-Filter
    liefern immer absolute Werte fuer die Ebenen einer NumRule. Wir
    verarbeiten jetzt aber relative Werte bezogen auf das LR-Space-Item
    Das hat zur Folge, das bei allen Absaetzen die EInzuege der NumRule vom
    Absatz-Einzug abgezogen werden muss
sw/source/filter/inc/fltshell.hxx:99: Stack-Eintrag fuer die Attribute Es werden immer Pointer auf neue Attribute uebergeben
sw/source/filter/inc/fltshell.hxx:316: Der WWEndStack verhaelt sich wie der WWControlStck, nur dass die Attribute
    auf ihm bis ans Ende des Dokuments gehortet werden, falls auf sie noch
    zugegriffen werden muss (z.B. Book/RefMarks, Index u.s.w
sw/source/filter/inc/wrt_fn.hxx:30: Funktionspointer auf die Attribut-Write-Funktionen
sw/source/filter/inc/wrt_fn.hxx:38: Funktionspointer auf die Node-Write-Funktionen
sw/source/filter/inc/wrtswtbl.hxx:38: Code aus dem HTML-Filter fuers schreiben von Tabellen
sw/source/filter/inc/wrtswtbl.hxx:48: geerbter Hintergrund einer Zeile
sw/source/filter/inc/wrtswtbl.hxx:114: Dicke der oberen/unteren Umrandugen
sw/source/filter/inc/wrtswtbl.hxx:153: Da wir hier nur die Wahrheits-Grade 0 und 1 kennen, lassen wir lieber
    auch nicht zu, dass x==y und x<y gleichzeitig gilt
sw/source/filter/inc/wrtswtbl.hxx:206: Da wir hier nur die Wahrheits-Grade 0 und 1 kennen, lassen wir lieber
    auch nicht zu, dass x==y und x<y gleichzeitig gilt
sw/source/filter/inc/wrtswtbl.hxx:238: Bezugsgroesse fur Breiten SwFormatFrmSize
sw/source/filter/inc/wrtswtbl.hxx:245: Absolute/Relative Breite der Tabelle
sw/source/filter/inc/wrtswtbl.hxx:248: Layout zur Hoehenbestimmung nehmen
sw/source/filter/ww8/attributeoutputbase.hxx:367: Sfx item Sfx item RES_CHRATR_CASEMAP
sw/source/filter/ww8/rtfattributeoutput.hxx:225: Sfx item Sfx item RES_CHRATR_CASEMAP
sw/source/filter/ww8/writerhelper.cxx:853: exitiert schon ein Layout, dann muss an dieser Tabelle die BoxFrames
    neu erzeugt
sw/source/filter/ww8/wrtw8esh.cxx:1045: fSpec-Attribut true
    Fuer DrawObjets muss ein Spezial-Zeichen
    in den Text und darum ein fSpec-Attribut
sw/source/filter/ww8/wrtw8esh.cxx:1071: Attributwechsel an Pos 0 wird ignoriert, da davon ausgegangen
    wird, dass am Absatzanfang sowieso die Attribute neu ausgegeben
    werden
sw/source/filter/ww8/wrtw8esh.cxx:1096: der erste Parameter in SearchNext() liefert zurueck, ob es ein TextAtr ist
sw/source/filter/ww8/wrtw8esh.cxx:1267: HasItem ist fuer die Zusammenfassung des Doppel-Attributes Underline
    und WordLineMode als TextItems. OutAttr() ruft die Ausgabefunktion
    die dann ueber HasItem() nach anderen Items an der
    Attribut-Anfangposition fragen kann
    Es koennen nur Attribute mit Ende abgefragt werden
    Es wird mit bDeep gesucht
sw/source/filter/ww8/wrtw8esh.cxx:1394: Am Zeilenende werden die Attribute bis ueber das CR
    aufgezogen. Ausnahme: Fussnoten am Zeilenende
sw/source/filter/ww8/wrtw8esh.cxx:1404: Ausnahme: Fussnoten am Zeilenende
sw/source/filter/ww8/wrtw8esh.cxx:2166: PPT arbeitet nur mit Einheiten zu 576DPI
    WW hingegen verwendet twips, dh. 1440DPI
sw/source/filter/ww8/wrtw8nds.cxx:2929: Hole vom Node und vom letzten Node die Position in der Section
sw/source/filter/ww8/wrtw8sty.cxx:281: first CharFormat
    das Default-ZeichenStyle ( 0 ) wird nicht mit ausgegeben
sw/source/filter/ww8/wrtw8sty.cxx:289: then TextFormatColls
    das Default-TextStyle ( 0 ) wird nicht mit ausgegeben
sw/source/filter/ww8/wrtw8sty.cxx:426: Adr2 zum nachtragen von "end of upx
sw/source/filter/ww8/wrtw8sty.cxx:493: Laenge zum Nachtragen
    Keinen Pointer merken, da sich bei
    grow der Pointer aendert
sw/source/filter/ww8/wrtw8sty.cxx:769: fixed part
    ab Ver8 sind folgende beiden Felder eingeschoben
    werden von uns ignoriert
sw/source/filter/ww8/wrtw8sty.cxx:1268: das ist also 1.Seite und nachfolgende, also nur den
    follow beachten
sw/source/filter/ww8/wrtw8sty.cxx:1533: am Nachkommen NUR  die Spaltigkeit gemaess Sect-Attr
    umsetzen
sw/source/filter/ww8/wrtw8sty.cxx:1590: if a Follow is set and it does not point to itself
    then there is a page chain
    Falls damit eine "Erste Seite" simuliert werden soll, so
    koennen wir das auch als solches schreiben
    Anders sieht es mit Links/Rechts wechseln aus. Dafuer muss
    erkannt werden, wo der Seitenwechsel statt findet. Hier ist
    es aber dafuer zuspaet
sw/source/filter/ww8/wrtw8sty.cxx:1658: werden es nur linke oder nur rechte Seiten
sw/source/filter/ww8/wrtww8.cxx:354: Werte aus der DocStatistik (werden aufjedenfall fuer die
    DocStat-Felder benoetigt
sw/source/filter/ww8/wrtww8.cxx:960: fuer jedes FKP die Page ausgeben
sw/source/filter/ww8/wrtww8.cxx:1068: selber FC ohne Sprm wird ohne zu mosern ignoriert
sw/source/filter/ww8/wrtww8.cxx:1210: wenn bCombined, dann ist das Array ab pFkp schon Bytemaessig auf LittleEndian
    umgedreht, d.h. zum Herausholen der Anfangs- und Endpositionen muss
    zurueckgedreht werden
sw/source/filter/ww8/wrtww8.cxx:1564: WriteShort() target an FilePos nPos den Wert nVal ein und seekt auf die
    alte FilePos zurueck. Benutzt zum Nachtragen von Laengen
sw/source/filter/ww8/wrtww8.cxx:2274: dann besorge mal die Seitenbreite ohne Raender
sw/source/filter/ww8/wrtww8.hxx:240: Pos der einzelnen Header / Footer
sw/source/filter/ww8/wrtww8.hxx:444: bOutPageDesc muss nicht gesichert werden, da es nur nicht waehrend der
    Ausgabe von Spezial-Texten veraendert wird
sw/source/filter/ww8/wrtww8.hxx:473: < Style-Nummer des Nodes
    in/an dem ein Fly verankert ist
sw/source/filter/ww8/wrtww8.hxx:508: zur Justierung eines im Writer als
sw/source/filter/ww8/wrtww8.hxx:510: Zeichen gebundenen Flys, der im WW
    Absatzgebunden wird
sw/source/filter/ww8/wrtww8gr.cxx:80: OutGrf () is called for every GrafNode in the document. Es wird ein PicLocFc-Sprm
    eingefuegt, der statt Adresse ein Magic sal_uLong enthaelt. Ausserdem wird
    in der Graf-Klasse der GrfNode-Ptr gemerkt ( fuers spaetere Ausgeben der
    Grafiken und Patchen der PicLocFc-Attribute
sw/source/filter/ww8/ww8atr.cxx:231: Format wie folgt ausgeben
    gebe die Attribute aus; ohne Parents
sw/source/filter/ww8/ww8atr.cxx:393: Da WW nur Break-After ( Pagebreak und Sectionbreaks ) kennt, im SW aber
    Pagebreaks "vor" und "nach" und Pagedescs nur "vor" existieren, werden
    die Breaks 2* durchgeklimpert, naemlich vor und hinter jeder Zeile
    Je nach BreakTyp werden sie vor oder nach der Zeile gesetzt
    Es duerfen nur Funktionen gerufen werden, die nicht in den
    Ausgabebereich pO schreiben, da dieser nur einmal fuer CHP und PAP existiert
    und damit im falschen landen wuerden
sw/source/filter/ww8/ww8atr.cxx:601: Die PageDescs werden beim Auftreten von PageDesc-Attributen nur in
    WW8Writer::pSepx mit der entsprechenden Position eingetragen.  Das
    Aufbauen und die Ausgabe der am PageDesc haengenden Attribute und
    Kopf/Fusszeilen passiert nach dem Haupttext und seinen Attributen
sw/source/filter/ww8/ww8atr.cxx:606: tatsaechlich wird hier NOCH NICHTS ausgegeben, sondern
    nur die Merk-Arrays aCps, aSects entsprechend ergaenzt
sw/source/filter/ww8/ww8atr.cxx:632: dann muss das fuer die Ausgabe korrigiert werden
sw/source/filter/ww8/ww8atr.cxx:667: nix, macht WW undokumentiert auch so
sw/source/filter/ww8/ww8atr.cxx:798: Fly als Zeichen werden bei uns zu Absatz-gebundenen
    jetzt den Abstand vom Absatz-Rand setzen
sw/source/filter/ww8/ww8atr.cxx:1476: TransBrush uebersetzt SW-Brushes in WW. Heraus kommt WW8_SHD
    Nicht-Standardfarben des SW werden noch nicht in die
    Misch-Werte ( 0 .. 95% ) vom WW uebersetzt
    Return: Echte Brush ( nicht transparent
    auch bei Transparent wird z.B. fuer Tabellen eine transparente Brush
    geliefert
sw/source/filter/ww8/ww8atr.cxx:2938: Detaillierte Einstellungen zur Trennung erlaubt WW nur dokumentenweise
    Man koennte folgende Mimik einbauen: Die Werte des Style "Standard" werden
    falls vorhanden, in die Document Properties ( DOP ) gesetzt
sw/source/filter/ww8/ww8atr.cxx:2941: ACK.  Dieser Vorschlag passt exakt zu unserer Implementierung des Import
    daher setze ich das gleich mal um. (KHZ, 07/15/2000
sw/source/filter/ww8/ww8atr.cxx:3008: NoHyphen: ich habe keine Entsprechung in der SW-UI und WW-UI gefunden
sw/source/filter/ww8/ww8atr.cxx:3041: fSpec-Attribut true
    Fuer Auto-Nummer muss ein Spezial-Zeichen
    in den Text und darum ein fSpec-Attribut
sw/source/filter/ww8/ww8atr.cxx:3343: ReplaceCr() wird fuer Pagebreaks und Pagedescs gebraucht. Es wird ein
    bereits geschriebenes CR durch ein Break-Zeichen ersetzt. Replace muss
    direkt nach Schreiben des CR gerufen werden
    Rueckgabe: FilePos des ersetzten CRs + 1 oder 0 fuer nicht ersetzt
sw/source/filter/ww8/ww8atr.cxx:3439: Breaks schreiben nichts in das Ausgabe-Feld rWrt.pO
    sondern nur in den Text-Stream ( Bedingung dafuer, dass sie von Out_Break
    gerufen werden duerfen
sw/source/filter/ww8/ww8atr.cxx:3628: Mittelwert nehmen, da WW nur 1 Wert kennt
sw/source/filter/ww8/ww8atr.cxx:3677: Mittelwert nehmen, da WW nur 1 Wert kennt
sw/source/filter/ww8/ww8atr.cxx:3742: Ankertyp und entsprechende Umrechnung fehlt noch
sw/source/filter/ww8/ww8atr.cxx:3781: Ankertyp und entsprechende Umrechnung fehlt noch
sw/source/filter/ww8/ww8atr.cxx:3824: Im Fall eine Flys als Zeichen: Absatz-gebunden setzen
sw/source/filter/ww8/ww8atr.cxx:3973: MakeBorderLine() bekommt einen WW8Bytes* uebergeben, um die Funktion
    auch fuer die Tabellen-Umrandungen zu benutzen
    Wenn nSprmNo == 0, dann wird der Opcode nicht ausgegeben
    bShadow darf bei Tabellenzellen *nicht* gesetzt sein
sw/source/filter/ww8/ww8atr.cxx:4063: FormatBox2() ist fuer TC-Strukturen in Tabellen. Der Sprm-Opcode
    wird nicht geschrieben, da es in der TC-Structur ohne Opcode gepackt ist
    dxpSpace wird immer 0, da WW das in Tabellen so verlangt
    Tabellenumrandungen fransen sonst aus
    Ein WW8Bytes-Ptr wird als Ausgabe-Parameter uebergeben
sw/source/filter/ww8/ww8atr.cxx:4067: moeglich und vielleicht besser waere 0xffff
sw/source/filter/ww8/ww8atr.cxx:4111: Fly um Grafik-> keine Umrandung hier, da
    der GrafikHeader bereits die Umrandung hat
sw/source/filter/ww8/ww8atr.cxx:4189: dann besorge mal die Seitenbreite ohne Raender
sw/source/filter/ww8/ww8atr.cxx:4229: Nachsehen, ob alle Spalten gleich sind
sw/source/filter/ww8/ww8atr.cxx:4297: gibt es aber nicht in WW - also wie kommt man an
    die MaxLineHeight heran
sw/source/filter/ww8/ww8atr.cxx:4494: Es wird nur das Item "SvxWidowItem" und nicht die Orphans uebersetzt
    da es fuer beides im WW nur ein Attribut "Absatzkontrolle" gibt und
    im SW wahrscheinlich vom Anwender immer Beide oder keiner gesetzt werden
sw/source/filter/ww8/ww8atr.cxx:4533: Add( const SvxTabStop & rTS ) fuegt einen Tab in die WW-Struktur ein
sw/source/filter/ww8/ww8atr.cxx:4584: Del( const SvxTabStop & rTS ) fuegt einen zu loeschenden Tab
    in die WW-Struktur ein
sw/source/filter/ww8/ww8atr.cxx:4593: PutAll( WW8Export& rWW8Wrt ) schreibt das Attribut nach rWrt.pO
sw/source/filter/ww8/ww8graf.cxx:113: Farbtabelle zum Umrechnen RGB-Werte in vordefinierte Farben
    Damit bei der Writer-UI die Farbnamen stimmen
    Die Tabelle int im *3er-System* aufgeteilt. Die Grauwerte fehlen
    da sie nicht ins 3er-System passen ( 4 Werte: sw, ws, 2 * grau
sw/source/filter/ww8/ww8graf.cxx:130: In nWC[3] steht ein Byte, dass in der WW-Doku nicht beschrieben ist
    Die Bedeutung ist anscheinend folgende: Bei 0 ist es eine normale
    Farbe, dessen RGB-Wert in nWC[0..2] steht. stehen in nWC[3] die
    Werte 0x1, 0x7d oder 0x83, dann ist es ein Grauwert, dessen
    Schwarzanteil in 1/2 % in nWC[0] steht
    Ich vermute, dass es auf Bit0 in nWV[3] ankommt, ob es RGB oder Grau ist
sw/source/filter/ww8/ww8graf.cxx:167: ReadGrafStart liest die ObjektDaten ein und erzeugt falls noetig einen Anker
sw/source/filter/ww8/ww8graf.cxx:235: SetFill setzt Fuellattribute wie Vordergrund- und Hintergrund-Farbe
    und Muster durch Reduktion auf eine Farbe
    SetFill() setzt z.Zt kein Muster, da Sdr das nur sehr umstaendlich kann
    und die Sdr-Schraffur ( XDash ) noch nicht fertig ist
    Statt dessen wird eine Mischfarbe gewaehlt, die auf den entsprechenden
    Farbton zwischen den Farben liegt
sw/source/filter/ww8/ww8graf.cxx:306: Ab hier folgen die Routinen fuer die einzelnen Objekte
sw/source/filter/ww8/ww8graf.cxx:460: Beim Ende erst 1 Zeichen spaeter auf naechste Zeile umschalten
    da sonst Zeilenattribute immer eine Zeile zu weit reichen
sw/source/filter/ww8/ww8graf.cxx:479: InsertTxbxStyAttrs() setzt die Style-Attribute in den uebergebenen ItemSet
    Es werden die SW-Styles genommen, die Import-WW-Styles sind zu diesem
    Zeitpunkt schon destruiert
    Die SW-Styles werden per Tiefensuche, d.h. mit Parent-Styles nach den
    in aSrcTab angegebenen Attributen untersucht. Diese werden per Clone
    dupliziert, bei den Duplikaten werden die Which-IDs
    gemaess der Tabelle aDstTab umgesetzt, damit die EditEngine sie nicht
    ignoriert
    Es werden hierbei sowohl Para- wie auch Zeichen-Attribute in den
    ItemSet gestopft
sw/source/filter/ww8/ww8graf.cxx:570: InsertAttrsAsDrawingAttrs() setzt zwischen StartCp und EndCp die Attribute
    Dabei werden Style-Attribute als harte Attribute, Absatz- und Zeichen
    attribute gesetzt
sw/source/filter/ww8/ww8graf.cxx:783: ggfs. zuerst die richtige TextBox-Story finden
sw/source/filter/ww8/ww8graf.cxx:817: jetzt ggfs. die passende Page in der Break-Table finden
sw/source/filter/ww8/ww8graf.cxx:821: Sonderfall: gesamte(!) Kette soll ermittelt werden
    dann sind wir hier schon fertig
sw/source/filter/ww8/ww8graf.cxx:831: den ersten Eintrag fuer diese TextBox-Story finden
sw/source/filter/ww8/ww8graf.cxx:837: ggfs. entsprechende Anzahl Eintraege weitergehen
sw/source/filter/ww8/ww8graf.cxx:840: dann die tatsaechlichen Start und Ende ermitteln
sw/source/filter/ww8/ww8graf.cxx:869: TxbxText() holt aus WW-File den Text und gibt diesen und den Anfangs- und
    den um -2 (bzw. -1 bei Ver8) korrigierten End-Cp zurueck
sw/source/filter/ww8/ww8graf.cxx:879: den Text einlesen: kann sich ueber mehrere Pieces erstrecken
sw/source/filter/ww8/ww8graf.cxx:938: InsertTxbxText() fuegt fuer TextBoxen und CaptionBoxen den Text
    und die Attribute ein
sw/source/filter/ww8/ww8graf.cxx:1137: Fuer die naechste Textbox noch die alten Absatz-Attribute
    und Styles entfernen, sonst startet die naechste Box
    mit falschen Attributen
    Vorgehen: Text loeschen = auf 1 Absatz reduzieren
    und an diesem Absatz die Absatzattribute und Styles loeschen
    Empfehlung JOE
sw/source/filter/ww8/ww8graf.cxx:1437: Beachte: im Gegensatz zu den Winword-ueblichen Tabellen- und
    Rahmen-Randbreiten-Angaben, bei denen jeweils aus der Staerke *einer
    Linie die Gesamt-Randbreite zu errechnen ist, liegen die aus dem ESCHER
    stammenden Daten bereits als Gesamt-Breite [twips] vor
    Der Winword default ist 15 tw. Wir nehmen hierfuer unsere 20 tw Linie
    0.75 pt uns 1.0 pt sehen sich auf dem Ausdruck naemlich aehnlicher als
    etwas 0.75 pt und unsere 0.05 pt Haarlinie. ) Die Haarlinie setzen wir nur
    bei Winword-Staerken bis zu maximal 0.5 pt ein
sw/source/filter/ww8/ww8graf.cxx:1506: Beachte: im Gegensatz zu den Winword-ueblichen Tabellen- und
    Rahmen-Randbreiten-Angaben, bei denen jeweils aus der Staerke *einer
    Linie die Gesamt-Randbreite zu errechnen ist, liegen die aus dem ESCHER
    stammenden Daten bereits als Gesamt-Breite [twips] vor
    Der Winword default ist 15 tw. Wir nehmen hierfuer unsere 20 tw Linie
    0.75 pt uns 1.0 pt sehen sich auf dem Ausdruck naemlich aehnlicher als
    etwas 0.75 pt und unsere 0.05 pt Haarlinie. ) Die Haarlinie setzen wir nur
    bei Winword-Staerken bis zu maximal 0.5 pt ein
sw/source/filter/ww8/ww8graf.cxx:1514: dann die Doppel-Linien, fuer die wir feine Entsprechungen haben
sw/source/filter/ww8/ww8graf.cxx:1594: einige Items koennen direkt so uebernommen werden
sw/source/filter/ww8/ww8graf.cxx:1610: jetzt die Umrandung berechnen und die Box bauen: Das Mass wird fuer die
    Rahmen-GROESSE benoetigt
sw/source/filter/ww8/ww8graf.cxx:1613: dashed oder solid wird zu solid
    WW-default: 0.75 pt = 15 twips
sw/source/filter/ww8/ww8graf.cxx:1713: Schattenwurf der Box: SvxShadowItem
sw/source/filter/ww8/ww8graf.cxx:2505: bei Modus 2 oder 4 auch den Zusatzparameter beruecksichtigen
sw/source/filter/ww8/ww8graf.cxx:2531: Winword kann nur Aussen-Konturen
sw/source/filter/ww8/ww8graf.cxx:2535: eingelesenes Objekt (kann eine ganze Gruppe sein) jetzt korrekt
    positionieren usw
sw/source/filter/ww8/ww8graf.cxx:2731: Pruefen, ob Gruppenobjekt (z.B. zwei Klammern) vorliegt
sw/source/filter/ww8/ww8graf.cxx:2735: Gruppenobjekte haben keinen Text. Fuege ein Textobjekt in die
    Gruppe ein, um den Text zu halten
sw/source/filter/ww8/ww8graf.cxx:2765: Objekt ist Bestandteil einer Gruppe
sw/source/filter/ww8/ww8graf.cxx:2781: Objekt wurde bereits (in der Gruppe und) der Drawing-Page
    durch ein neues SdrGrafObj ersetzt
sw/source/filter/ww8/ww8graf.cxx:2787: Objekt in der Z-Order-Liste ersetzen
sw/source/filter/ww8/ww8graf.cxx:2797: Objekt aus der Z-Order-Liste loeschen
sw/source/filter/ww8/ww8graf.cxx:2799: Objekt aus der Drawing-Page rausnehmen
sw/source/filter/ww8/ww8graf.cxx:2803: und FrameFormat entfernen, da durch Grafik ersetzt (dies
    loescht auch das Objekt
sw/source/filter/ww8/ww8graf.cxx:3016: mehrfaches Auftreten gleicher Grafik-Namen vermeiden
sw/source/filter/ww8/ww8graf.cxx:3020: falls alles Ok, Zeiger auf neues Objekt ermitteln und Z-Order-Liste
    entsprechend korrigieren (oder Eintrag loeschen
sw/source/filter/ww8/ww8graf.cxx:3023: altes Objekt aus der Z-Order-Liste entfernen
sw/source/filter/ww8/ww8graf.cxx:3035: Kontakt-Objekt in die Z-Order-Liste und die Page aufnehmen
sw/source/filter/ww8/ww8graf.cxx:3042: Das Kontakt-Objekt MUSS in die Draw-Page gesetzt werden, damit in
    SwWW8ImplReader::LoadDoc1() die Z-Order festgelegt werden kann
sw/source/filter/ww8/ww8graf.cxx:3053: Fuer SVDraw und VCControls und Escher
sw/source/filter/ww8/ww8graf2.cxx:162: InsertObj() fuegt das Objekt in die Sw-Page ein und merkt sich die Z-Pos in
    einem VarArr
sw/source/filter/ww8/ww8graf2.cxx:213: Parallel zu dem Obj-Array im Dokument baue ich ein Array auf
    dass die Ww-Height ( -> Wer ueberdeckt wen ) beinhaltet
    Anhand dieses VARARR wird die Einfuegeposition ermittelt
    Der Offset bei Datei in bestehendes Dokument mit Grafiklayer einfuegen
    muss der Aufrufer den Index um mnNoInitialObjects erhoeht werden, damit die
    neuen Objekte am Ende landen ( Einfuegen ist dann schneller
sw/source/filter/ww8/ww8graf2.cxx:257: BMP-File ( nicht embeddet ) oder GIF
sw/source/filter/ww8/ww8graf2.cxx:266: Datei anschliessend nicht loeschen
sw/source/filter/ww8/ww8graf2.cxx:286: MAC - Word als Creator
    im WMF steht nur "Benutzen sie Word 6.0c" Mac-Pict steht dahinter
    allerdings ohne die ersten 512 Bytes, bei einem MAC-PICT egal sind
    werden nicht ausgewertet
sw/source/filter/ww8/ww8graf2.cxx:339: altes Objekt raus aus Gruppen-Liste und neues rein
    dies tauscht es ebenfalls in der Drawing-Page aus
sw/source/filter/ww8/ww8graf2.cxx:349: MakeGrafNotInContent setzt eine nicht-Zeichengebundene Grafik
    bGrafApo == true
sw/source/filter/ww8/ww8graf2.cxx:374: Damit die Frames bei Einfuegen in existierendes Doc erzeugt werden
sw/source/filter/ww8/ww8graf2.cxx:383: MakeGrafInContent fuegt zeichengebundene Grafiken ein
sw/source/filter/ww8/ww8graf2.cxx:403: Grafik im Rahmen ? ok, Rahmen auf Bildgroesse vergroessern
    nur wenn Auto-Breite
sw/source/filter/ww8/ww8graf2.cxx:478: kleiner Spass von Microsoft: manchmal existiert ein Stream Namens DATA
    Dieser enthaelt dann den PICF und die entsprechende Grafik
    Wir mappen ansonsten die Variable pDataStream auf pStream
sw/source/filter/ww8/ww8graf2.cxx:487: Plausibilitaetstest ist noetig, da z.B. bei CheckBoxen im
    Feld-Result ein WMF-aehnliches Struct vorkommt
sw/source/filter/ww8/ww8graf2.cxx:493: Soeben haben wir einen Grafik-Link ins Doc inserted
    Wir muessen ihn jetzt noch Positioniern und Skalieren
sw/source/filter/ww8/ww8graf2.cxx:514: verlinkte Grafik im Escher-Objekt
sw/source/filter/ww8/ww8graf2.cxx:604: Groesse aus der WinWord PIC-Struktur als
    Grafik-Groesse nehmen
sw/source/filter/ww8/ww8graf2.cxx:652: Nun den Link bzw. die Grafik ins Doc stopfen
sw/source/filter/ww8/ww8graf2.cxx:669: also nur, wenn wir ein *Insert* gemacht haben
sw/source/filter/ww8/ww8graf2.cxx:682: Zeiger auf neues Objekt ermitteln und Z-Order-Liste
    entsprechend korrigieren (oder Eintrag loeschen
sw/source/filter/ww8/ww8graf2.cxx:691: altes SdrGrafObj aus der Page loeschen und
    zerstoeren
sw/source/filter/ww8/ww8graf2.cxx:703: auch das ggfs.  Page loeschen, falls nicht gruppiert
sw/source/filter/ww8/ww8par.cxx:153: define VT_EMPTY            0
    define VT_I4               3
    define VT_LPSTR            30
    define VT_LPWSTR           31
    define VT_BLOB             65
    define VT_TYPEMASK         0xFFF
sw/source/filter/ww8/ww8par.cxx:4992: zuerst(!) alle Styles importieren   (siehe WW8PAR2.CXX
    VOR dem Import der Listen
sw/source/filter/ww8/ww8par.hxx:116: defines nur fuer die WW8-variable der INI-Datei
sw/source/filter/ww8/ww8par.hxx:165: D. aus PLF LFO, sortiert genau wie im WW8 Stream
sw/source/filter/ww8/ww8par.hxx:192: WinWord-Attribute
    Achtung: *Nicht* umsortieren, da Teile mit
    memcmp verglichen werden
sw/source/filter/ww8/ww8par.hxx:203: true: Dieser Rahmen dient allein dazu, die
    enthaltene Grafik anders als zeichengebunden
    zu positionieren
sw/source/filter/ww8/ww8par.hxx:1220: Pointer auf die Style-Einleseklasse
sw/source/filter/ww8/ww8par.hxx:1222: gerade zu erzeugende Collection
    ist ausserhalb einer Style-Def immer 0
sw/source/filter/ww8/ww8par.hxx:1224: gerade einzulesende Zeichenattribute
    ausserhalb des WW8ListManager Ctor's immer 0
sw/source/filter/ww8/ww8par.hxx:1229: Pointer auf Header / Footer - Scannerklasse
sw/source/filter/ww8/ww8par.hxx:1235: Beschreibung der Tabelleneigenschaften
    Keep track of tables within tables
sw/source/filter/ww8/ww8par.hxx:1265: dito fuers Taggen von nicht importierbaren F
sw/source/filter/ww8/ww8par.hxx:1284: gemaess WW-Zaehlung, <0 fuer keine
sw/source/filter/ww8/ww8par.hxx:1295: Gliederung / Nummerg / Aufzaehlg
sw/source/filter/ww8/ww8par.hxx:1307: FlyFrame, der als Ersatz fuer Winword Textbox eingefuegt wurde
sw/source/filter/ww8/ww8par.hxx:1311: wird gerade eine Tabelle eingelesen
sw/source/filter/ww8/ww8par.hxx:1329: Attribute ignorieren zum Ignorieren v. Styles
sw/source/filter/ww8/ww8par.hxx:1553: Nummerierungen / Aufzaehlungen ( Autonumbered List Data Descriptor
    Liste:        ANLD ( Autonumbered List Data Descriptor
    eine Ebene: ANLV ( Autonumber Level Descriptor
sw/source/filter/ww8/ww8par.hxx:1558: Chg7-8
    Listen sind in WW8 eigene Strukturen, die ueber folgende drei Tabellen
    verwaltet werden: rglst, hpllfo und hsttbListNames
    die Strukturen hierfuer sind: LSTF, LVLF, LFO LFOLVL
sw/source/filter/ww8/ww8par.hxx:1641: spaeter zu ersetzen durch Aufruf in entsprechend erweiterten SvxMSDffManager
sw/source/filter/ww8/ww8par.hxx:1645: Schnittstellen fuer die Toggle-Attribute
sw/source/filter/ww8/ww8par2.cxx:989: pNd->UpdateNum ohne Regelwerk gibt GPF spaetestens beim Speichern als
    sdw3
sw/source/filter/ww8/ww8par2.cxx:991: WW:10 = numberierung -> SW:0 & WW:11 = bullets -> SW:0
sw/source/filter/ww8/ww8par2.cxx:2084: 1. Durchlauf: aeusserste L- und R-Grenzen finden
sw/source/filter/ww8/ww8par2.cxx:3322: keine rekursiven Tabellen Nicht bei EinfuegenDatei in Tabelle oder
    Fussnote
sw/source/filter/ww8/ww8par2.hxx:51: 1. Teil: daraus abgeleitete Sw-Attribute
sw/source/filter/ww8/ww8par2.hxx:68: 2.Teil: sich waehrend des Einlesens ergebende AEnderungen
sw/source/filter/ww8/ww8par2.hxx:70: um nach Apo in Haupttext zurueckzukehren
sw/source/filter/ww8/ww8par2.hxx:96: Bullets und Aufzaehlungen in Styles
sw/source/filter/ww8/ww8par2.hxx:101: fuer Bullets und Aufzaehlungen in Styles
sw/source/filter/ww8/ww8par2.hxx:108: For Simulating Default-CTL FontSize
sw/source/filter/ww8/ww8par3.cxx:329: nur DIE Eintraege, die WIR benoetigen
sw/source/filter/ww8/ww8par3.cxx:342: nur DIE Eintraege, die WIR benoetigen
sw/source/filter/ww8/ww8par3.cxx:350: nur DIE Eintraege, die WIR benoetigen
sw/source/filter/ww8/ww8par3.cxx:390: in den ListenInfos zu speichernde Daten
sw/source/filter/ww8/ww8par3.cxx:392: sortiert nach nIdLst (in WW8 verwendete Listen-Id
sw/source/filter/ww8/ww8par3.cxx:399: Zeiger auf entsprechende Listenvorlage im Writer
sw/source/filter/ww8/ww8par3.cxx:401: Flag, ob diese NumRule nur einen Level verwendet
sw/source/filter/ww8/ww8par3.cxx:403: Flag, ob diese NumRule im Doc verwendet wird
    oder beim Reader-Ende geloescht werden sollte
sw/source/filter/ww8/ww8par3.cxx:416: in den ListenFormatOverrideInfos zu speichernde Daten
sw/source/filter/ww8/ww8par3.cxx:418: unsortiert, d.h. Reihenfolge genau wie im WW8 Stream
sw/source/filter/ww8/ww8par3.cxx:424: Zeiger auf entsprechende Listenvorlage im Writer
    entweder: Liste in LSTInfos oder eigene Liste
    im Ctor erstmal die aus den LSTInfos merken
sw/source/filter/ww8/ww8par3.cxx:430: count of levels whose format is overridden
    Ja, ich natuerlich koennten wir nLfoLvl (mittels :4) noch in das folgende
    Byte mit hineinpacken, doch waere das eine ziemliche Fehlerquelle
    an dem Tag, wo MS ihr Listenformat auf mehr als 15 Level aufbohren
sw/source/filter/ww8/ww8par3.cxx:433: Flag, ob die NumRule nicht in maLSTInfos steht
    sondern fuer pLFOInfos NEU angelegt wurde
sw/source/filter/ww8/ww8par3.cxx:434: Flag, ob diese NumRule nur einen Level verwendet
sw/source/filter/ww8/ww8par3.cxx:436: Flag, ob diese NumRule im Doc verwendet wird
    oder beim Reader-Ende geloescht werden sollte
sw/source/filter/ww8/ww8par3.cxx:438: Flag, ob bUsedInDoc in maLSTInfos gesetzt wurde
    und nicht nochmals gesetzt zu werden braucht
sw/source/filter/ww8/ww8par3.cxx:457: finden der Sprm-Parameter-Daten, falls Sprm im Grpprl enthalten
sw/source/filter/ww8/ww8par3.cxx:474: Zugriff ueber die List-Id des LST Eintrags
sw/source/filter/ww8/ww8par3.cxx:574: 2. ggfs. PAPx einlesen und nach Einzug-Werten suchen
sw/source/filter/ww8/ww8par3.cxx:695: neues ItemSet fuer die Zeichenattribute anlegen
sw/source/filter/ww8/ww8par3.cxx:699: Reader-ItemSet-Pointer darauf zeigen lassen
sw/source/filter/ww8/ww8par3.cxx:701: Reader-Style auf den Style dieses Levels setzen
sw/source/filter/ww8/ww8par3.cxx:711: Nun den GrpprlChpx einfach durchnudeln: die Read_xy() Methoden
    in WW8PAR6.CXX rufen ganz normal ihr NewAttr() oder GetFormatAttr
    und diese merken am besetzten Reader-ItemSet-Pointer, dass dieser
    spezielle ItemSet relevant ist - und nicht ein Stack oder Style
sw/source/filter/ww8/ww8par3.cxx:723: Reader-ItemSet-Pointer und Reader-Style zuruecksetzen
sw/source/filter/ww8/ww8par3.cxx:730: 4. den Nummerierungsstring einlesen: ergibt Prefix und Postfix
sw/source/filter/ww8/ww8par3.cxx:734: 5. gelesene Werte in Writer Syntax umwandeln
sw/source/filter/ww8/ww8par3.cxx:843: akt. Anzeigetiefe fuer den Writer
sw/source/filter/ww8/ww8par3.cxx:852: falls kein NULL als Terminierungs-Char kam
    ist die Liste voller Indices, d.h. alle Plaetze sind besetzt
    also sind alle Level anzuzeigen
sw/source/filter/ww8/ww8par3.cxx:1032: falls kein Item mit gleicher nWhich gefunden oder Werte
    der Items ungleich, Ungleichheit merken und abbrechen
sw/source/filter/ww8/ww8par3.cxx:1089: ggfs. Bullet Font an das NumFormat haengen
sw/source/filter/ww8/ww8par3.cxx:1118: wird erstmal zur Bildung des Style Namens genommen
sw/source/filter/ww8/ww8par3.cxx:1159: 1. PLCF LST auslesen und die Listen Vorlagen im Writer anlegen
sw/source/filter/ww8/ww8par3.cxx:1235: 1.2 alle LVL aller aLST einlesen
sw/source/filter/ww8/ww8par3.cxx:1244: 1.2.1 betreffende(n) LVL(s) fuer diese aLST einlesen
sw/source/filter/ww8/ww8par3.cxx:1266: 1.2.2 die ItemPools mit den CHPx Einstellungen der verschiedenen
    Level miteinander vergleichen und ggfs. Style(s) erzeugen
sw/source/filter/ww8/ww8par3.cxx:1275: 1.2.3 ItemPools leeren und loeschen
sw/source/filter/ww8/ww8par3.cxx:1281: 2. PLF LFO auslesen und speichern
sw/source/filter/ww8/ww8par3.cxx:1314: die Parent NumRule der entsprechenden Liste ermitteln
sw/source/filter/ww8/ww8par3.cxx:1318: hier, im ersten Schritt, erst mal diese NumRule festhalten
sw/source/filter/ww8/ww8par3.cxx:1324: und rein ins Merk-Array mit dem Teil
sw/source/filter/ww8/ww8par3.cxx:1342: 2.2 fuer alle LFO die zugehoerigen LFOLVL einlesen
sw/source/filter/ww8/ww8par3.cxx:1348: stehen hierfuer ueberhaupt LFOLVL an
sw/source/filter/ww8/ww8par3.cxx:1355: 2.2.1 eine neue NumRule fuer diese Liste anlegen
sw/source/filter/ww8/ww8par3.cxx:1365: jetzt dem pNumRule seinen RICHTIGEN Wert zuweisen
    bis dahin war hier die Parent NumRule vermerkt
sw/source/filter/ww8/ww8par3.cxx:1368: Dazu erst mal nachsehen, ob ein Style diesen LFO
    referenziert
sw/source/filter/ww8/ww8par3.cxx:1385: 2.2.2 alle LFOLVL (und ggfs. LVL) fuer die neue NumRule
    einlesen
sw/source/filter/ww8/ww8par3.cxx:1429: beachte: Die Witzbolde bei MS quetschen die
    Override-Level-Nummer in vier Bits hinein, damit sie
    wieder einen Grund haben, ihr Dateiformat zu aendern
    falls ihnen einfaellt, dass sie eigentlich doch gerne
    bis zu 16 Listen-Level haetten.  Wir tun das *nicht
    siehe Kommentar oben bei "struct
    WW8LFOInfo
sw/source/filter/ww8/ww8par3.cxx:1439: 2.2.2.2 eventuell auch den zugehoerigen LVL einlesen
sw/source/filter/ww8/ww8par3.cxx:1448: falls bStartup true, hier den Startup-Level
    durch den im LVL vermerkten ersetzen LVLF
    einlesen
sw/source/filter/ww8/ww8par3.cxx:1463: 2.2.2.3 das NumFormat in die NumRule aufnehmen
sw/source/filter/ww8/ww8par3.cxx:1475: 2.2.3 die LVL der neuen NumRule anpassen
sw/source/filter/ww8/ww8par3.cxx:1487: 2.2.4 ItemPools leeren und loeschen
sw/source/filter/ww8/ww8par3.cxx:1676: SwWW8ImplReader:  anhaengen einer Liste an einen Style oder Absatz
sw/source/filter/ww8/ww8par3.cxx:1756: Phase 1: Nummerierungsattribute beim Einlesen einer StyleDef
sw/source/filter/ww8/ww8par3.cxx:1760: jetzt nur die Parameter vermerken: die tatsaechliche Liste wird
    spaeter drangehaengt, wenn die Listendefinitionen gelesen sind
sw/source/filter/ww8/ww8par3.cxx:1799: Phase 2: aktualisieren der StyleDef nach einlesen aller Listen
sw/source/filter/ww8/ww8par3.cxx:1840: beachte: die Methode haengt die NumRule an den Text Node, falls
    bSetAttr (dann muessen natuerlich vorher die Listen gelesen sein
    stellt sie NUR den Level ein, im Vertrauen darauf, dass am STYLE eine
    NumRule haengt - dies wird NICHT ueberprueft
sw/source/filter/ww8/ww8par3.cxx:1842: sind die Listendeklarationen gelesen
sw/source/filter/ww8/ww8par3.cxx:1931: sind wir erst beim Einlesen der StyleDef
sw/source/filter/ww8/ww8par3.cxx:1957: die Streamdaten sind hier Null basiert, so wie wir es brauchen
sw/source/filter/ww8/ww8par3.cxx:2068: die Streamdaten sind hier 1 basiert, wir ziehen EINS ab
sw/source/filter/ww8/ww8par3.cxx:2614: Das Control-Model am Control-Shape setzen
sw/source/filter/ww8/ww8par4.cxx:161: WMF lesen
    pSt >> aWMF  geht nicht ohne placable Header
sw/source/filter/ww8/ww8par4.cxx:171: MetaFile auf neue Groesse skalieren und
    neue Groesse am MetaFile setzen
sw/source/filter/ww8/ww8par4.cxx:185: 03-META-Stream nicht da. Vielleicht ein 03-PICT
sw/source/filter/ww8/ww8par4.cxx:189: Ist der 01Ole-Stream ueberhaupt vorhanden
sw/source/filter/ww8/ww8par4.cxx:197: Mac-Pict steht im 03PICT-StorageStream allerdings ohne die ersten 512
    Bytes, die bei einem MAC-PICT egal sind ( werden nicht ausgewertet
sw/source/filter/ww8/ww8par4.cxx:286: OLE im Rahmen ?  ok, Rahmen auf Bildgroesse vergroessern
    nur wenn Auto-Breite
sw/source/filter/ww8/ww8par4.cxx:373: 03-META-Stream nicht da. Vielleicht ein 03-PICT
sw/source/filter/ww8/ww8par4.cxx:378: PICT: kein WMF da -> Grafik statt OLE
sw/source/filter/ww8/ww8par5.cxx:315: FindPara() findet den ersten Parameter mit '\' und cToken. Es wird
    ein neuer String allokiert ( der vom Aufrufer deallokiert werden muss
    und alles, was zum Parameter gehoert, wird in ihm zurueckgeliefert
sw/source/filter/ww8/ww8par5.cxx:479: Am Ende des Einlesens entsprechende Felder updaten ( z.Zt. die Referenzen
sw/source/filter/ww8/ww8par5.cxx:710: Read_Field liest ein Feld ein oder, wenn es nicht gelesen werden kann
    wird 0 zurueckgegeben, so dass das Feld vom Aufrufer textuell gelesen wird
    Returnwert: Gesamtlaenge des Feldes ( zum UEberlesen
sw/source/filter/ww8/ww8par5.cxx:884: Resultat nicht als Text
    Lese nur Resultat
sw/source/filter/ww8/ww8par5.cxx:886: Result nested -> nicht brauchbar
sw/source/filter/ww8/ww8par5.cxx:915: so viele ueberlesen, das Resultfeld
    wird wie Haupttext eingelesen
sw/source/filter/ww8/ww8par5.cxx:977: MakeTagString() gibt als Returnwert die Position des ersten
    CR / Zeilenende / Seitenumbruch in pText und wandelt auch nur bis dort
    Wenn keins dieser Sonderzeichen enthalten ist, wird 0 zurueckgeliefert
sw/source/filter/ww8/ww8par5.cxx:1130: GetFieldResult alloziert einen String und liest das Feld-Resultat ein
sw/source/filter/ww8/ww8par5.cxx:1300: macht ohne Textmarke keinen Sinn
sw/source/filter/ww8/ww8par5.cxx:1391: Nummer um eins erhoehen (default
sw/source/filter/ww8/ww8par5.cxx:1653: SH: Das SwAuthorField bezeichnet nicht den urspruenglichen
    Autor, sondern den aktuellen Benutzer, also besser ueber DocInfo
sw/source/filter/ww8/ww8par5.cxx:1670: Sowohl das Datum- wie auch das Uhrzeit-Feld kann fuer Datum, fuer Uhrzeit
    oder fuer beides benutzt werden
sw/source/filter/ww8/ww8par5.cxx:2319: Besonderheit
    Wir setzen jetzt den Link ins Doc und merken uns den SwFlyFrameFormat
    Da wir ja unten auf jjeden Fall mit Return-Wert FLD_READ_FSPA enden
    wird der Skip-Wert so bemessen, dass das folgende Char-1 eingelesen
    wird
    Wenn wir dann in SwWW8ImplReader::ImportGraf() reinlaufen, wird
    erkannt, dass wir soeben einen Grafik-Link inserted haben und
    das passende SwAttrSet wird ins Frame-Format eingesetzt
sw/source/filter/ww8/ww8par5.cxx:2372: Bereich aus Quelle ( kein Switch
sw/source/filter/ww8/ww8par5.cxx:2873: TOX_OUTLINELEVEL setzen wir genau dann, wenn
    die Parameter \o in 1 bis 9 liegen
    oder der Parameter \f existiert
    oder GARKEINE Switches Parameter angegeben sind
sw/source/filter/ww8/ww8par5.cxx:2912: Delimiter statt Tabstop vor der Seitenzahl einsetzen
    falls es eine Seitenzahl gibt
sw/source/filter/ww8/ww8par5.cxx:2970: TOX_OUTLINELEVEL setzen wir genau dann, wenn
    die Parameter \o in 1 bis 9 liegen
    oder der Parameter \f existiert
    oder GARKEINE Switches Parameter angegeben sind
sw/source/filter/ww8/ww8par5.cxx:3039: Delimiter statt Tabstop vor der Seitenzahl einsetzen
    falls es eine Seitenzahl gibt
sw/source/filter/ww8/ww8par5.cxx:3095: Seitenzahl und ggfs. davorstehenden Tabstop
    entfernen
sw/source/filter/ww8/ww8par5.cxx:3556: Vorsicht: Bei Feldnamen mit Umlauten geht das MEMICMP nicht
sw/source/filter/ww8/ww8par6.cxx:111: WW-Default fuer Hor. Seitenraender: 2.5 cm
sw/source/filter/ww8/ww8par6.cxx:112: WW-Default fuer u.Seitenrand: 2.0 cm
sw/source/filter/ww8/ww8par6.cxx:140: Seiten - Attribute, die nicht ueber die Attribut-Verwaltung, sondern
    ueber ...->HasSprm abgearbeitet werden
    ausser OLST, dass weiterhin ein normales Attribut ist
sw/source/filter/ww8/ww8par6.cxx:557: kein Header -> Up einfach uebernehmen
sw/source/filter/ww8/ww8par6.cxx:578: kein Footer -> Lo einfach uebernehmen
sw/source/filter/ww8/ww8par6.cxx:784: Bei jedem Abschnittswechsel ( auch am Anfang eines Dokuments ) wird
    CreateSep gerufen, dass dann den / die Pagedesc(s) erzeugt und
    mit Attributen un KF-Texten fuellt
    Dieses Vorgehen ist noetig geworden, da die UEbersetzung der verschiedenen
    Seiten-Attribute zu stark verflochten ist
sw/source/filter/ww8/ww8par6.cxx:1217: Hilfsroutinen fuer Grafiken und Apos und Tabellen
sw/source/filter/ww8/ww8par6.cxx:1474: fuer Berechnung der minimalen FrameSize
sw/source/filter/ww8/ww8par6.cxx:1621: (*pPap)++ geht bei FastSave schief
    bei FastSave kein Test auf Grafik-APO
sw/source/filter/ww8/ww8par6.cxx:1665: nein -> 1-zeiliger APO
    Grafik-APO
sw/source/filter/ww8/ww8par6.cxx:2000: hat ein Fly in WW eine automatische Breite, dann muss das durch
    nachtraegliches Anpassen der ( im SW festen ) Fly-Breite simuliert werden
    Dabei kann die Fly-Breite groesser oder kleiner werden, da der Default-Wert
    ohne Wissen ueber den Inhalt eingesetzt wird
sw/source/filter/ww8/ww8par6.cxx:2010: Die Klasse WW8FlySet ist von SfxItemSet abgeleitet und stellt auch
    im Prizip nicht mehr zur Verfuegung, ist aber fuer mich besser
    zu handeln
    WW8FlySet-ctor fuer Apos und Graf-Apos
sw/source/filter/ww8/ww8par6.cxx:2043: der 5. Parameter ist immer 0, daher geht beim Cast nix verloren
sw/source/filter/ww8/ww8par6.cxx:2066: WW8FlySet-ctor fuer zeichengebundene Grafiken
sw/source/filter/ww8/ww8par6.cxx:2188: Alle Attribute schliessen, da sonst Attribute entstehen koennen
    die aus Flys rausragen
sw/source/filter/ww8/ww8par6.cxx:2268: APO-Parameter ermitteln und Test auf bGrafApo
sw/source/filter/ww8/ww8par6.cxx:2593: Es muss ein kompletter Vergleich ( ausser Borders ) stattfinden, um
    alle Kombinationen Style / Hart richtig einzuordnen. Deshalb wird ein
    temporaerer WW8FlyPara angelegt ( abh. ob Style oder nicht ), darauf
    die harten Attrs angewendet, und dann verglichen
sw/source/filter/ww8/ww8par6.cxx:2609: zum Ignorieren von Styles beim Doc-Einfuegen
sw/source/filter/ww8/ww8par6.cxx:2646: holt Attribut aus der FormatColl / Stack / Doc
sw/source/filter/ww8/ww8par6.cxx:2682: Die Methoden erhalten die Token-Id und die Laenge der noch folgenden
    Parameter gemaess Tabelle in WWScan.cxx als Parameter
sw/source/filter/ww8/ww8par6.cxx:2809: Read_BoldUsw fuer Italic, Bold, Kapitaelchen, Versalien, durchgestrichen
    Contour und Shadow
sw/source/filter/ww8/ww8par6.cxx:2834: die Attribut-Nr fuer "doppelt durchgestrichen" tanzt aus der Reihe
sw/source/filter/ww8/ww8par6.cxx:2906: dann invertieren
    am Stack vermerken, das dieses ein Toggle-Attribut ist
sw/source/filter/ww8/ww8par6.cxx:2992: dann invertieren
    am Stack vermerken, das dieses ein Toggle-Attribut ist
sw/source/filter/ww8/ww8par6.cxx:3274: dann Stack ggfs. verwursteln und exit
sw/source/filter/ww8/ww8par6.cxx:3416: Die Defines, aus denen diese Tabellen erzeugt werden, stehen in windows.h
sw/source/filter/ww8/ww8par6.cxx:3613: falls bSymbol, gilt der am Symbol
    siehe sprmCSymbol) gesetzte Font
sw/source/filter/ww8/ww8par6.cxx:3871: Parameter: 0 = Auto, 1..16 Farben
sw/source/filter/ww8/ww8par6.cxx:4089: WW hat einen impliziten zusaetzlichen Absatzabstand abhaengig vom
    Zeilenabstand. Er betraegt bei "genau", 0.8*Zeilenabstand "vor" und
    0.2*Zeilenabstand "nach
    Bei "Mindestens" sind es 1*Zeilenabstand "vor" und 0*Zeilenabstand "nach
    Bei Mehrfach sind es 0 "vor" und min( 0cm, FontSize*(nFach-1) ) "nach
sw/source/filter/ww8/ww8par6.cxx:4104: nach Absprache mit AMA ist die Begrenzung unsinnig
sw/source/filter/ww8/ww8par6.cxx:4199: Nun eine Umpopelung eines WW-Fehlers: Bei nProduct == 0c03d wird
    faelschlicherweise ein DyaAfter 240 ( delta y abstand after, amn.d.?b
    im Style "Normal" eingefuegt, der
    gar nicht da ist. Ueber das IniFlag WW8FL_NO_STY_DYA laesst sich dieses
    Verhalten auch fuer andere WW-Versionen erzwingen
    OSL_ENSURE( !bStyNormal || bWWBugNormal, "+Dieses Doc deutet evtl. auf einen
    Fehler in der benutzten WW-Version hin. Wenn sich die Styles <Standard> bzw
    Normal> zwischen WW und SW im Absatz- oder Zeilenabstand unterscheiden
    dann bitte dieses Doc SH zukommen lassen
    bWWBugNormal ist kein hinreichendes Kriterium dafuer, dass der
    angegebene Abstand falsch ist
sw/source/filter/ww8/ww8par6.cxx:4715: die Borders auf allen 4 Seiten werden gebuendelt.  dieses
    vereinfacht die Verwaltung, d.h. die Box muss nicht 4 mal auf den
    CtrlStack und wieder runter
    -> the border of all 4 pages is bundled. This makes management simpler, i.e. the box does not need to go up and down the CtrlStack 4 times
sw/source/filter/ww8/ww8par6.cxx:4735: in Apo keine Umrandungen *ein*-schalten, da ich
    sonst die Flyumrandungen doppelt bekomme
    aber nur wenn am Fly ein gesetzt ist, keine
    uebernehmen. Sonst wird gar keine gesetzt
    -> in Apo, do not turn *on* any borders[a visual edge is meant here], because I otherwise get fly-borders twice; but only if fly is turned on, do not copy[take] it over. Otherwise, nothing is set.
sw/source/filter/ww8/ww8par6.cxx:4739: auch wenn kein Rand gesetzt ist, muss das Attribut gesetzt
    werden, sonst ist kein hartes Ausschalten von Style-Attrs
    moeglich
    -> even if no border is set, the attribute must be set, otherwise hard resetting of style-attrs is not possible
sw/source/filter/ww8/ww8par6.cxx:4984: Seiten - Attribute werden nicht mehr als Attribute gehandhabt
    ausser OLST
    -> page attributes are not handled as attributes any more, except OLST
sw/source/filter/ww8/ww8par6.cxx:4987: Arrays zum Lesen der erweiterten ( selbstdefinierten ) SPRMs
    -> Array for reading the (self-defined[unclear if by this code or by another party]) SPRMs
sw/source/filter/ww8/ww8par6.cxx:5034: Funktion zum Einlesen von Sprms. Par1: SprmId
    -> Function fo reading Sprms. Par1: SprmId
sw/source/filter/ww8/ww8par6.cxx:5055: "0" Default bzw. Error
    wird uebersprungen
sw/source/filter/ww8/ww8par6.cxx:5211: "0" Default bzw. Error
    wird uebersprungen
sw/source/filter/ww8/ww8scan.cxx:201: "sprmPicBrcRight" pic.brcRight BRC word
sw/source/filter/ww8/ww8scan.cxx:231: "sprmSDxaRight" sep.dxaRight dxa word
sw/source/filter/ww8/ww8scan.cxx:372: "sprmPicBrcRight" pic.brcRight BRC word
sw/source/filter/ww8/ww8scan.cxx:1887: Field end
    INDEX-Field has set Bit7
sw/source/filter/ww8/ww8scan.cxx:2194: Anz. Fkp-Eintraege des letzten Fkp
    -> Anz. Fkp-entry of the last Fkp
sw/source/filter/ww8/ww8scan.cxx:2200: letzer FC-Eintrag des letzten Fkp
    -> Last FC-entry of the last Fkp
sw/source/filter/ww8/ww8scan.cxx:4064: Der Operator ++ hat eine Tuecke: Wenn 2 Bookmarks aneinandergrenzen, dann
    sollte erst das Ende des ersten und dann der Anfang des 2. erreicht werden
    Liegen jedoch 2 Bookmarks der Laenge 0 aufeinander, *muss* von jedem Bookmark
    erst der Anfang und dann das Ende gefunden werden
    Der Fall
    ist noch nicht geloest, dabei muesste ich in den Anfangs- und Endindices
    vor- und zurueckspringen, wobei ein weiterer Index oder ein Bitfeld
    oder etwas aehnliches zum Merken der bereits abgearbeiteten Bookmarks
    noetig wird
    -> The ++ operator is tricky: If 2 bookmarks follow each other, then the end of the first should be reached first, then the beginning of the second should be reached. However if two bookmarks of length 0 are lying on top of each other, we *must* find the start and end of each bookmark. This case is not solved, for it I would have to jump forward and backwards, and would require another index or bitfield or something similar for remembering the already processed bookmark.
sw/source/filter/ww8/ww8scan.cxx:4359: Am Ende eines Absatzes reichen bei WW6 die Attribute bis hinter das <CR
    Das wird fuer die Verwendung mit dem SW um 1 Zeichen zurueckgesetzt, wenn
    dadurch kein AErger zu erwarten ist
    -> At the end of the paragraph the attributes of WW6 reach beyond the <CR. This is reset[reduced] by 1 character for the use with the SW, if no further harm is expected.
sw/source/filter/ww8/ww8scan.cxx:4382: Absatzende um 1 Zeichen verkuerzen
    -> shorten end of paragraph by 1 character
sw/source/filter/ww8/ww8scan.cxx:4385: gibt es bereits ein Sep-Ende, das auf das jetzige Absatzende
    zeigt ?  ... dann auch um 1 Zeichen verkuerzen
    -> If there is already a end of sep., that points to the end of the current paragraph ? .. then also shorten by 1 character
sw/source/filter/ww8/ww8scan.cxx:4392: Sep Adjust Wenn Ende Char-Attr == Absatzende
    -> Sep Adjust If End Char-Attr == end of paragraph
sw/source/filter/ww8/ww8scan.cxx:4394: ... dann um 1 Zeichen verkuerzen
    -> ... then shorten by 1 character
sw/source/filter/ww8/ww8scan.cxx:4579: PLCFe auf Text-StartPos einstellen
    -> configure PLCFe for Text-StartPos
sw/source/filter/ww8/ww8scan.cxx:4581: initialisieren der Member-Vars Low-Level
    -> initialisation of the member variables low-level
sw/source/filter/ww8/ww8scan.cxx:4608: initialisieren der Member-Vars High-Level
    -> initialisation of the member variables high-level
sw/source/filter/ww8/ww8scan.cxx:4634: bei allen PLCFen initialisiert sein
    -> [this is an incomplete fragment, makes sense if it starts with "should be"] initialised in all PLCFs
sw/source/filter/ww8/ww8scan.cxx:4649: 0. welche Attr.-Klasse
    1. ob ein Attr.-Start ist
    2. CP, wo ist naechste Attr.-Aenderung
    -> 0. which attr-class; 1. if attr.-start, 2. CP, where is the next attr.-change
sw/source/filter/ww8/ww8scan.cxx:4655: dann Anfaenge finden ( ( SEP ), PAP, CHP
    -> then find the starts ( ( SEP ), PAP, CHP)
sw/source/filter/ww8/ww8scan.cxx:4691: gibt die CP-Pos der naechsten Attribut-Aenderung zurueck
    -> returns the CP-Pos after the attribute-change
sw/source/filter/ww8/ww8scan.cxx:4864: Gesamtlaenge Sprms um SprmLaenge verringern
    -> reduce total length Sprms by SprmLaenge[Laenge=length, you may want to rename that variable]
sw/source/filter/ww8/ww8scan.cxx:4870: sicherheitshalber auf Null setzen, da Enden folgen
    -> to be safe set to NULL, because ends follow
sw/source/filter/ww8/ww8scan.cxx:5031: Rueckgabe true fuer Anfang eines Attributes oder Fehler
    false fuer Ende d. Attr
    Restliche Rueckgabewerte werden in der vom Aufrufer zu stellenden Struktur
    WW8PclxManResults geliefert
    -> return true if beginning of the attribute or error, false for end of attribute. Other return values are returned to the caller via the caller-provided WW8PclxManResults structure
sw/source/filter/ww8/ww8scan.cxx:5313: Wunsch-Nr vermerken, File-Versionsnummer ermitteln
    und gegen Wunsch-Nr. checken
    -> remember desired number, determine file version number and check against desired number
sw/source/filter/ww8/ww8scan.cxx:5330: von 101 WinWord 6.0
    102
    und 103 WinWord 6.0 fuer Macintosh
    104
    -> from 101 WinWord 6.0, 102 and 103 WinWord 6.0 for Macintosh, 104
sw/source/filter/ww8/ww8scan.cxx:5419: 2 Longs uebergehen, da unwichtiger Quatsch
    -> skip 2 more longs, because unnecessary rubbish
sw/source/filter/ww8/ww8scan.cxx:5422: weitere 2 Longs nur bei Ver67 ueberspringen
    -> skip 2 more longs only in Ver67
sw/source/filter/ww8/ww8scan.cxx:5435: weiteres Long nur bei Ver67 ueberspringen
    -> skip another long only in Ver67
sw/source/filter/ww8/ww8scan.cxx:5543: weiteres short nur bei Ver67 ueberspringen
    -> skip another short only in Ver67
sw/source/filter/ww8/ww8scan.cxx:5631: ggfs. Ziel-Varaiblen, aus xxx_Ver67 fuellen
    oder Flags setzen
    -> if necessary, fill goal variables from xx_Ver67 or set flags
sw/source/filter/ww8/ww8scan.cxx:5652: speziell fuer WW8
    ermittle die Werte fuer PLCF LST und PLF LFO
    und PLCF fuer TextBox-Break-Deskriptoren
    -> especially for WW8, determine the values of PLCF LST and PLF LFO and PLCF for TextBox-Break-descriptors
sw/source/filter/ww8/ww8scan.cxx:5859: 2 Longs uebergehen, da unwichtiger Quatsch
    -> skip 2 more longs, because unnecessary rubbish
sw/source/filter/ww8/ww8scan.cxx:5862: weitere 2 Longs nur bei Ver67 ueberspringen
    -> skip 2 more longs only in Ver67
sw/source/filter/ww8/ww8scan.cxx:5875: weiteres Long nur bei Ver67 ueberspringen
    -> skip another long only in Ver67
sw/source/filter/ww8/ww8scan.cxx:5975: weiteres short nur bei Ver67 ueberspringen
    -> skip another short only in Ver67
sw/source/filter/ww8/ww8scan.cxx:6116: lies die Laenge der in der Datei gespeicherten Struktur
    -> reads the length of the structure stored in the file
sw/source/filter/ww8/ww8scan.cxx:6167: Trick: obiger Block wird genau einmal durchlaufen
    und kann vorzeitig per "break" verlassen werden
    -> trick: the block above is run exactly once and can be left prematurely via "break"
sw/source/filter/ww8/ww8scan.cxx:6184: Read1STDFixed() liest ein Style ein. Wenn der Style vollstaendig vorhanden
    ist, d.h. kein leerer Slot, dann wird Speicher alloziert und ein Pointer auf
    die ( evtl. mit Nullen aufgefuellten ) STD geliefert. Ist es ein leerer
    Slot, dann wird ein Nullpointer zurueckgeliefert
    -> Read1STDFixed() reads a style. If the style is complete, i.e. no empty Slot, then memory is allocated and a pointer to the (potentially null-filled) STD provided. If it is an empty Slot, a NULL-pointer is returned.
sw/source/filter/ww8/ww8scan.cxx:6229: ab Ver8 sollten diese beiden Felder dazukommen
    -> starting from Ver8 these two fields should be present[have been added]
sw/source/filter/ww8/ww8scan.cxx:6237: man kann nie wissen: vorsichtshalber ueberlesen
    wir eventuelle Fuellsel, die noch zum BASE-Part gehoeren
    -> you never know: to be safe we skip possible fillers which still belong to the BASE-part
sw/source/filter/ww8/ww8scan.cxx:6242: Trick: obiger Block wird genau einmal durchlaufen
    und kann vorzeitig per "break" verlassen werden
    -> trick: the block above is run exactly once and can be left prematurely via "break"
sw/source/filter/ww8/ww8scan.cxx:6331: ab Ver8 sind folgende beiden Felder eingeschoben
    werden von uns ignoriert
    -> starting from Ver8 the following two fields were inserted and are ignored by us
sw/source/filter/ww8/ww8scan.cxx:6593: Zeiger auf Ursprungsarray einen Font nach hinten setzen
    -> reset[set to the back] the pointer to the origin[initial] array of a font
sw/source/filter/ww8/ww8scan.cxx:6613: Suche zu einem Header / Footer den Index in der WW-Liste von Headern / Footern
    -> For a header/footer search in the index of the header/footer WW-list 
sw/source/filter/ww8/ww8scan.cxx:6624: Pferdefuesse bei WinWord6 und -7
    1) Am Anfang des Einlesens muss WWPLCF_HdFt mit Fib und Dop konstruiert werden
    2) Der Haupttext muss sequentiell ueber alle Sections gelesen werden
    3) Fuer jedes vorkommende Header / Footer - Attribut des Haupttextes
    Darf pro Section maximal eins sein ) muss UpdateIndex() genau einmal
    mit dem Parameter des Attributes gerufen werden. Dieser Aufruf muss *nach
    dem letzten Aufruf von GetTextPos() passieren
    4) GetTextPos() darf mit genau einem der obenstehen WW_... aufgerufen werden
    nicht verodern
    dann liefert GetTextPos() vielleicht auch ein richtiges Ergebnis
    -> Problems with WinWord6 und -7: 1) At the start of reading WWPLCF_HdFt has to be constructed with Fib and Dop; 2) The body text must be read sequentially over all sections; 3) For every encountered header/footer attribute of the body text (at most one per section) UpdateIndex() must be called exactly once with the parameter of the attribute. That call must happen *after* the last call of GetTextPos(); 4) GetTextPos() may be called with exactly one of the previoustly named WW_..., do not OR them [combine them with OR]. Then GetTextPos() may actually yield the correct result.
sw/source/filter/ww8/ww8scan.cxx:6648: Groesse des Haupttextes
    und der Fussnoten
    -> Size of the body text and footnotes
sw/source/filter/ww8/ww8scan.cxx:6850: 410 0x19a
    die untersten 9 Bit sind uninteressant
    -> 410 0x19a the lowest 9 bits are not of interest
sw/source/filter/ww8/ww8scan.hxx:177: < Gesamtlaenge ( zum Text ueberlesen
    -> < total length ( for reading[skipping] over text
sw/source/filter/ww8/ww8scan.hxx:181: < Laenge ( == 0, falls kein Ergebnis
    -> < Length ( == 0, if no result
sw/source/filter/ww8/ww8scan.hxx:183: < WW-Flags ( z.B.: vom User geaendert
    -> < WW-Flags ( e.g.: changed by user
sw/source/filter/ww8/ww8scan.hxx:208: < Pointer auf Pos-Array und auf ganze Struktur
    -> < pointer to Pos-Array an the whole[full,entire] structure
sw/source/filter/ww8/ww8scan.hxx:222: geht ueber FC- bzw. CP-Wert
    bzw. naechste groesseren Wert
    -> goes through the FC- respectively CP-value respectively the next bigger value
sw/source/filter/ww8/ww8scan.hxx:279: Pointer auf Pos-Array und auf ganze Struktur
    -> pointer to Pos-Array an the whole[full,entire] structure
sw/source/filter/ww8/ww8scan.hxx:289: Falls im Dok ein PLC fehlt und die FKPs solo dastehen
    machen wir uns hiermit einen PLC
    -> If the document is missing a PLC and the FKPs are standing alone[solo], we create a PLC with this
sw/source/filter/ww8/ww8scan.hxx:300: folgender Ctor generiert ggfs. einen PLC aus nPN und ncpN
    -> following Ctor generates if needed a PLC from nPN and ncpN
sw/source/filter/ww8/ww8scan.hxx:326: Pointer auf Pos-Array und auf ganze Struktur
    -> pointer to Pos-Array an the whole[full,entire] structure
sw/source/filter/ww8/ww8scan.hxx:336: mehrere WW8PLCFpcd_Iter koennen auf die gleiche WW8PLCFpcd zeigen
    -> multiple WW8PLCFpcd_Iter can point to the same WW8PLCFpcd 
sw/source/filter/ww8/ww8scan.hxx:375: PLCF von Sprms oder von anderem ( Footnote
    -> PLCF from Sprms or from another ( Footnote
sw/source/filter/ww8/ww8scan.hxx:504: entweder 1 Byte oder ein komplettes BX
    -> either 1 byte or a complete BX
sw/source/filter/ww8/ww8scan.hxx:540: liefert einen echten Pointer auf das Sprm vom Typ nId
    falls ein solches im Fkp drin ist
    -> provides a real pointer on the Sprm of type nId if such is in the Fkp
sw/source/filter/ww8/ww8scan.hxx:665: Iterator fuer Fuss-/Endnoten und Anmerkungen
    -> Iterator for foot/endnotes and annotations
sw/source/filter/ww8/ww8scan.hxx:801: Sprm-Id ( 0 = ungueltige Id -> ueberspringen
    2..255) oder Pseudo-Sprm-Id (256..260
    bzw. ab Winword-Ver8 die Sprm-Id (800
    -> Sprm-Id ( 0 = invalid Id -> skip 2..255 ) or Pseudo-Sprm-Id (256..260 but from Winword-Ver8 the Sprm-Id (800
sw/source/filter/ww8/ww8scan.hxx:818: hiermit arbeitet der Manager drinnen
    -> with this the manager works internally[inside]
sw/source/filter/ww8/ww8scan.hxx:823: Speicher fuer Attr-Id fuer Attr-Ende(n
    -> Storage for Attr-Id for Attr-end(s
sw/source/filter/ww8/ww8scan.hxx:845: fuer Erkennung erster Sprm einer Gruppe
    -> for the detection of first Sprm of a group
sw/source/filter/ww8/ww8scan.hxx:1070: vom Ctor aus dem FIB gelesene Daten
    entspricht nur ungefaehr der tatsaechlichen Struktur
    des Winword-FIB
    -> data read by Ctor from the FIB is only approximately the real structure of Winword-FIB
sw/source/filter/ww8/ww8scan.hxx:1401: spezielle Listenverwaltung fuer WW8
    -> Special list management for WW8
sw/source/filter/ww8/ww8scan.hxx:1435: General-Varaiblen, die fuer Ver67 und Ver8 verwendet werden
    obwohl sie in der jeweiligen DATEI verschiedene Groesse haben
    -> General[Generic,Overall] variables, which are used for Ver67 and Ver8, although they have different sizes in each FILE
sw/source/filter/ww8/ww8scan.hxx:1450: leider falsch, man braucht auch noch einen fuer den Export
    -> Unfortunately wrong, need another one for the export
sw/source/filter/ww8/ww8scan.hxx:1621: hier sollte bei nFib < 103   Schluss sein, sonst ist Datei fehlerhaft
    -> At nFib < 103 should be the end, otherwise the file is malformed
sw/source/filter/ww8/ww8scan.hxx:1660: hier sollte bei nFib <= 105  Schluss sein, sonst ist Datei fehlerhaft
    -> At nFib <= 105 should be the end, otherwise the file is malformed
sw/source/filter/ww8/ww8struc.hxx:195: Basis zum Einlesen UND zum Arbeiten (wird jeweils unter schiedlich beerbt
    -> Basis for reading AND working (is inherited differently in each case
sw/source/filter/ww8/ww8struc.hxx:215: Hiermit arbeiten wir im Parser (und Dumper
    -> With this we work in the parser (and Dumper
sw/source/filter/ww8/ww8struc.hxx:436: a c h t u n g :     es duerfen keine solchen Bitfelder ueber einen eingelesenes Byte-Array
    gelegt werden
    stattdessen ist ein aBits1 darueber zu legen, das mit & auszulesen ist
    GRUND: Compiler auf Intel und Sparc sortieren die Bits unterschiedlich
    -> w a r n i n g : Such bit fields must not be put over a read [past tense of read, from input] byte array.. Instead you should place a aBits1 over it, and read/write it jointly. REASON: Compile on Intel and Sparc are sorting bits differently.
sw/source/filter/ww8/ww8struc.hxx:534: hiermit wird weitergearbeitet (entspricht weitestgehend dem Ver8-Format
    -> with this we continue (largely matches the Ver8-format
sw/source/filter/ww8/ww8struc.hxx:550: reserved - nicht loeschen: macht das sal_uInt16 voll
    -> reserved - do not delete: fills sal_uInt16
sw/source/filter/ww8/ww8struc.hxx:585: struct SHD fehlt in der Beschreibung
    -> struct SHD is missing in the description
sw/source/filter/xml/XMLRedlineImportHelper.cxx:134: XTextRange -> XTunnel -> SwXTextRange
sw/source/filter/xml/xmltble.cxx:214: order is: -/brush, size/-, size/brush
sw/source/ui/chrdlg/pardlg.cxx:230: Seitenumbruch nur, wenn der Cursor im Body-Bereich und nicht in
    einer Tabelle steht
    -> page break only if cursor is placed in the body and not in a table
sw/source/uibase/fldui/fldmgr.cxx:640: determine FormatId from Pseudo-ID
sw/source/uibase/shells/basesh.cxx:1172: Set border attributes via Frame-Manager
sw/source/uibase/shells/basesh.cxx:1199: Set border attributes Get/SetTabBorders
sw/source/uibase/shells/basesh.cxx:1204: Set border attributes via Frame-Manager
sw/source/uibase/shells/basesh.cxx:2411: Set border attributes Get/SetTabBorders
sw/source/uibase/shells/basesh.cxx:2427: Set border attributes via Frame-Manager
sw/source/uibase/uiview/srcview.cxx:150: 1.Border => Line, 2+3 Border = Space
